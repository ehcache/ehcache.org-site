var info =
{
"pages":
[
["-webhelp\u002Fto-ehcache_online_documentation_library.html","Welcome to the Ehcache 2.10 Online Documentation Library","This library contains the product documentation for Ehcache, an open source, standards-based cache for boosting performance, offloading your database, and simplifying scalability. Ehcache is the most widely-used Java-based cache because it\u0027s robust, proven, and full-featured. Ehcache scales from in-...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair1.js"]
,["Ehcache_Documentation_Set\u002Fco-ehcache_release_notes.html","Ehcache 2.10 Release Notes","For detailed information about what is new in Ehcache, see the Release Notes for Ehcache 2.10 on the Release Information page. About Ehcache What is Ehcache? Ehcache is an open-source, standards-based cache for boosting performance, offloading your database, and simplifying scalability. As a robust,...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair2.js"]
,["Ehcache_Documentation_Set\u002Fto-title_about_ehcache.html","About Ehcache","What is Ehcache? Ehcache is an open-source, standards-based cache for boosting performance, offloading your database, and simplifying scalability. As a robust, proven, and full-featured solution, it is today\u2019s most widely used Java-based cache. You can use Ehcache as a general-purpose cache or a sec...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair3.js"]
,["Ehcache_Documentation_Set\u002Fco-over_what_is_ehcache.html","What is Ehcache?","Ehcache is an open-source, standards-based cache for boosting performance, offloading your database, and simplifying scalability. As a robust, proven, and full-featured solution, it is today\u2019s most widely used Java-based cache. You can use Ehcache as a general-purpose cache or a second-level cache f...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair4.js"]
,["Ehcache_Documentation_Set\u002Fco-cache_basic_terms.html","Basic Terms","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Cache Wiktionary defines a cache as \u0022a store of things that will be required in the future, and can be retrieved rapidly.\u0022 A cache is a collection of temporary data that either duplicates data located elsewhere or is the result of a computa...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair5.js"]
,["Ehcache_Documentation_Set\u002Fto-basics_why_caching_works.html","Why Caching Works","Locality of Reference <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> While Ehcache concerns itself with Java objects, caching is used throughout computing, from CPU caches to the Internet Domain Name System (DNS) system. Why? Because many computer systems exhibit \u0022locality of reference....","Ehcache_Documentation_Set\u002Fpairs\u002Fpair6.js"]
,["Ehcache_Documentation_Set\u002Fco-basics_locality_of_reference.html","Locality of Reference","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> While Ehcache concerns itself with Java objects, caching is used throughout computing, from CPU caches to the Internet Domain Name System (DNS) system. Why? Because many computer systems exhibit \u0022locality of reference.\u0022 Data that is near ot...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair7.js"]
,["Ehcache_Documentation_Set\u002Fco-basics_will_app_benefit.html","Will an Application Benefit from Caching?","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Often the answer is yes, especially if the application is I\u002FO bound. If an application is I\u002FO bound and depends on the rate at which data can be obtained. If it is CPU bound, then the time taken principally depends on the speed of the CPU an...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair8.js"]
,["Ehcache_Documentation_Set\u002Fco-basics_how_much_speed_up.html","How Much Will an Application Speed up with Caching?","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>In applications that are I\u002FO bound, which is most business applications, most of the response time is getting data from a database. In a system where each piece of data is used only one time, there is no benefit. In a system where a high pro...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair9.js"]
,["Ehcache_Documentation_Set\u002Fco-top_topology_types.html","Topology Types","!!!EHC!!! (section) Standalone \u2013 The data set is held in the application node. Any other application nodes are independent with no communication between them. If a standalone topology is used where there are multiple application nodes running the same application, then there is Weak Consistency betw...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair10.js"]
,["Ehcache_Documentation_Set\u002Fco-store_storage_tiers.html","Storage Tiers","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> You can divide a cache or in-memory data set across the following storage areas, referred to as tiers: MemoryStore \u2013 On-heap memory used to hold cache elements. This tier is subject to Java garbage collection.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair11.js"]
,["Ehcache_Documentation_Set\u002Fco-arc_automatic_resource_control.html","Automatic Resource Control","Automatic Resource Control (ARC) gives you fine-grained controls for tuning performance and enabling trade-offs between throughput, latency and data access. Independently adjustable configuration parameters include differentiated tier-based sizing and pinning hot or eternal data in the most effectiv...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair12.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_installation_guide.html","Installation Guide","Installing Ehcache for General-Purpose Caching Download Ehcache from http:\u002F\u002Fehcache.org\u002Fdownloads. Beginning with Ehcache 1.7.1, Ehcache depends on SLF4J (http:\u002F\u002Fwww.slf4j.org) for logging. SLF4J is a logging framework with a choice of concrete logging implementations. For configuration details, see...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair13.js"]
,["Ehcache_Documentation_Set\u002Fco-installing_ehcache_for_general_purpose_caching.html","Installing Ehcache for General-Purpose Caching","Download Ehcache from http:\u002F\u002Fehcache.org\u002Fdownloads. Beginning with Ehcache 1.7.1, Ehcache depends on SLF4J (http:\u002F\u002Fwww.slf4j.org) for logging. SLF4J is a logging framework with a choice of concrete logging implementations. For configuration details, see \u0022Logging\u0022 in the Ehcache Operations Guide.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair14.js"]
,["Ehcache_Documentation_Set\u002Fco-installing_ehcache_for_specific_technologies.html","Installing Ehcache for Specific Technologies","Hibernate Perform the same steps as for general-purpose caching (see Installing Ehcache for General-Purpose Caching). Create caches in ehcache.xml. For more information, see \u0022Using Ehcache with Hibernate\u0022 in the Integrations book.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair15.js"]
,["Ehcache_Documentation_Set\u002F_ehcache_all.1.016.html","Product Documentation","Ehcache Developer Guide Key Classes and Methods About the Key Classes <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache consists of a CacheManager, which manages logical data sets represented as Caches. A Cache object contains Elements, which are essentially name-value pairs. You c...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair16.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_developer_guide.html","Ehcache Developer Guide","Key Classes and Methods About the Key Classes <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache consists of a CacheManager, which manages logical data sets represented as Caches. A Cache object contains Elements, which are essentially name-value pairs. You can use Cache objects to ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair17.js"]
,["Ehcache_Documentation_Set\u002Fto-key_classes_and_methods.html","Key Classes and Methods","About the Key Classes <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache consists of a CacheManager, which manages logical data sets represented as Caches. A Cache object contains Elements, which are essentially name-value pairs. You can use Cache objects to hold any kind of data th...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair18.js"]
,["Ehcache_Documentation_Set\u002Fco-key_about_key_classes.html","About the Key Classes","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache consists of a CacheManager, which manages logical data sets represented as Caches. A Cache object contains Elements, which are essentially name-value pairs. You can use Cache objects to hold any kind of data that you want to keep in...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair19.js"]
,["Ehcache_Documentation_Set\u002Fco-key_cachemanager.html","CacheManager","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> The CacheManager class is used to manage caches. Creation of, access to, and removal of caches is controlled by a named CacheManager. CacheManager Creation Modes","Ehcache_Documentation_Set\u002Fpairs\u002Fpair20.js"]
,["Ehcache_Documentation_Set\u002Fco-key_cache.html","Cache","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>A Cache is a thread-safe logical representation of a set of data elements, analogous to a cache region in many caching systems. Once a reference to a cache is obtained (through a CacheManager), logical actions can be performed. The physical ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair21.js"]
,["Ehcache_Documentation_Set\u002Fco-key_element.html","Element","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>An element is an atomic entry in a cache. It has a key, a value, and a record of accesses. Elements are put into and removed from caches. They can also expire and be removed by the cache, depending on the cache settings.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair22.js"]
,["Ehcache_Documentation_Set\u002Fto-codebasics_basic_caching.html","Basic Caching","Creating a CacheManager <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>All usages of the Ehcache API start with the creation of a CacheManager. The following code snippets illustrate various ways to create one.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair23.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_creating_the_cachemanager.html","Creating a CacheManager","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>All usages of the Ehcache API start with the creation of a CacheManager. The following code snippets illustrate various ways to create one. Singleton versus Instance","Ehcache_Documentation_Set\u002Fpairs\u002Fpair24.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_loading_a_configuration.html","Loading a Configuration","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>When a CacheManager is created, it creates caches found in a provided configuration. The following creates a CacheManager based on the configuration defined in the ehcache.xml file in the classpath.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair25.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_adding_removing_caches.html","Adding and Removing Caches Programmatically","Adding Caches Programmatically <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> You are not limited to using caches that are placed in the CacheManager configuration. A new cache based on the default configuration can be added to a CacheManager very simply:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair26.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_performing_cache_operations.html","Performing Basic Cache Operations","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> The following examples refer to manager, which is a reference to a CacheManager that contains a cache called sampleCache1. Obtaining a reference to a Cache","Ehcache_Documentation_Set\u002Fpairs\u002Fpair27.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_shutting_down_cachemanager.html","Shut down the CacheManager","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> You should shut down a CacheManager after use. It does have a shut-down hook, but it is a best practice to shut it down in your code. The following shuts down the singleton CacheManager:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair28.js"]
,["Ehcache_Documentation_Set\u002Fco-codebasics_the_junit_tests.html","JUnit Tests","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache comes with a comprehensive JUnit test suite, which not only tests the code, but shows you how to use the Ehcache API. You can browse the available tests here: https:\u002F\u002Ffisheye.terracotta.org\u002Fbrowse\u002FEhcache\u002Fbranches\u002Fehcache-2.10.1\u002Fehc...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair29.js"]
,["Ehcache_Documentation_Set\u002Fto-pattrn_cache_usage_patterns.html","Cache Usage Patterns","Supported Usage Patterns <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> There are several common access patterns when using a cache. Ehcache supports the following patterns: Cache-aside (or direct manipulation)","Ehcache_Documentation_Set\u002Fpairs\u002Fpair30.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_introduction_to_patterns.html","Supported Usage Patterns","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> There are several common access patterns when using a cache. Ehcache supports the following patterns: Cache-aside (or direct manipulation) Cache-as-sor (a combination of read-through and write-through or write-behind patterns)","Ehcache_Documentation_Set\u002Fpairs\u002Fpair31.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_cache_aside.html","cache-aside","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> With the cache-aside pattern, application code uses the cache directly. This means that application code which accesses the system-of-record (SOR) should consult the cache first, and if the cache contains the data, then return the data dire...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair32.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_cache_as_sor.html","cache-as-sor","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The cache-as-sor pattern implies using the cache as though it were the primary system-of-record (SOR). The pattern delegates SOR reading and writing activities to the cache, so that application code is absolved of this responsibility.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair33.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_read_through.html","read-through","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The read-through pattern mimics the structure of the cache-aside pattern when reading data. The difference is that you must implement the CacheEntryFactory interface to instruct the cache how to read objects on a cache miss, and you must wra...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair34.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_write_though.html","write-through","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> The write-through pattern mimics the structure of the cache-aside pattern when writing data. The difference is that you must implement the CacheWriter interface and configure the cache for write-through mode.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair35.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_write_behind.html","write-behind","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> The write-behind pattern changes the timing of the write to the system-of-record. Rather than writing to the system-of-record in the same thread of execution, write-behind queues the data for write at a later time.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair36.js"]
,["Ehcache_Documentation_Set\u002Fco-pattrn_copy_cache.html","Copy Cache","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>A copy cache can have two behaviors: it can copy Element instances it returns, when copyOnRead is true and copy elements it stores, when copyOnWrite to true.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair37.js"]
,["Ehcache_Documentation_Set\u002Fto-srch_searching_a_cache.html","Searching a Cache","About Searching <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The Search API allows you to execute arbitrarily complex queries against caches. The development of alternative indexes on values provides the ability for data to be looked up based on multiple criteria instead of just keys.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair38.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_about_searching.html","About Searching","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The Search API allows you to execute arbitrarily complex queries against caches. The development of alternative indexes on values provides the ability for data to be looked up based on multiple criteria instead of just keys.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair39.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_making_cache_searchable.html","Making a Cache Searchable","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Caches can be made searchable, on a per cache basis, either by configuration or programmatically. By Configuration Caches are made searchable by adding a <searchable\u002F> tag to the cache definition in the ehcache.xml file.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair40.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_defining_attributes.html","Defining Attributes","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>In addition to configuring a cache to be searchable, you must define the attributes to be used in searches. Attributes are extracted from keys or values during search by using AttributeExtractors. An extracted attribute must be one of the fo...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair41.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_creating_a_query.html","Creating a Query","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache uses a fluent, object-oriented query API, following the principles of a Domain-Specific Language (DSL), which should be familiar to Java programmers. For example:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair42.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_obtaining_and_organizing_query_results.html","Obtaining and Organizing Query Results","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Queries return a Results object that contains a list of objects of class Result. Each element in the cache that a query finds is represented as a Result object. For example, if a query finds 350 elements, there will be 350 Result objects. H...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair43.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_best_practices_for_searches.html","Best Practices for Optimizing Searches","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Construct searches by including only the data that is actually required. Only use includeKeys( ) and\u002For includeAttribute( ) if those values are required for your application logic.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair44.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_concurrency_considerations.html","Concurrency Considerations","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> <<FFC-The indexing information in this topic appears in all products in the 2.8\u002F4.1 doc, so we will leave it for now. We should check whether it should be removed from the Ehcache version for future releases.>>Unlike cache operations, which...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair45.js"]
,["Ehcache_Documentation_Set\u002Fco-srch_working_with_nulls.html","Options for Working with Nulls","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> <<FFC-This section is not currently in the Ehcache doc. Is that deliberate??The Search API supports using the presence of a null as search criteria.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair46.js"]
,["Ehcache_Documentation_Set\u002Fto-lock_using_explicit_locking.html","Using Explicit Locking","About Explicit Locking <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache contains an implementation which provides for explicit locking, using read and write locks. With explicit locking, it is possible to get more control over Ehcache \u0027s locking behavior to allow business logic to...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair47.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_about_locking.html","About Explicit Locking","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache contains an implementation which provides for explicit locking, using read and write locks. With explicit locking, it is possible to get more control over Ehcache \u0027s locking behavior to allow business logic to apply an atomic change...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair48.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_example.html","Code Sample for Explicit Locking","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The following is a simple example that shows how to use explicit locking. String key = \u0022123\u0022; Foo val = new Foo(); cache.acquireWriteLockOnKey(key); try { cache.put(new Element(key, val)); } finally { cache.releaseWriteLockOnKey(key); } ...s...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair49.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_how_locking_works.html","How Locking Works","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>A READ lock does not prevent other READers from also acquiring a READ lock and reading. A READ lock cannot be obtained if there is an outstanding WRITE lock. It will queue.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair50.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_locking_methods.html","The Locking API","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The following methods are available on Cache and Ehcache. \u002F** * Acquires the proper read lock for a given cache key * * @param key - The key that retrieves a value that you want to protect via * locking. *\u002F public void acquireReadLockOnKey(O...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair51.js"]
,["Ehcache_Documentation_Set\u002Fco-lock_supported_topologies.html","Supported Topologies","<<FFC-Currently, this topic does not appear in the current BigMem doc, only Ehcache. We will need to find out whether it should go into the BigMem versions too. If so, we can add it in a refresh or the next release. >>Except as noted in the The Locking API, the locking API supports the standalone an...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair52.js"]
,["Ehcache_Documentation_Set\u002Fto-bsp_blocking_and_self_populating_caches.html","Blocking and Self Populating Caches","About Blocking and Self-Populating Caches <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The net.sf.ehcache.constructs package contains some applied caching classes which use the core classes to solve everyday caching problems. Two of these are BlockingCache and SelfPopulatingCache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair53.js"]
,["Ehcache_Documentation_Set\u002Fco-bsp_blocking_and_selfpopulating_classes.html","About Blocking and Self-Populating Caches","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The net.sf.ehcache.constructs package contains some applied caching classes which use the core classes to solve everyday caching problems. Two of these are BlockingCache and SelfPopulatingCache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair54.js"]
,["Ehcache_Documentation_Set\u002Fco-bsp_blocking_class.html","Blocking Cache","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Imagine you have a very busy web site with thousands of concurrent users. Rather than being evenly distributed in what they do, they tend to gravitate to popular pages. These pages are not static, they have dynamic data which goes stale in ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair55.js"]
,["Ehcache_Documentation_Set\u002Fco-bsp_selfpopulating_class.html","SelfPopulatingCache","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Sometimes, you want to use the BlockingCache, but the requirement to always release the lock results in complicated code. You also want to think about what you are doing without thinking about the caching. Enter the SelfPopulatingCache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair56.js"]
,["Ehcache_Documentation_Set\u002Fto-tx_transaction_support.html","Transaction Support","About Transaction Support !!!EHC!!!Transactions are supported in versions of Ehcache 2.0 and higher. The 2.3.x or lower releases only support XA. However since ehcache 2.4 support for both Global Transactions with xa_strict and xa modes, and Local Transactions with local mode has been added.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair57.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_about_transaction_support.html","About Transaction Support","!!!EHC!!!Transactions are supported in versions of Ehcache 2.0 and higher. The 2.3.x or lower releases only support XA. However since ehcache 2.4 support for both Global Transactions with xa_strict and xa modes, and Local Transactions with local mode has been added.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair58.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_requirements_for_transactional_cache.html","Requirements for Transactional Caches","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The objects you store in your transactional cache must: Implement java.io.Serializable\u2014This is required to store cached objects when the cache is distributed in a Terracotta cluster, and it is also required by the copy-on-read \u002F copy-on-writ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair59.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_configuring_transactional_cache.html","Configuring Transactional Cache","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Transactions are enabled on a cache-by-cache basis with the transactionalMode cache attribute. The allowed values are: xa_strict xa local off","Ehcache_Documentation_Set\u002Fpairs\u002Fpair60.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_global_transactions.html","Working with Global Transactions","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Global Transactions are supported by Ehcache . Ehcache <<FFC-can we say a cache or an in-memory data set instead of Ehcache? Or do we specifically mean a cache that is represented by an Ehcache object?>> can act as an {XAResouce} to particip...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair61.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_failure_recovery.html","Failure Recovery","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>In support of the JTA specification, only prepared transaction data is recoverable. Prepared data is persisted onto the cluster and locks on the memory are held. This means that non-clustered caches cannot persist transaction data. Therefore...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair62.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_sample_applications.html","Sample Applications","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The following sample applications showing how to use XA with a variety of technologies. XA Sample Application This sample application uses the JBoss application server. It shows an example using User managed transactions. Although most peopl...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair63.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_transaction_managers.html","Transaction Managers","Automatically Detected Transaction Managers <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache automatically detects and uses the following transaction managers in the order shown below:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair64.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_local_transactions.html","Working with Local Transactions","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Local Transactions allow single-phase commit across multiple cache operations, across one or more caches, and in the same CacheManager.<<FFC-the EHC version includes the phrase \u0022whether distributed or standalone\u0022 in this statement. Should we...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair65.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_performance_considerations.html","Performance Considerations","Managing Contention <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>If two transactions attempt to perform a cache operation on the same element, the following rules apply: The first transaction gets access","Ehcache_Documentation_Set\u002Fpairs\u002Fpair66.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_potential_timeouts.html","Potential Timeouts in a Transactional Cache","Why Do Some Threads Regularly Time Out and Throw an Exception? <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>In transactional caches, write locks are in force whenever an element is updated, deleted, or added. With concurrent access, these locks cause some threads to block and appear to...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair67.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_transactions_with_write-behind_through.html","Transactions in Write-Behind and Write-Through Caches","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>If your transaction-enabled cache is being used with a writer, write operations are queued until transaction commit time. A solely write-through approach would have its potential XAResource participate in the same transaction.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair68.js"]
,["Ehcache_Documentation_Set\u002Fco-tx_support_for_third_party_prods.html","Support for Other Transaction Systems","Is IBM WebSphere Transaction Manager supported? <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Mostly. The \u0022xa_strict\u0022 mode is not supported due to each version of WebSphere being a custom implementation. That is, it has no stable interface to implement against. However, \u0022xa\u0022, which uses...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair69.js"]
,["Ehcache_Documentation_Set\u002Fto-writethrough_and_writebehind_caches.html","Write-Through and Write-Behind Caches","About Write-Through and Write-Behind Caches <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Write-through caching is a caching pattern where writes to the cache cause writes to an underlying resource. The cache acts as a facade to the underlying resource. With this pattern, it often makes...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair70.js"]
,["Ehcache_Documentation_Set\u002Fco-write_about_write_through_behind.html","About Write-Through and Write-Behind Caches","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Write-through caching is a caching pattern where writes to the cache cause writes to an underlying resource. The cache acts as a facade to the underlying resource. With this pattern, it often makes sense to read through the cache too.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair71.js"]
,["Ehcache_Documentation_Set\u002Fco-write_using_combined_read_through_write_behind.html","Using a Combined Read-Through and Write-Behind Cache","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>For applications that are not tolerant of inconsistency, the simplest solution is for the application to always read through the same cache that it writes through. Provided all database writes are through the cache, consistency is guaranteed...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair72.js"]
,["Ehcache_Documentation_Set\u002Fco-write_sample_application.html","Write-Behind Sample Application","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>A sample web application for a raffle is available, which fully demonstrates how to use write behind. You can also check out the Ehcache Raffle application, that demonstrates Cache Writers and Cache Loaders from github.com. <<FFC-This paragr...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair73.js"]
,["Ehcache_Documentation_Set\u002Fco-write_configuring_cache_writer.html","Configuring a Cache Writer","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> There are many configuration options for a cache writer. For a full list of configuration properties, see the Javadoc at http:\u002F\u002Fwww.ehcache.org\u002Fapidocs\u002F2.10.1\u002F for the CacheWriterConfiguration class.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair74.js"]
,["Ehcache_Documentation_Set\u002Fre-write_cache_writer_factory_attributes.html","CacheWriterFactory Attributes","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The CacheWriterFactory supports the following attributes: All modes write-mode [write-through | write-behind] - Whether to run in write-behind or write-through mode. The default is write-through.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair75.js"]
,["Ehcache_Documentation_Set\u002Fco-write_api.html","API","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> CacheLoaders are exposed for API use through the cache.getWithLoader(...) method. CacheWriters are exposed with cache.putWithWriter(...) and cache.removeWithWriter(...) methods. The code below show the method signature for the cache.putWith...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair76.js"]
,["Ehcache_Documentation_Set\u002Fco-write_spi.html","SPI","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The write-through SPI is the CacheWriter interface. Implementers perform writes to the underlying resource in their implementation. \u002F** * A CacheWriter is an interface used for write-through and write-behind caching * to an underlying resour...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair77.js"]
,["Ehcache_Documentation_Set\u002Fco-write_monitoring_size_of_queue.html","Monitoring the Size of Write-Behind Queue","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Use the method net.sf.ehcache.statistics.LiveCacheStatistics#getWriterQueueLength() to get the length of the queue. This method returns the number of elements on the local queue (in all local buckets) that are waiting to be processed, or -1 ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair78.js"]
,["Ehcache_Documentation_Set\u002Fco-write_handling_exceptions.html","Handling Exceptions that Occur After a Writer is Called","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Once all retry attempts have been executed, on exception the element (or all elements of that batch) will be passed to the net.sf.ehcache.writer.CacheWriter#throwAway() method. The user can then act one last time on the element that failed t...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair79.js"]
,["Ehcache_Documentation_Set\u002Fto-caload_cache_loaders.html","Cache Loaders","About Cache Loaders <<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !! NOT BMM !!!>>A CacheLoader is an interface that specifies load() and loadAll() methods with a variety of parameters. CacheLoaders are incorporated into the core Ehcache classes and can be configured in ehcache.xml. CacheLoade...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair80.js"]
,["Ehcache_Documentation_Set\u002Fco-caload_about_cache_loaders.html","About Cache Loaders","<<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !! NOT BMM !!!>>A CacheLoader is an interface that specifies load() and loadAll() methods with a variety of parameters. CacheLoaders are incorporated into the core Ehcache classes and can be configured in ehcache.xml. CacheLoaders are invoked in th...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair81.js"]
,["Ehcache_Documentation_Set\u002Fco-caload_declarative_configuration.html","Declarative Configuration","<<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !!!!!! NOT BMM !!!!!>>The cacheLoaderFactory element specifies a CacheLoader, which can be used both asynchronously and synchronously to load objects into a cache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair82.js"]
,["Ehcache_Documentation_Set\u002Fco-caload_implementing_a_cache_loader_factory.html","Implementing a CacheLoaderFactory and CacheLoader","<<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !! NOT BMM !!!>>CacheLoaderFactory is an abstract factory for creating CacheLoaders. Implementers should provide their own concrete factory, extending this abstract factory. It can then be configured in ehcache.xml. The factory class needs to be a ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair83.js"]
,["Ehcache_Documentation_Set\u002Fco-caload_programmatic_configuration.html","Programmatic Configuration","<<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !! NOT BMM !!!>>The following methods on Cache allow runtime interrogation, registration and unregistration of loaders: \u002F** * Register a {@link CacheLoader} with the cache. It will then be tied into the * cache lifecycle. * * If the CacheLoader is ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair84.js"]
,["Ehcache_Documentation_Set\u002Fto-cmlst_cache_manager_event_listeners.html","Cache Manager Event Listeners","About CacheManager Event Listeners <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>CacheManager event listeners allow implementers to register callback methods that will be executed when a CacheManager event occurs. CacheManager listeners implement the CacheManagerEventListener interface....","Ehcache_Documentation_Set\u002Fpairs\u002Fpair85.js"]
,["Ehcache_Documentation_Set\u002Fco-cmlst_about_cachemanager_listeners.html","About CacheManager Event Listeners","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>CacheManager event listeners allow implementers to register callback methods that will be executed when a CacheManager event occurs. CacheManager listeners implement the CacheManagerEventListener interface. The events include:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair86.js"]
,["Ehcache_Documentation_Set\u002Fco-cmlst_configuring_cachemanager_listener.html","Configuring a Cache Manager Event Listener","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>One CacheManagerEventListenerFactory and hence one CacheManagerEventListener can be specified per CacheManager instance. The factory is configured as below: <<FFC-I think we should eventually provide a little more context...indicate that thi...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair87.js"]
,["Ehcache_Documentation_Set\u002Fco-cmlst_implementing_cachemanager_listener.html","Implementing a CacheManager Event Listener Factory and CacheManager Event Listener","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>CacheManagerEventListenerFactory is an abstract factory for creating CacheManager listeners. Implementers should provide their own concrete factory extending this abstract factory. It can then be configured in ehcache.xml.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair88.js"]
,["Ehcache_Documentation_Set\u002Fto-clst_cache_event_listeners.html","Cache Event Listeners","About Cache Event Listeners <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Cache listeners allow implementers to register callback methods that will be executed when a cache event occurs. Cache listeners implement the CacheEventListener interface. The events include:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair89.js"]
,["Ehcache_Documentation_Set\u002Fco-clst_about_cache_listeners.html","About Cache Event Listeners","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Cache listeners allow implementers to register callback methods that will be executed when a cache event occurs. Cache listeners implement the CacheEventListener interface. The events include:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair90.js"]
,["Ehcache_Documentation_Set\u002Fco-clst_configuring_cache_listener.html","Configuring a Cache Event Listener","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Cache event listeners are configured per cache. Each cache can have multiple listeners. Each listener is configured by adding a cacheEventListenerFactory element as follows:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair91.js"]
,["Ehcache_Documentation_Set\u002Fco-clst_implementing_listener_factory.html","Implementing a Cache Event Listener Factory and Cache Event Listener","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>A CacheEventListenerFactory is an abstract factory for creating cache event listeners. Implementers should provide their own concrete factory, extending this abstract factory. It can then be configured in ehcache.xml. The following example d...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair92.js"]
,["Ehcache_Documentation_Set\u002Fco-clst_adding_listener_programatically.html","Adding a Listener Programmatically","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>To add a listener programmatically, follow this example: cache.getCacheEventNotificationService().registerListener(myListener); Cache Exception Handlers","Ehcache_Documentation_Set\u002Fpairs\u002Fpair93.js"]
,["Ehcache_Documentation_Set\u002Fto-exhr_cache_exception_handlers.html","Cache Exception Handlers","About Exception Handlers <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>By default, most cache operations will propagate a runtime CacheException on failure. An interceptor, using a dynamic proxy, may be configured so that a CacheExceptionHandler can be configured to intercept Exceptions...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair94.js"]
,["Ehcache_Documentation_Set\u002Fco-except_about_exception_handlers.html","About Exception Handlers","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>By default, most cache operations will propagate a runtime CacheException on failure. An interceptor, using a dynamic proxy, may be configured so that a CacheExceptionHandler can be configured to intercept Exceptions. Errors are not intercep...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair95.js"]
,["Ehcache_Documentation_Set\u002Fco-except_declarative_configuration.html","Declarative Configuration","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>To configure an exception handler declaratively, add the cacheExceptionHandlerFactory element to ehcache.xml as shown in the following example:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair96.js"]
,["Ehcache_Documentation_Set\u002Fco-except_implementing_handler_factory.html","Implementing a Cache Exception Handler Factory and Cache Exception Handler","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> A CacheExceptionHandlerFactory is an abstract factory for creating cache exception handlers. Implementers should provide their own concrete factory, extending this abstract factory. It can then be configured in ehcache.xml.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair97.js"]
,["Ehcache_Documentation_Set\u002Fco-except_programmatic_configuration.html","Programmatic Configuration","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The following example shows how to add exception handling to a cache, and then add the cache back into cache manager so that all clients obtain the cache handling decoration.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair98.js"]
,["Ehcache_Documentation_Set\u002Fto-dec_cache_decorators.html","Cache Decorators","About Cache Decorators <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Ehcache uses the Ehcache interface, of which Cache is an implementation. It is possible and encouraged to create Ehcache decorators that are backed by a Cache instance, implement Ehcache and provide extra functionality...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair99.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_about_cache_decorators.html","About Cache Decorators","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Ehcache uses the Ehcache interface, of which Cache is an implementation. It is possible and encouraged to create Ehcache decorators that are backed by a Cache instance, implement Ehcache and provide extra functionality.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair100.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_builtin_decorators.html","Built-in Decorators","BlockingCache <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> <<FFC-we need to include an stem sentence on this page that explains what we mean by \u0022build-in decorators.\u0022 Something like \u0022The following are decorators that are provided by the Ehcache API.\u0022 Get correct wording from Foram.>>T...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair101.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_creating_a_decorator.html","Creating a Decorator","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>You can add decorators to a cache either declaratively in the ehcache.xml configuration file, or programmatically. <<FFC-Verify that this intro statement is OK. Also...should the title be, \u0022Creating a Decorated Cache?\u0022>><<Eventually, we shou...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair102.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_creating_a_decorator_2.html","Declarative Creation","You can configure decorators directly in ehcache.xml. The decorators will be created and added to the CacheManager. It accepts the name of a concrete class that extends net.sf.ehcache.constructs.CacheDecoratorFactory","Ehcache_Documentation_Set\u002Fpairs\u002Fpair103.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_creating_a_decorator_3.html","Programmatic Creation","Cache decorators are created as follows: <<FFC-is this a valid example? Maybe we need a little more context to explain it. Will leave it for this release, because this is the way it is today.>> BlockingCache newBlockingCache = new BlockingCache(cache);","Ehcache_Documentation_Set\u002Fpairs\u002Fpair104.js"]
,["Ehcache_Documentation_Set\u002Fco-dec_adding_cache_to_cache_manager.html","Adding Decorated Caches to a CacheManager","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Having created a decorator programmatically, it is generally useful to put it in a place where multiple threads can access it. Note that decorators created via configuration in ehcache.xml have already been added to the CacheManager.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair105.js"]
,["Ehcache_Documentation_Set\u002Fto-ext_cache_extensions.html","Cache Extensions","About Cache Extensions <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Cache extensions are a general-purpose mechanism to allow generic extensions to a cache. Cache extensions are tied into the cache lifecycle. For that reason, this interface has the lifecycle methods.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair106.js"]
,["Ehcache_Documentation_Set\u002Fco-ext_about_cache_extensions.html","About Cache Extensions","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Cache extensions are a general-purpose mechanism to allow generic extensions to a cache. Cache extensions are tied into the cache lifecycle. For that reason, this interface has the lifecycle methods.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair107.js"]
,["Ehcache_Documentation_Set\u002Fco-ext_declarative_configuration.html","Declarative Configuration","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Cache extensions are configured per cache. Each cache can have zero or more. You configure a cache extension by adding a cacheExceptionHandlerFactory element as shown in the following example:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair108.js"]
,["Ehcache_Documentation_Set\u002Fco-ext_implementing_extension_factory.html","Implementing a Cache Extension Factory and Cache Extension","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>A CacheExtensionFactory is an abstract factory for creating cache extension. Implementers should provide their own concrete factory, extending this abstract factory. It can then be configured in ehcache.xml. The factory class needs to be a c...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair109.js"]
,["Ehcache_Documentation_Set\u002Fco-ext_programmatic_configuration.html","Programmatic Configuration","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Cache extensions can also be programmatically added to a Cache as shown below: TestCacheExtension testCacheExtension = new TestCacheExtension(cache, ...); testCacheExtension.init(); cache.registerCacheExtension(testCacheExtension);","Ehcache_Documentation_Set\u002Fpairs\u002Fpair110.js"]
,["Ehcache_Documentation_Set\u002Fto-evict_cache_eviction_algorithms.html","Cache Eviction Algorithms","About Cache Eviction Algorithms <<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !! NOT BMM !!!>>A cache eviction algorithm is a way of deciding which element to evict when the cache is full. In Ehcache , the memory store and the off-heap store might be limited in size. When these stores get full...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair111.js"]
,["Ehcache_Documentation_Set\u002Fco-evict_about_eviction_algorithms.html","About Cache Eviction Algorithms","<<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !! NOT BMM !!!>>A cache eviction algorithm is a way of deciding which element to evict when the cache is full. In Ehcache , the memory store and the off-heap store might be limited in size. When these stores get full, elements are evicted. The evic...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair112.js"]
,["Ehcache_Documentation_Set\u002Fco-evict_builtin_algorithms.html","Built-in Memory Store Eviction Algorithms","<<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !! NOT BMM !!!>>The idea here is, given a limit on the number of items to cache, how to choose the thing to evict that gives the best result. In 1966 Laszlo Belady showed that the most efficient caching algorithm would be to always discard the info...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair113.js"]
,["Ehcache_Documentation_Set\u002Fco-evict_plugging_in_your_own_eviction_algorighms.html","Plugging in Your own Eviction Algorithm","<<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !! NOT BMM !!!>> Ehcache allows you to plug in your own eviction algorithm using Cache.setMemoryStoreEvictionPolicy(Policy policy). You can utilize any Element metadata, which makes possible some very interesting approaches. For example, you might ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair114.js"]
,["Ehcache_Documentation_Set\u002Fco-evict_diskstore_eviction_algorighms.html","Disk Store Eviction Algorithm","<<THIS TOPIC IS SHARED BY EHC and BMG PRODUCT DOCS. !! NOT BMM !!!>>The disk store uses the Least Frequently Used algorithm to evict an element when the store it is full. Class Loading About Class Loading","Ehcache_Documentation_Set\u002Fpairs\u002Fpair115.js"]
,["Ehcache_Documentation_Set\u002Fto-class_loading.html","Class Loading","About Class Loading <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Class loading, within the plethora of environments that Ehcache can be running, could be complex. But with Ehcache, all class loading is done in a standard way in one utility class: ClassLoaderUtil.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair116.js"]
,["Ehcache_Documentation_Set\u002Fco-class_about_class_loading.html","About Class Loading","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Class loading, within the plethora of environments that Ehcache can be running, could be complex. But with Ehcache, all class loading is done in a standard way in one utility class: ClassLoaderUtil.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair117.js"]
,["Ehcache_Documentation_Set\u002Fco-class_plugin_class_loading.html","Plugin Class Loading","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache allows plugins for events and distribution. These are loaded and created as follows: \u002F** * Creates a new class instance. Logs errors along the way. Classes are loaded * using the Ehcache standard classloader. * * @param className a ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair118.js"]
,["Ehcache_Documentation_Set\u002Fco-class_loading_ehcache_xml.html","Loading of ehcache.xml Resources","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>If the configuration is otherwise unspecified, Ehcache looks for a configuration in the following order: Thread.currentThread().getContextClassLoader().getResource(\u0022\u002Fehcache.xml\u0022)","Ehcache_Documentation_Set\u002Fpairs\u002Fpair119.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_configuration_guide.html","Ehcache Configuration Guide","Configuring Cache About Ehcache Configuration <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache supports declarative configuration via an XML configuration file, as well as programmatic configuration via class-constructor APIs. Choosing one approach over the other can be a matter o...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair120.js"]
,["Ehcache_Documentation_Set\u002Fto-cfgbasics_configuring_cache.html","Configuring Cache","About Ehcache Configuration <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache supports declarative configuration via an XML configuration file, as well as programmatic configuration via class-constructor APIs. Choosing one approach over the other can be a matter of preference or a ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair121.js"]
,["Ehcache_Documentation_Set\u002Fco-cfgbasics_about_cache_configuration.html","About Ehcache Configuration","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache supports declarative configuration via an XML configuration file, as well as programmatic configuration via class-constructor APIs. Choosing one approach over the other can be a matter of preference or a requirement, such as when an...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair122.js"]
,["Ehcache_Documentation_Set\u002Fco-cfgbasics_xml_configuration.html","XML Configuration","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> By default, Ehcache looks for an ASCII or UTF8 encoded XML configuration file called ehcache.xml at the top level of the Java classpath. You may specify alternate paths and filenames for the XML configuration file by using the various Cache...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair123.js"]
,["Ehcache_Documentation_Set\u002Fco-cfgbasics_dynamically_changing_cache_config.html","Dynamically Changing Cache Configuration","<<THIS TOPIC IS SHARED BY EHC, BMG AND BMM PRODUCTS!!!>>While most of the Ehcache configuration is not changeable after startup, !!!EHC!!!since Ehcache 2.0, certain cache configuration parameters can be modified dynamically at runtime. These include the following:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair124.js"]
,["Ehcache_Documentation_Set\u002Fco-cfgbasics_passing_copies.html","Passing Copies Instead of References","<<THIS TOPIC IS SHARED BY EHC, BMG AND BMM PRODUCTS!!!>>By default, a get() operation on a store returns a reference to the requested data, and any changes to that data are immediately reflected in the memory store. In cases where an application requires a copy of data rather than a reference to it,...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair125.js"]
,["Ehcache_Documentation_Set\u002Fto-tiers_configuring_storage_tiers.html","Configuring Storage Tiers","About Storage Tiers <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache has three storage tiers, summarized here: Memory store \u2013 Heap memory that holds a copy of the hottest subset of data from the off-heap store. Subject to Java GC.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair126.js"]
,["Ehcache_Documentation_Set\u002Fco-tiers_about_storage_tiers.html","About Storage Tiers","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache has three storage tiers, summarized here: Memory store \u2013 Heap memory that holds a copy of the hottest subset of data from the off-heap store. Subject to Java GC.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair127.js"]
,["Ehcache_Documentation_Set\u002Fco-tiers_configuring_memory_store.html","Configuring Memory Store","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The memory store is always enabled and exists in heap memory. For the best performance, allot as much heap memory as possible without triggering garbage collection (GC) pauses, and use the off-heap store to hold the data that cannot fit in h...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair128.js"]
,["Ehcache_Documentation_Set\u002Fco-tiers_configuring_disk_store.html","Configuring Disk Store","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> The disk store provides a thread-safe disk-spooling facility that can be used for either additional storage or persisting data through system restarts.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair129.js"]
,["Ehcache_Documentation_Set\u002Fto-size_sizing_storage_tiers.html","Sizing Storage Tiers","The Sizing Attributes <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Tuning Ehcache often involves sizing the data storage tiers appropriately. You can size the different data tiers in a number of ways using simple sizing attributes. These sizing attributes affect memory and disk resourc...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair130.js"]
,["Ehcache_Documentation_Set\u002Fco-size_sizing_attributes.html","The Sizing Attributes","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Tuning Ehcache often involves sizing the data storage tiers appropriately. You can size the different data tiers in a number of ways using simple sizing attributes. These sizing attributes affect memory and disk resources.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair131.js"]
,["Ehcache_Documentation_Set\u002Fco-size_pooling_resources.html","Pooling Resources Versus Sizing Individual Caches","!!!EHC!!!You can constrain the size of any cache on a specific tier in that cache\u0027s configuration. You can also constrain the size of all of a CacheManager\u0027s caches in a specific tier by configuring an overall size at the CacheManager level.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair132.js"]
,["Ehcache_Documentation_Set\u002Fco-size_sizing_examples.html","Sizing Examples","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The following examples illustrate both pooled and individual cache-sizing configurations. Pooled Resources The following configuration sets pools for all of this CacheManager\u0027s caches:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair133.js"]
,["Ehcache_Documentation_Set\u002Fco-size_pinning_and_size_limits.html","Pinning and Size Limitations","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> <<FFC-this seems out of place and random. We have not even introduced the relationship between pinning and sizing. Need to re-write.>>Pinned caches can override the limits set by cache-configuration sizing attributes, potentially causing Ou...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair134.js"]
,["Ehcache_Documentation_Set\u002Fco-size_builtin_resizing_computations.html","Built-In Sizing Computation and Enforcement","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Internal Ehcache mechanisms track data-element sizes and enforce the limits set by CacheManager sizing pools. Sizing of Elements Elements put in a memory-limited cache will have their memory sizes measured. The entire Element instance added ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair135.js"]
,["Ehcache_Documentation_Set\u002Fco-size_eviction_on_cache_manager_level_store.html","Eviction When Using CacheManager-Level Storage","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>When a CacheManager-level storage pool is exhausted, a cache is selected on which to perform eviction to recover pool space. The eviction from the selected cache is performed using the cache\u0027s configured eviction algorithm (LRU, LFU, etc...)...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair136.js"]
,["Ehcache_Documentation_Set\u002Fto-life_managing_data_life.html","Managing Data Life","Configuration Options that Affect Data Life <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> This topic covers managing the life of the data in each of the data-storage tiers, including the pinning features of Automatic Resource Control (ARC).","Ehcache_Documentation_Set\u002Fpairs\u002Fpair137.js"]
,["Ehcache_Documentation_Set\u002Fco-life_options_affecting_data_life.html","Configuration Options that Affect Data Life","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> This topic covers managing the life of the data in each of the data-storage tiers, including the pinning features of Automatic Resource Control (ARC).","Ehcache_Documentation_Set\u002Fpairs\u002Fpair138.js"]
,["Ehcache_Documentation_Set\u002Fco-life_setting_expiration.html","Setting Expiration","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> <<FFC-this topic switches between cache and data store. I think we need to be consistent within a topic.>>Data entries expire based on parameters with configurable values. When eviction occurs, expired elements are the first to be removed. ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair139.js"]
,["Ehcache_Documentation_Set\u002Fco-life_pinning_data.html","Pinning Data","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Without pinning, expired cache entries can be flushed and eventually evicted, and even most non-expired elements can also be flushed and evicted as well, if resource limitations are reached. Pinning gives per-cache control over whether data ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair140.js"]
,["Ehcache_Documentation_Set\u002Fco-life_affect_on_flushing_and_eviction.html","How Configuration Affects Element Flushing and Eviction","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The following example shows a cache with certain expiration settings: <cache name=\u0022myCache\u0022 eternal=\u0022false\u0022 timeToIdleSeconds=\u00223600\u0022 timeToLiveSeconds=\u00220\u0022 memoryStoreEvictionPolicy=\u0022LFU\u0022> <\u002Fcache>","Ehcache_Documentation_Set\u002Fpairs\u002Fpair141.js"]
,["Ehcache_Documentation_Set\u002Fco-life_data_freshness_and_expiration.html","Data Freshness and Expiration","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Databases and other systems of record (SORs) that were not built to accommodate caching outside of the database do not normally come with any default mechanism for notifying external processes when data has been updated or modified.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair142.js"]
,["Ehcache_Documentation_Set\u002Fto-persist_configuring_persistance_and_restart.html","Configuring Restartability and Persistence","About Restartability and Persistence <<FFC-we need to re-write this so that it describes only the Ehcache capabilities. All detail about Fast Restart needs to be removed. A note should be inserted that indicates the Fast Restart capability is provided in the BigMem products.>>Ehcache offers persiste...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair143.js"]
,["Ehcache_Documentation_Set\u002Fco-persist_about_persistence_and_restart.html","About Restartability and Persistence","<<FFC-we need to re-write this so that it describes only the Ehcache capabilities. All detail about Fast Restart needs to be removed. A note should be inserted that indicates the Fast Restart capability is provided in the BigMem products.>>Ehcache offers persistence using the local disk as a cache s...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair144.js"]
,["Ehcache_Documentation_Set\u002Fco-persist_cache_persistence_implementation.html","Cache Persistence Implementation","Ehcache has a RestartStore which provides fast restartability and options for cache persistence. The RestartStore implements an on-disk mirror of the in-memory cache. After any restart, data that was last in the cache will automatically load from disk into the RestartStore, and from there the data w...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair145.js"]
,["Ehcache_Documentation_Set\u002Fco-persist_config_examples.html","Configuration Examples","This section presents possible disk usage configurations for open-source Ehcache 2.6 and higher. Temporary Disk Storage The \u0022localTempSwap\u0022 persistence strategy allows the cache to use the local disk during cache operation. The disk storage is temporary and is cleared after a restart.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair146.js"]
,["Ehcache_Documentation_Set\u002Fco-persist_compatibility_with_prev_versions.html","Compatibility with Previous Versions","Comparison of Disk Usage Options The following table summarizes the configuration options for disk usage in Ehcache 2.6 and higher as compared with previous versions. *It is recommended to use one of the fault-tolerant options, however non-fault-tolerant persistence is still available. If <persisten...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair147.js"]
,["Ehcache_Documentation_Set\u002Fto-updt_configuring_the_update_checker.html","Configuring the Update Checker","Configuring the Update Checker <<FFC-Ask Foram why this topic isn\u2019t included in the BMM and BMG config guides. Also...it should say what the checker does when it discoers that the latest version is not in use.>>The update checker is used to see whether you have the latest version of Ehcache. It is a...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair148.js"]
,["Ehcache_Documentation_Set\u002Fco-updt_configuring_the_update_checker.html","Configuring the Update Checker","<<FFC-Ask Foram why this topic isn\u2019t included in the BMM and BMG config guides. Also...it should say what the checker does when it discoers that the latest version is not in use.>>The update checker is used to see whether you have the latest version of Ehcache. It is also used to get non-identifying...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair149.js"]
,["Ehcache_Documentation_Set\u002Fto-jprop_system_properties.html","System Properties","Special System Properties net.sf.ehcache.disabled <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Setting this system property to true (using java -Dnet.sf.ehcache.disabled=true in the Java command line) disables caching in ehcache. If disabled, no elements can be added to a cache (puts a...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair150.js"]
,["Ehcache_Documentation_Set\u002Fre-jprops_system_properties.html","Special System Properties","net.sf.ehcache.disabled <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Setting this system property to true (using java -Dnet.sf.ehcache.disabled=true in the Java command line) disables caching in ehcache. If disabled, no elements can be added to a cache (puts are silently discarded).","Ehcache_Documentation_Set\u002Fpairs\u002Fpair151.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_operations_guide.html","Ehcache Operations Guide","Tuning Garbage Collection About Garbage Collection and Ehcache Applications that use Ehcache can be expected to use large heaps. Some Ehcache applications have heap sizes greater than 6 GB. Ehcache works well at this scale. However, large heaps or long held objects, which is what a cache is composed...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair152.js"]
,["Ehcache_Documentation_Set\u002Fto-tuning_garbage_collection.html","Tuning Garbage Collection","About Garbage Collection and Ehcache Applications that use Ehcache can be expected to use large heaps. Some Ehcache applications have heap sizes greater than 6 GB. Ehcache works well at this scale. However, large heaps or long held objects, which is what a cache is composed of, can place strain on t...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair153.js"]
,["Ehcache_Documentation_Set\u002Fco-gc_about_garbage_collection.html","About Garbage Collection and Ehcache","Applications that use Ehcache can be expected to use large heaps. Some Ehcache applications have heap sizes greater than 6 GB. Ehcache works well at this scale. However, large heaps or long held objects, which is what a cache is composed of, can place strain on the default Garbage Collector (GC). Wi...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair154.js"]
,["Ehcache_Documentation_Set\u002Fco-gc_tuning_garbage_collection.html","Tuning the Garbage Collector","Tuning suggestion for virtual machines with large heaps using caching: java ... -XX:+DisableExplicitGC -XX:+UseConcMarkSweepGC -XX:NewSize=<1\u002F4 of total heap size> -XX:SurvivorRatio=16 Note that it is better to use -XX:+DisableExplicitGC, instead of calling System.gc(). It also helps to use the low ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair155.js"]
,["Ehcache_Documentation_Set\u002Fto-jmx_management_and_monitoring.html","Monitoring and Management Using JMX","About Using JMX JMX creates a standard way of instrumenting classes and making them available to a management and monitoring infrastructure. The net.sf.ehcache.management package contains MBeans and a ManagementService for JMX management of Ehcache . It is in a separate package so that JMX libraries...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair156.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_about_using_jmx.html","About Using JMX","JMX creates a standard way of instrumenting classes and making them available to a management and monitoring infrastructure. The net.sf.ehcache.management package contains MBeans and a ManagementService for JMX management of Ehcache . It is in a separate package so that JMX libraries are only requir...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair157.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_mbeans.html","MBeans","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache supports Standard MBeans. MBeans are available for the following: CacheManager Cache CacheConfiguration CacheStatistics All MBean attributes are available to a local MBeanServer. The CacheManager MBean allows traversal to its collec...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair158.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_remoting.html","JMX Remoting","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The Remote API allows connection from a remote JMX Agent to an MBeanServer via an MBeanServerConnection. Only Serializable attributes are available remotely. The following Ehcache MBean attributes are available remotely:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair159.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_objectname_scheme.html","ObjectName Naming Scheme","CacheManager <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> \u0022net.sf.ehcache:type=CacheManager,name=<CacheManager>\u0022 Cache \u0022net.sf.ehcache:type=Cache,CacheManager=<cacheManagerName>,name=<cacheName>\u0022","Ehcache_Documentation_Set\u002Fpairs\u002Fpair160.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_management_service.html","The Management Service","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>The ManagementService class is the API entry point.  There is only one method, ManagementService.registerMBeans, which is used to initiate JMX registration of a CacheManager\u0027s instrumented MBeans. The ManagementService is a CacheManagerEvent...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair161.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_jconsole_example.html","JConsole Example","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>This example shows how to register CacheStatistics in the JDK platform MBeanServer, which works with the JConsole management agent. CacheManager manager = new CacheManager(); MBeanServer mBeanServer = ManagementFactory.getPlatformMBeanServer...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair162.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_tutorial.html","JMX Tutorial","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.See this online tutorial. Performance Considerations <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Collection of cache statistics is not entirely free of overhead, however, the statistics API switches on\u002Foff automatically accordin...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair163.js"]
,["Ehcache_Documentation_Set\u002Fco-jmx_performance_considerations.html","Performance Considerations","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Collection of cache statistics is not entirely free of overhead, however, the statistics API switches on\u002Foff automatically according to usage. If you need few statistics, you incur little overhead; on the other hand, as you use more statisti...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair164.js"]
,["Ehcache_Documentation_Set\u002Fto-log_logging.html","Logging","SLFJ Logging !!!EHC!!!As of 1.7.1, Ehcache uses the slf4j logging facade, so you can plug in your own logging framework. The following information pertains to Ehcache logging. For information about SLF4J in general, refer to the SLF4J website.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair165.js"]
,["Ehcache_Documentation_Set\u002Fco-log_slf4j_logging.html","SLFJ Logging","!!!EHC!!!As of 1.7.1, Ehcache uses the slf4j logging facade, so you can plug in your own logging framework. The following information pertains to Ehcache logging. For information about SLF4J in general, refer to the SLF4J website.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair166.js"]
,["Ehcache_Documentation_Set\u002Fco-log_recommended_logging_levels.html","Recommended Logging Levels","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache seeks to trade off informing production-support developers of important messages and cluttering the log. ERROR messages should not occur in normal production and indicate that action should be taken.<<FFC-this paragraph needs to be ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair167.js"]
,["Ehcache_Documentation_Set\u002Fto-shut_shutting_down_ehcache.html","Shutting Down Ehcache","About Shutdown <<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache is shut down through the Ehcache API. Note that Hibernate automatically shuts down its Ehcache CacheManager. The recommended way to shutdown Ehcache is:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair168.js"]
,["Ehcache_Documentation_Set\u002Fco-shut_about_shutdown.html","About Shutdown","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> Ehcache is shut down through the Ehcache API. Note that Hibernate automatically shuts down its Ehcache CacheManager. The recommended way to shutdown Ehcache is:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair169.js"]
,["Ehcache_Documentation_Set\u002Fco-shut_servlet_context_listener.html","ServletContextListener","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>>Ehcache provides a ServletContextListener that shuts down the CacheManager. Use this to shut down Ehcache automatically, when the web application is shut down. To receive notification events, this class must be configured in the deployment d...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair170.js"]
,["Ehcache_Documentation_Set\u002Fco-shut_the_shutdown_hook.html","The Shutdown Hook","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> The CacheManager can optionally register a shutdown hook. To do so, set the system property net.sf.ehcache.enableShutdownHook=true. This will shut down the CacheManager when it detects the Virtual Machine shutting down and it is not already...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair171.js"]
,["Ehcache_Documentation_Set\u002Fco-shut_dirty_shutdown.html","Dirty Shutdown","<<THIS TOPIC IS SHARED BY EHC, BMG, and BMM PRODUCT DOCS.>> If Ehcache is shutdown dirty, all in-memory data will be retained if Ehcache is configured for restartability. !!!EHC!!! For more information, see \u0022Configuring Restartability and Persistence\u0022 in the Configuration Guide for Ehcache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair172.js"]
,["Ehcache_Documentation_Set\u002Fto-rmi_debugging_replicated_caches.html","Debugging and Monitoring Replicated Caches","About the Remote Debugger The ehcache-1.x-remote-debugger.jar can be used to debug replicated cache operations. When started with the same configuration as the cluster, it will join the cluster and then report cluster events for the cache of interest. By providing a window into the cluster it can he...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair173.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_about_the_remote_debugger.html","About the Remote Debugger","The ehcache-1.x-remote-debugger.jar can be used to debug replicated cache operations. When started with the same configuration as the cluster, it will join the cluster and then report cluster events for the cache of interest. By providing a window into the cluster it can help to identify the cause o...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair174.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_using_the_debugger.html","Using the Debugger","It is invoked as follows: java -jar ehcache-debugger-1.5.0.jar ehcache.xml sampleCache1 path_to_ehcache.xml [cacheToMonitor] It takes one or two arguments: the first argument, which is mandatory, is the Ehcache configuration file e.g. app\u002Fconfig\u002Fehcache.xml. This file should be configured to allow E...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair175.js"]
,["Ehcache_Documentation_Set\u002Fto-pubhead_ehcache_recipes.html","Ehcache Recipes","About the Recipes The recipes are a collection of concise examples for specific use cases that will help you get started with Ehcache. If you have suggestions or ideas for more recipes, please tell us about them using the forums and mailing lists.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair176.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_about_the_recipes.html","About the Recipes","The recipes are a collection of concise examples for specific use cases that will help you get started with Ehcache. If you have suggestions or ideas for more recipes, please tell us about them using the forums and mailing lists.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair177.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_web_page_and_fragment_caching.html","Web Page and Web Page Fragment Caching","This recipe provides an example of how to use the included filters to cache web pages and web page fragments. Problem You\u0027d like to improve the time it takes to return a page from your web application. Many of the pages in your application are not time or user specific and can be cached for a period...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair178.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_configure_grails_app_for_clustering.html","Using Grails and Ehcache","Grails 1.2RC1 and higher use Ehcache as the default Hibernate second level cache. However earlier versions of Grails ship with the Ehcache library and are very simple to enable. The following steps show how to configure Grails to use Ehcache. For 1.2RC1 and higher, some of these steps are already do...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair179.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_data_freshness_and_expiration.html","Data Freshness and Expiration","This recipe addresses how to maintain cache \u0022freshness\u0022 by configuring TTL and data expiration properly. Problem Data in the cache is out of sync with the SOR (the database). Solution Databases (and other SORs) weren\u0027t built with caching outside of the database in mind, and therefore don\u0027t normally ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair180.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_empty_cache_values.html","Caching Empty Values","This recipe discusses why caching empty values can be desirable to deflect load from the database. Problem Your application is querying the database excessively only to find that there is no result. Since there is no result, there is nothing to cache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair181.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_database_read_overload.html","Database Read Overload","When many readers simultaneously request the same data element, there can be a database read overload, sometimes called the \u0022Thundering Herd\u0022 problem. This recipe addresses how to prevent it in a single JVM or a clustered configuration.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair182.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_database_write_overload.html","Database Write Overload","This recipe addresses the problem of database write overload and explains how the Ehcache Write-behind feature can be the solution. Problem It\u0027s easy to understand how a cache can help reduce database loads and improve application performance in a read-mostly scenario. In read-mostly use-cases, ever...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair183.js"]
,["Ehcache_Documentation_Set\u002F_ehcache_all.1.184.html","Caching Methods with Spring 3 Annotations","This recipe explains adding caching to methods using the Ehcache Annotations for Spring project. Problem You\u0027d like to cache methods of your application with minimal code changes and use configuration to control the cache settings.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair184.js"]
,["Ehcache_Documentation_Set\u002Fco-recipe_cache_wrapper.html","Cache Wrapper","This recipe provides an example of a simple class to make accessing Ehcache easier for simple use cases. Problem Using the full Ehcache API can be more tedious than using just a simple, value-based cache (like a HashMap) because of the Element class that holds values.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair185.js"]
,["Ehcache_Documentation_Set\u002Fre-ehcache_reference_documentation.html","Reference Documentation","Ehcache 2.10.1 Javadoc ehcache.xml ehcache.xsd Release and Platform Compatibility Tables Related Documentation Web Cache User Guide About the Web Cache Module Introduction Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing differe...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair186.js"]
,["Ehcache_Documentation_Set\u002F_ehcache_all.1.187.html","Related Documentation","Web Cache User Guide About the Web Cache Module Introduction Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing difference to web application performance. A typical server can deliver 5000+ pages per second from the page cache. Wi...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair187.js"]
,["Ehcache_Documentation_Set\u002Fto-title_web_cache_user_guide.html","Web Cache User Guide","About the Web Cache Module Introduction Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing difference to web application performance. A typical server can deliver 5000+ pages per second from the page cache. With built-in gzipping,...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair188.js"]
,["Ehcache_Documentation_Set\u002Fto-abt_about_the_web_cache_module.html","About the Web Cache Module","Introduction Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing difference to web application performance. A typical server can deliver 5000+ pages per second from the page cache. With built-in gzipping, storage and network transm...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair189.js"]
,["Ehcache_Documentation_Set\u002Fco-abt_what_is_the_web_caching_module.html","Introduction","Ehcache provides a set of general purpose web caching filters in the ehcache-web module. Using these can make an amazing difference to web application performance. A typical server can deliver 5000+ pages per second from the page cache. With built-in gzipping, storage and network transmission is hig...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair190.js"]
,["Ehcache_Documentation_Set\u002Fco-abt_components_and_concepts.html","Components and Concepts","SimplePageCachingFilter The SimplePageCachingFilter is a simple caching filter suitable for caching compressible HTTP responses such as HTML, XML or JSON. It uses a singleton CacheManager created with the default factory method. Override to use a different CacheManager.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair191.js"]
,["Ehcache_Documentation_Set\u002Fto-use_using_web_cache_module.html","Caching Web Pages and Page Fragments","Sample Use Case The following describes an example of how to use the included filters to cache web pages and web page fragments. Problem You\u0027d like to improve the time it takes to return a page from your web application. Many of the pages in your application are not time- or user-specific and can be...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair192.js"]
,["Ehcache_Documentation_Set\u002Fco-use_sample_use_case_for_caching_web_pages.html","Sample Use Case","The following describes an example of how to use the included filters to cache web pages and web page fragments. Problem You\u0027d like to improve the time it takes to return a page from your web application. Many of the pages in your application are not time- or user-specific and can be cached for a pe...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair193.js"]
,["Ehcache_Documentation_Set\u002Fco-use_steps_for_caching_web_pages.html","Steps for Caching Web Pages","Caching web pages does not require any code changes. Your application server should support servlet filtering already. Simply update your web.xml file, re-deploy. and you should see the speedup right away.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair194.js"]
,["Ehcache_Documentation_Set\u002Fto-sam_sample_webxml_configuration.html","Sample web.xml Configuration","Example web.xml Configuration Following is a sample web.xml configuration file. <web-app xmlns=\u0022http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee\u0022 xmlns:xsi=\u0022http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\u0022 xsi:schemaLocation=\u0022http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee version=\u00222.5\u0022> <filter> <filter-name>CachePage1CachingFilter<...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair195.js"]
,["Ehcache_Documentation_Set\u002Fre-sam_webxml_configuration_example.html","Example web.xml Configuration","Following is a sample web.xml configuration file. <web-app xmlns=\u0022http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee\u0022 xmlns:xsi=\u0022http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\u0022 xsi:schemaLocation=\u0022http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee version=\u00222.5\u0022> <filter> <filter-name>CachePage1CachingFilter<\u002Ffilter-name> <filter-class>ne...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair196.js"]
,["Ehcache_Documentation_Set\u002Fto-exc_cachingfilter_exceptions.html","CachingFilter Exceptions","CachingFilter Exceptions Additional exception types have been added to the Caching Filter. FilterNonReentrantException Thrown when it is detected that a caching filter\u0027s doFilter method is reentered by the same thread. Reentrant calls will block indefinitely because the first request has not yet unb...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair197.js"]
,["Ehcache_Documentation_Set\u002Fre-exc_additional_exceptions_from_cachingfilter.html","CachingFilter Exceptions","Additional exception types have been added to the Caching Filter. FilterNonReentrantException Thrown when it is detected that a caching filter\u0027s doFilter method is reentered by the same thread. Reentrant calls will block indefinitely because the first request has not yet unblocked the cache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair198.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_replication_guide.html","Ehcache Replication Guide","Using Replication Supported Types of Replication Ehcache provides three mechanisms for replicating a cache across multiple nodes: RMI Replicated Caching Ehcache provides replicated caching using RMI. To set up RMI replicated caching, you need to configure the CacheManager with a PeerProvider and a C...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair199.js"]
,["Ehcache_Documentation_Set\u002Fto-use_using_replication.html","Using Replication","Supported Types of Replication Ehcache provides three mechanisms for replicating a cache across multiple nodes: RMI Replicated Caching Ehcache provides replicated caching using RMI. To set up RMI replicated caching, you need to configure the CacheManager with a PeerProvider and a CacheManagerPeerLis...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair200.js"]
,["Ehcache_Documentation_Set\u002Fco-use_supported_types.html","Supported Types of Replication","Ehcache provides three mechanisms for replicating a cache across multiple nodes: RMI Replicated Caching Ehcache provides replicated caching using RMI. To set up RMI replicated caching, you need to configure the CacheManager with a PeerProvider and a CacheManagerPeerListener. Then for each cache that...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair201.js"]
,["Ehcache_Documentation_Set\u002Fco-use_minimum_configuration.html","Minimum Configuration for Replication","The minimum configuration you need to get replicated caching going is: <cacheManagerPeerProviderFactory class=\u0022net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory\u0022 properties=\u0022peerDiscovery=automatic, multicastGroupAddress=230.0.0.1, multicastGroupPort=4446\u0022\u002F><cacheManagerPeerListenerFact...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair202.js"]
,["Ehcache_Documentation_Set\u002Fco-use_adding_replication_to_a_cache.html","Adding Replication to an Existing Cache","The cache event listening works but it does not get plumbed into the peering mechanism. The current API does not have a CacheManager event for cache configuration change. You can however make it work by calling the notifyCacheAdded event.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair203.js"]
,["Ehcache_Documentation_Set\u002Fto-rmi_replicated_caching_using_rmi.html","Replicated Caching Using RMI","Using RMI for Replicated Caching Replicated caching using RMI is desirable because: RMI is the default remoting mechanism in Java it allows tuning of TCP socket options Element keys and values for disk storage must already be Serializable, therefore directly transmittable over RMI without the need f...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair204.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_using_rmi.html","Using RMI for Replicated Caching","Replicated caching using RMI is desirable because: RMI is the default remoting mechanism in Java it allows tuning of TCP socket options Element keys and values for disk storage must already be Serializable, therefore directly transmittable over RMI without the need for conversion to a third format s...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair205.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_suitable_element_types.html","Suitable Element Types","Only Serializable Elements are suitable for replication. Some operations, such as remove, work off Element keys rather than the full Element itself. In this case the operation will be replicated provided the key is Serializable, even if the Element is not.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair206.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_configuring_the_peer_provider.html","Configuring the Peer Provider","Peer Discovery Ehcache has the notion of a group of caches acting as a replicated cache. Each of the caches is a peer to the others. There is no master cache. How do you know about the other caches that are in your cluster? This problem can be given the name Peer Discovery. Ehcache provides two mech...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair207.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_configuring_the_cache_manager_listener.html","Configuring the CacheManagerPeerListener","A CacheManagerPeerListener listens for messages from peers to the current CacheManager. You configure the CacheManagerPeerListener by specifiying a CacheManagerPeerListenerFactory which is used to create the CacheManagerPeerListener using the plugin mechanism.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair208.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_configuring_cache_replicators.html","Configuring Cache Replicators","Each cache that will be replicated needs to set a cache event listener which then replicates messages to the other CacheManager peers. This is done by adding a cacheEventListenerFactory element to each cache\u0027s configuration.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair209.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_configuring_bootstrap.html","Configuring Bootstrap from a Cache Peer","When a peer comes up, it will be incoherent with other caches. When the bootstrap completes it will be partially coherent. Bootstrap gets the list of keys from a random peer, and then loads those in batches from random peers. If bootstrap fails then the Cache will not start. However if a cache repli...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair210.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_complete_example.html","Complete Example","Ehcache\u0027s own integration tests provide complete examples of RMI-based replication. The best example is the integration test for cache replication. You can see it online in the source code example RMICacheReplicatorIT.java at this location: https:\u002F\u002Ffisheye.terracotta.org\u002Fbrowse\u002FEhcache\u002Fbranches\u002Fehca...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair211.js"]
,["Ehcache_Documentation_Set\u002Fco-rmi_common_issues_with_rmi_replication.html","Common Issues with RMI Replication","Tomcat on Windows Any RMI listener will fail to start on Tomcat, if the installation path has spaces in it. Because the default on Windows is to install Tomcat in \u0022Program Files\u0022, this issue will occur by default. The workaround is to remove the spaces in your Tomcat installation path.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair212.js"]
,["Ehcache_Documentation_Set\u002Fto-jgrp_replicated_caching_using_jgroups.html","Replicated Caching Using JGroups","Using JGroups for Replicated Caching JGroups can be used as the underlying mechanism for the replication operations in ehcache. JGroups offers a very flexible protocol stack, reliable unicast and multicast message transmission.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair213.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_using_jgroups.html","Using JGroups for Replicated Caching","JGroups can be used as the underlying mechanism for the replication operations in ehcache. JGroups offers a very flexible protocol stack, reliable unicast and multicast message transmission. On the down side JGroups can be complex to configure and some protocol stacks have dependencies on others.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair214.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_suitable_element_types.html","Suitable Element Types","Only Serializable Elements are suitable for replication. Some operations, such as remove, work off Element keys rather than the full Element itself. In this case the operation will be replicated provided the key is Serializable, even if the Element is not.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair215.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_peer_discovery.html","Peer Discovery","If you use the UDP multicast stack there is no additional configuration. If you use a TCP stack you will need to specify the initial hosts in the cluster. Configuration There are two things to configure:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair216.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_configuration.html","Configuration","There are two things to configure: The JGroupsCacheManagerPeerProviderFactory which is done once per CacheManager and therefore once per ehcache.xml file. The JGroupsCacheReplicatorFactory which is added to each cache\u0027s configuration.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair217.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_example_config_using_udp_multicast.html","Example Configuration using UDP Multicast","Suppose you have two servers in a cluster. You want to replicate sampleCache11 and sampleCache12 and you want to use UDP multicast as the underlying mechanism. The configurations for server1 and server2 are identical and will look like this:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair218.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_example_config_using_tcp_unicast.html","Example Configuration using TCP Unicast","The TCP protocol requires the IP address of all servers to be known. They are configured through the TCPPING protocol of JGroups. Suppose you have two servers: host1 and host2. The configuration is: <cacheManagerPeerProviderFactoryclass=\u0022net.sf.ehcache.distribution.jgroups.JGroupsCacheManagerPeerPro...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair219.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_protocol_considerations.html","Protocol Considerations","You should read the JGroups documentation to configure the protocols correctly. See http:\u002F\u002Fwww.jgroups.org\u002Fjavagroupsnew\u002Fdocs\u002Fmanual\u002Fhtml_single\u002Findex.html. If using UDP you should at least configure PING, FD_SOCK (Failure detection), VERIFY_SUSPECT, pbcast.NAKACK (Message reliability), pbcast.STABL...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair220.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_configuring_cache.html","Configuring CacheReplicators","Each cache that will be replicated needs to set a cache event listener which then replicates messages to the other CacheManager peers. This is done by adding a cacheEventListenerFactory element to each cache\u0027s configuration. The properties are identical to the one used for RMI replication. The liste...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair221.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_complete_sample_configuration.html","Complete Sample Configuration","A typical complete configuration for one replicated cache configured for UDP will look like: <Ehcache xmlns:xsi=\u0022http:\u002F\u002Fwww.w3.org\u002F2001\u002FXMLSchema-instance\u0022 xsi:noNamespaceSchemaLocation=\u0022..\u002F..\u002F..\u002Fmain\u002Fconfig\u002Fehcache.xsd\u0022> <diskStore path=\u0022java.io.tmpdir\u002Fone\u0022\u002F> <cacheManagerPeerProviderFactory class=...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair222.js"]
,["Ehcache_Documentation_Set\u002Fco-jgrp_common_issues_with_jgroup_replication.html","Common Issues with JGroups Replication","If replication using JGroups doesn\u0027t work the way you have it configured, try this configuration which has been extensively tested: <cacheManagerPeerProviderFactory class=\u0022net.sf.ehcache.distribution.jgroups.JGroupsCacheManagerPeerProviderFactory\u0022\u002F> <cache name=\u0022sampleCacheAsync\u0022 maxEntriesLocalHeap...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair223.js"]
,["Ehcache_Documentation_Set\u002Fto-jms_replicated_caching_using_jms.html","Replicated Caching Using JMS","Using JMS for Replicated Caching As of version 1.6, JMS can be used as the underlying mechanism for the replicated operations in Ehcache with the jmsreplication module. JMS (Java Message Service) is a mechanism for interacting with message queues. Message queues themselves are a very mature piece of...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair224.js"]
,["Ehcache_Documentation_Set\u002Fco-jms_using_jms.html","Using JMS for Replicated Caching","As of version 1.6, JMS can be used as the underlying mechanism for the replicated operations in Ehcache with the jmsreplication module. JMS (Java Message Service) is a mechanism for interacting with message queues. Message queues themselves are a very mature piece of infrastructure used in many ente...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair225.js"]
,["Ehcache_Documentation_Set\u002Fco-jms_ehcache_replication_and_external_publishers.html","Ehcache Replication and External Publishers","Ehcache replicates using JMS as follows: Each cache node subscribes to a predefined topic, configured as the <topicBindingName> in ehcache.xml. Each replicated cache publishes cache Elements to that topic. Replication is configured per cache.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair226.js"]
,["Ehcache_Documentation_Set\u002Fco-jms_ehcache_replication_and_external_publishers_2.html","Configuration","Message Queue Configuration Each cluster needs to use a fixed topic name for replication. Set up a topic using the tools in your message queue. Out of the box, both ActiveMQ and Open MQ support auto creation of destinations, so this step may be optional.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair227.js"]
,["Ehcache_Documentation_Set\u002Fco-jms_ehcache_replication_and_external_publishers_3.html","External JMS Publishers","Anything that can publish to a message queue can also add cache entries to ehcache. These are called non-cache publishers. Required Message Properties Publishers need to set up to four String properties on each message: cacheName, action, mimeType and key.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair228.js"]
,["Ehcache_Documentation_Set\u002Fco-jms_ehcache_replication_and_external_publishers_4.html","Code Samples","These samples use Open MQ as the message queue and use it with out of the box defaults. They are heavily based on Ehcache\u0027s own JMS integration tests. See the test source for more details. Messages should be sent to the topic that Ehcache is listening on. In these samples it is EhcacheTopicDest.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair229.js"]
,["Ehcache_Documentation_Set\u002Fco-jms_using_the_jms_cache_loader.html","Using the JMSCacheLoader","The JMSCacheLoader is a CacheLoader which loads objects into the cache by sending requests to a JMS Queue. The loader places an ObjectMessage of type JMSEventMessage on the getQueue with an Action of type GET.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair230.js"]
,["Ehcache_Documentation_Set\u002Fco-jms_configuring_clients_for_message_queue_reliability.html","Configuring Clients for Message Queue Reliability","Ehcache replication and cache loading is designed to gracefully degrade if the message queue infrastructure stops. Replicates and loads will fail. But when the message queue comes back, these operations will start up again.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair231.js"]
,["Ehcache_Documentation_Set\u002Fco-jms_tested_message_queues.html","Tested Message Queues","Open MQ This open source message queue is tested in integration tests. It works perfectly. Active MQ This open source message queue is tested in integration tests. It works perfectly other than having a problem with temporary reply queues which prevents the use of JMSCacheLoader. JMSCacheLoader is n...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair232.js"]
,["Ehcache_Documentation_Set\u002Fco-jms_common_issues_with_jms_replication.html","Common Issues using JMS-based Replication","Active MQ Temporary Destinatons ActiveMQ seems to have a bug in at least ActiveMQ 5.1 where it does not cleanup temporary queues, even though they have been deleted. That bug appears to be long standing but was though to have been fixed. See http:\u002F\u002Fissues.apache.org\u002Factivemq\u002Fbrowse\u002FAMQ-1255.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair233.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_integrations.html","Integrations","Using Ehcache with Hibernate About Using Ehcache with Hibernate Accelerating Hibernate applications typically involves reducing their reliance on the database when fetching data. Terracotta offers powerful in-memory solutions for maximizing the performance of Hibernate applications:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair234.js"]
,["Ehcache_Documentation_Set\u002Fto-hib_using_ehcache_with_hibernate.html","Using Ehcache with Hibernate","About Using Ehcache with Hibernate Accelerating Hibernate applications typically involves reducing their reliance on the database when fetching data. Terracotta offers powerful in-memory solutions for maximizing the performance of Hibernate applications:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair235.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_about_using_ehcache_with_hibernate.html","About Using Ehcache with Hibernate","Accelerating Hibernate applications typically involves reducing their reliance on the database when fetching data. Terracotta offers powerful in-memory solutions for maximizing the performance of Hibernate applications:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair236.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_downloading_and_installing.html","Downloading and Installing Ehcache for Hibernate","The Hibernate provider is in the ehcache-core module. You can download the latest version of this module from here: http:\u002F\u002Fsourceforge.net\u002Fprojects\u002Fehcache\u002Ffiles\u002Fehcache-core\u002F. Building with Maven <<FFC-consider eliminating the term \u0022kit\u0022 or at qualifying it so that is clear which kit we mean. Provi...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair237.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_building_with_maven.html","Building with Maven","<<FFC-consider eliminating the term \u0022kit\u0022 or at qualifying it so that is clear which kit we mean. Provide a little more initial context..>>Dependency versions vary with the specific kit you intend to use. Since kits are guaranteed to contain compatible artifacts, find the artifact versions you need ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair238.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configure_as_second_level_cache_provider.html","Configuring Ehcache as the Second-Level Cache Provider","To configure Ehcache as a Hibernate second-level cache, set the region factory property to one of the following in the Hibernate configuration. The Hibernate configuration is specified either via hibernate.cfg.xml, hibernate.properties or Spring. The format shown below is for hibernate.cfg.xml.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair239.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_enable_second_level_cache_settings.html","Enabling Second-Level Cache and Query Cache Settings","In addition to configuring the second-level cache provider setting, you will need to turn on the second-level cache (by default it is configured to off - \u0027false\u0027 - by Hibernate). To do this, set the following property in your Hibernate config:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair240.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_entities_to_use_second_level_caching.html","Configuring Hibernate Entities to use Second-Level Caching","In addition to configuring the Hibernate second-level cache provider, Hibernate must also be told to enable caching for entities, collections, and queries. For example, the mapping entry for a domain object called, com.somecompany.someproject.domain.Country, looks something like this:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair241.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_ehcache_settings.html","Configuring ehcache.xml Settings","Because the ehcache.xml file has a defaultCache, caches will always be created when required by Hibernate. However you can gain more control over Hibernate caches by configuring each cache based on its name. Doing this is particularly important, because Hibernate caches are populated from databases,...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair242.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_ehcache_settings_for_domain_objects.html","Ehcache Settings for Domain Objects","Hibernate bases the names of Domain Object caches on the fully qualified name of Domain Objects. So, for example, a cache for com.somecompany.someproject.domain.Country would be represented by a cache configuration entry in ehcache.xml similar to the following:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair243.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_ehcache_settings_for_collections.html","Ehcache Settings for Collections","Hibernate creates collection cache names based on the fully qualified name of the Domain Object followed by \u0022.\u0022 and the collection field name. For example, a Country domain object has a set of advancedSearchFacilities. The Hibernate doclet for the accessor looks like this:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair244.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_configuring_ehcache_settings_for_queries.html","Ehcache Settings for Queries","Hibernate allows the caching of query results. StandardQueryCache This cache is used if you use a query cache without setting a name. A typical ehcache.xml configuration is: <cache name=\u0022org.hibernate.cache.StandardQueryCache\u0022 maxEntriesLocalHeap=\u00225\u0022 eternal=\u0022false\u0022 timeToLiveSeconds=\u0022120\u0022 <persiste...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair245.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_the_demo_app.html","The Demo Application and Tutorial","A demo application is available that shows you how to use the Hibernate CacheRegionFactory. You can download the application from here: http:\u002F\u002Fsvn.terracotta.org\u002Fsvn\u002Fforge\u002Fprojects\u002Fhibernate-tutorial-web\u002Ftrunk.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair246.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_performance_tips.html","Performance Tips","Session.load Session.load will always try to use the cache. Session.find and Query.find Session.find does not use the cache for the primary object. Hibernate will try to use the cache for any associated objects. Session.find does, however, cause the cache to be populated. Query.find works in exactly...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair247.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_viewing_hibernate_statistics.html","Viewing Hibernate Statistics","It is possible to access the Hibernate statistics and Ehcache statistics using the Java Management Extensions (JMX). The EhcacheHibernateMBean is the main interface that exposes all the APIs via JMX. It basically extends two interfaces: EhcacheStats and HibernateStats. As the names imply, EhcacheSta...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair248.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_upgrading_from_versions_prior_to_2.html","Upgrading from Ehcache Versions Prior to 2.0","This topic contains notes about upgrading from versions of Ehcache prior to 2.0. Support for Hibernate 3.3 SPI Beginning with Ehcache 2.0, there is support for the Hibernate 3.3 SPI implementation. This is important because Hibernate 3.3 has an updated caching SPI. Although still present in 3.3, the...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair249.js"]
,["Ehcache_Documentation_Set\u002Fco-hib_faq.html","FAQ","If I use BigMemory Go with my application and with Hibernate for second-level caching, should I try to use the CacheManager created by Hibernate for my app\u0027s caches? While you could share the resource file between the two CacheManagers, a clear separation between the two is recommended. Your applica...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair250.js"]
,["Ehcache_Documentation_Set\u002Fto-cold_using_ehcache_with_coldfusion.html","Using Ehcache with ColdFusion","About ColdFusion and Ehcache ColdFusion ships with Ehcache. The ColdFusion community has actively engaged with Ehcache and have put out lots of great blogs. Here are two to get you started. For a short introduction, see Raymond Camden\u0027s blog. For more in-depth analysis, see 14 days of ColdFusion cac...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair251.js"]
,["Ehcache_Documentation_Set\u002Fco-cold_about_coldfusion_and_ehcache.html","About ColdFusion and Ehcache","ColdFusion ships with Ehcache. The ColdFusion community has actively engaged with Ehcache and have put out lots of great blogs. Here are two to get you started. For a short introduction, see Raymond Camden\u0027s blog. For more in-depth analysis, see 14 days of ColdFusion caching, by Aaron West, covering...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair252.js"]
,["Ehcache_Documentation_Set\u002Fco-cold_example_integration.html","Example Integration","To integrate Ehcache with ColdFusion, first add the Ehcache jars to your web application lib directory. The following code demonstrates how to call Ehcache from ColdFusion. It will cache a ColdFusion object in Ehcache and set the expiration time to 30 seconds. If you refresh the page many times with...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair253.js"]
,["Ehcache_Documentation_Set\u002Fto-spr_using_ehcache_with_spring.html","Using Ehcache with Spring","Using Spring 3.1 Ehcache has had excellent Spring integration for years. Spring 3.1 includes an Ehcache implementation. See the Spring 3.1 JavaDoc. Spring Framework 3.1 has a generic cache abstraction for transparently applying caching to Spring applications. It has caching support for classes and m...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair254.js"]
,["Ehcache_Documentation_Set\u002Fco-spr_using_spring_3_1.html","Using Spring 3.1","Ehcache has had excellent Spring integration for years. Spring 3.1 includes an Ehcache implementation. See the Spring 3.1 JavaDoc. Spring Framework 3.1 has a generic cache abstraction for transparently applying caching to Spring applications. It has caching support for classes and methods using two ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair255.js"]
,["Ehcache_Documentation_Set\u002Fco-spr_using_spring_2_5_to_3_1.html","Spring 2.5 to 3.1","This open source, led by Eric Dalquist, predates the Spring 3.1 project. You can use it with earlier versions of Spring, or you can use it with 3.1. @Cacheable As with Spring 3.1 it uses an @Cacheable annotation to cache a method. In this example calls to findMessage are stored in a cache named \u0022mes...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair256.js"]
,["Ehcache_Documentation_Set\u002Fco-spr_annotations_for_spring.html","Annotations for Spring Project","To dynamically configure caching of method return values, use the Ehcache Annotations for Spring project at code.google.com at Ehcache Annotations for Spring project at code.google.com. This project will allow you to configure caching of method calls dynamically using just configuration. The way it ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair257.js"]
,["Ehcache_Documentation_Set\u002Fto-jruby_using_ehcache_with_jruby_and_rails.html","Using Ehcache with JRuby and Rails","About Using Ehcache with JRuby ruby-ehcache is a JRuby Ehcache library which makes a commonly used subset of Ehcache\u0027s API available to JRuby. All of the strength of Ehcache is there, including BigMemory and the ability to cluster with Terracotta. It can be used directly via its own API, or as a Rai...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair258.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_about_jruby_and_ehcache.html","About Using Ehcache with JRuby","ruby-ehcache is a JRuby Ehcache library which makes a commonly used subset of Ehcache\u0027s API available to JRuby. All of the strength of Ehcache is there, including BigMemory and the ability to cluster with Terracotta. It can be used directly via its own API, or as a Rails caching provider.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair259.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_installation.html","Installation","Ehcache JRuby integration is provided by the jruby-ehcache gem. To install it, simply execute: jgem install jruby-ehcache Note that you may need to use \u0022sudo\u0022 to install gems on your system. Installation for Rails","Ehcache_Documentation_Set\u002Fpairs\u002Fpair260.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_configuring_ehcache_for_jruby.html","Configuring Ehcache for JRuby","Configuring Ehcache for JRuby is done using the same ehcache.xml file as used for native Java Ehcache. The ehcache.xml file can be placed either in your Classpath or, alternatively, can be placed in the same directory as the Ruby file in which you create the CacheManager object from your Ruby code. ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair261.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_using_the_jruby_ehcache_api.html","Using the jruby-ehcache API directly","To make Ehcache available to JRuby: require \u0027ehcache\u0027 Note that, because jruby-ehcache is provided as a Ruby Gem, you must make your Ruby interpreter aware of Ruby Gems in order to load it. You can do this by either including -rubygems on your jruby command line, or you can make Ruby Gems available ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair262.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_using_ehcache_from_within_rails.html","Using Ehcache from within Rails","Configuration of Ehcache is still done with the ehcache.xml file, but for Rails applications you must place this file in the config directory of your Rails app. Also note that you must use JRuby to execute your Rails application, as these gems utilize Ruby\u0027s Java integration to call the Ehcache API....","Ehcache_Documentation_Set\u002Fpairs\u002Fpair263.js"]
,["Ehcache_Documentation_Set\u002Fco-jruby_adding_bigmemory_under_rails.html","Adding Off-Heap Storage under Rails","Terracotta BigMemory products provide in-memory data management with a large additional cache located right at the node where your application runs. To use the off-heap storage provided by the Terracotta BigMemory products with your Rails application, follow these steps.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair264.js"]
,["Ehcache_Documentation_Set\u002Fto-gae_using_ehcache_with_the_google_app_engine.html","Using Ehcache with the Google App Engine","About Google App Engine (GAE) and Ehcache The ehcache-googleappengine module combines the speed of Ehcache with the scale of Google\u0027s memcache and provides the best of both worlds: Speed - Ehcache cache operations take a few microseconds, versus around 60ms for Google\u0027s provided client-server cache,...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair265.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_about_google_app_and_ehcache.html","About Google App Engine (GAE) and Ehcache","The ehcache-googleappengine module combines the speed of Ehcache with the scale of Google\u0027s memcache and provides the best of both worlds: Speed - Ehcache cache operations take a few microseconds, versus around 60ms for Google\u0027s provided client-server cache, memcacheg.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair266.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_configuring_ehcache_xml.html","Configuring ehcache.xml for Google App Engine","Make sure the following elements are commented out: <diskStore path=\u0022\u002Fpath\u002Fto\u002Fstore\u002Fdata\u0022\u002F> <cacheManagerPeerProviderFactory class= ..\u002F> <cacheManagerPeerListenerFactory class= ..\u002F> Within each cache element, ensure that:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair267.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_typical_use_cases.html","Use Cases","Setting up Ehcache as a local cache in front of memcacheg The idea here is that your caches are set up in a cache hierarchy. Ehcache sits in front and memcacheg behind. Combining the two lets you elegantly work around limitations imposed by Google App Engine. You get the benefits of the speed of Ehc...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair268.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_troubleshooting.html","Troubleshooting","NoClassDefFoundError If you get the error java.lang.NoClassDefFoundError: java.rmi.server.UID is a restricted class then you are using a version of Ehcache prior to 1.6. Sample Application The easiest way to get started is to play with a simple sample app. We provide a simple Rails application which...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair269.js"]
,["Ehcache_Documentation_Set\u002Fco-gae_sample_application.html","Sample Application","The easiest way to get started is to play with a simple sample app. We provide a simple Rails application which stores an integer value in a cache along with increment and decrement operations. The sample app shows you how to use ehcache as a caching plugin and how to use it directly from the Rails ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair270.js"]
,["Ehcache_Documentation_Set\u002Fto-tcat_using_ehcache_with_tomcat.html","Using Ehcache with Tomcat","About Using Ehcache with Tomcat Ehcache is probably used most commonly with Tomcat. This page documents some known issues with Tomcat and recommended practices. Ehcache\u0027s own caching and gzip filter integration tests run against Tomcat 5.5 and Tomcat 6. Tomcat will continue to be tested against Ehca...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair271.js"]
,["Ehcache_Documentation_Set\u002Fco-tcat_about_using_ehcache_with_tomcat.html","About Using Ehcache with Tomcat","Ehcache is probably used most commonly with Tomcat. This page documents some known issues with Tomcat and recommended practices. Ehcache\u0027s own caching and gzip filter integration tests run against Tomcat 5.5 and Tomcat 6. Tomcat will continue to be tested against Ehcache. Accordingly, Tomcat is tier...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair272.js"]
,["Ehcache_Documentation_Set\u002Fco-tcat_tomcat_issues_and_practices.html","Tomcat Issues and Best Practices","Problem rejoining a cluster after a reload If I restart\u002Freload a web application in Tomcat that has a CacheManager that is part of a cluster, the CacheManager is unable to rejoin the cluster. If I set logging for net.sf.ehcache.distribution to FINE I see the following exception:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair273.js"]
,["Ehcache_Documentation_Set\u002Fto-jdbc_using_ehcache_with_jdbc.html","Using Ehcache with JDBC","About JDBC Caching Ehcache can easily be combined with your existing JDBC code. Whether you access JDBC directly, or use a Data Access Object\u002FData Access Layer (DAO\u002FDAL), Ehcache can be combined with your existing data access pattern to speed up frequently accessed data to reduce page load times, im...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair274.js"]
,["Ehcache_Documentation_Set\u002Fco-jdbc_about_jdbc_caching.html","About JDBC Caching","Ehcache can easily be combined with your existing JDBC code. Whether you access JDBC directly, or use a Data Access Object\u002FData Access Layer (DAO\u002FDAL), Ehcache can be combined with your existing data access pattern to speed up frequently accessed data to reduce page load times, improve performance, ...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair275.js"]
,["Ehcache_Documentation_Set\u002Fco-jdbc_adding_jdbc_to_dao_dal.html","Adding JDBC caching to DAO\u002FDAL","If your application already has a Data Access Object\u002FData Access Layer (DAO\u002FDAL), this is a natural place to add caching. To add caching, follow these steps: Identify methods which can be cached. Instantiate a cache and add a member variable to your DAO to hold a reference to it.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair276.js"]
,["Ehcache_Documentation_Set\u002Fco-jdbc_sample_code.html","Sample Code","Here is some example code that demonstrates a DAO-based cache using a cache-aside methodology wiring it together with Spring. This code implements a PetDao modeled after the Spring Framework PetClinic sample application.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair277.js"]
,["Ehcache_Documentation_Set\u002Fto-opj_using_ehcache_with_openjpa.html","Using Ehcache with OpenJPA","Installation and Configuration Installation Ehcache easily integrates with the OpenJPCA persistence framework from Apache. To use OpenJPA, add a Maven dependency for ehcache-openjpa. <groupId>net.sf.ehcache<\u002FgroupId> <artifactId>ehcache-openjpa<\u002FartifactId> <version>0.1<\u002Fversion>","Ehcache_Documentation_Set\u002Fpairs\u002Fpair278.js"]
,["Ehcache_Documentation_Set\u002Fco-opj_installation_and_configuration.html","Installation and Configuration","Installation Ehcache easily integrates with the OpenJPCA persistence framework from Apache. To use OpenJPA, add a Maven dependency for ehcache-openjpa. <groupId>net.sf.ehcache<\u002FgroupId> <artifactId>ehcache-openjpa<\u002FartifactId> <version>0.1<\u002Fversion>","Ehcache_Documentation_Set\u002Fpairs\u002Fpair279.js"]
,["Ehcache_Documentation_Set\u002Fco-opj_the_default_cache.html","The Default Cache","As with Hibernate, Ehcache\u2019s OpenJPA module (from 0.2) uses the defaultCache configured in ehcache.xml to create caches. For production, we recommend configuring a cache configuration in ehcache.xml for each cache, so that it may be correctly tuned.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair280.js"]
,["Ehcache_Documentation_Set\u002Fco-opj_troubleshooting.html","Troubleshooting","To verify that OpenJPA is using Ehcache, view the SQL Trace to find out whether it queries the database. If there are still problems, verify in the logs and that your ehcache.xml file is being used. (It could be that if the ehcache.xml file is not found, ehcache-failsafe.xml is used by default.)","Ehcache_Documentation_Set\u002Fpairs\u002Fpair281.js"]
,["Ehcache_Documentation_Set\u002Fco-opj_further_information.html","For Further Information","For more on caching in OpenJPA, see the Apache OpenJPA project at http:\u002F\u002Fopenjpa.apache.org\u002Fbuilds\u002F1.0.2\u002Fapache-openjpa-1.0.2\u002Fdocs\u002Fmanual\u002Fref_guide_caching.html. Using Ehcache with Grails About Using Ehcache with Grails","Ehcache_Documentation_Set\u002Fpairs\u002Fpair282.js"]
,["Ehcache_Documentation_Set\u002Fto-grail_using_ehcache_with_grails.html","Using Ehcache with Grails","About Using Ehcache with Grails Grails 1.2RC1 and higher use Ehcache as the default Hibernate second-level cache. However earlier versions of Grails ship with the Ehcache library and are very simple to enable. The following steps show how to configure Grails to use Ehcache. For 1.2RC1 and higher som...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair283.js"]
,["Ehcache_Documentation_Set\u002Fco-grail_about_grails_and_ehcache.html","About Using Ehcache with Grails","Grails 1.2RC1 and higher use Ehcache as the default Hibernate second-level cache. However earlier versions of Grails ship with the Ehcache library and are very simple to enable. The following steps show how to configure Grails to use Ehcache. For 1.2RC1 and higher some of these steps are already don...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair284.js"]
,["Ehcache_Documentation_Set\u002Fco-grail_using_the_springcache_plugin.html","Using the Springcache Plugin","The Springcache plugin allows you to easily add the following functionality to your Grails project: Caching of Spring bean methods (typically Grails service methods). Caching of page fragments generated by Grails controllers.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair285.js"]
,["Ehcache_Documentation_Set\u002Fco-grail_using_web_sessions_with_grails.html","Using Web Sessions with Grails","Clustering is handled by the Terracotta Web Sessions product. See the article, \u0022Clustering A Grails App with Terracotta\u0022 at http:\u002F\u002Fgquick.blogspot.com\u002F2010\u002F03\u002Fclustering-grails-app-with-terracotta.html, for information about how to use Web Sessions with Grails and Tomcat.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair286.js"]
,["Ehcache_Documentation_Set\u002Fto-glass_using_ehcache_with_glassfish.html","Using Ehcache with GlassFish","Tested Versions of GlassFish Ehcache has been tested with and is used in production with GlassFish V1, V2 and V3. In particular: Ehcache 1.4 - 1.7 has been tested with GlassFish 1 and 2. Ehcache 2.0 has been tested with GlassFish 3.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair287.js"]
,["Ehcache_Documentation_Set\u002Fco-glass_tested_versions.html","Tested Versions of GlassFish","Ehcache has been tested with and is used in production with GlassFish V1, V2 and V3. In particular: Ehcache 1.4 - 1.7 has been tested with GlassFish 1 and 2. Ehcache 2.0 has been tested with GlassFish 3.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair288.js"]
,["Ehcache_Documentation_Set\u002Fco-glass_deploying_sample_app.html","Deploying the Sample Application","Ehcache comes with a sample web application which is used to test the page caching. The page caching is the only area that is sensitive to the Application Server. For Hibernate and general caching, it is only dependent on your Java version.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair289.js"]
,["Ehcache_Documentation_Set\u002Fco-glass_troubleshooting.html","Troubleshooting","How to get around the EJB Container restrictions on thread creation When Ehcache is running in the EJB Container, for example for Hibernate caching, it is in technical breach of the EJB rules. Some app servers let you override this restriction. I am not exactly sure how this in done in Glassfish. Fo...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair290.js"]
,["Ehcache_Documentation_Set\u002Fto-jsr_using_ehcache_with_jsr107.html","Using Ehcache with JSR107","About Ehcache Support for JSR107 Information on Ehcache support of JSR107 is available on github at https:\u002F\u002Fgithub.com\u002Fjsr107\u002Fehcache-jcache. FAQ Questions about Configuration General Ehcache Where is the source code?","Ehcache_Documentation_Set\u002Fpairs\u002Fpair291.js"]
,["Ehcache_Documentation_Set\u002Fco-jsr_about_support_for_jsr107.html","About Ehcache Support for JSR107","Information on Ehcache support of JSR107 is available on github at https:\u002F\u002Fgithub.com\u002Fjsr107\u002Fehcache-jcache. FAQ Questions about Configuration General Ehcache Where is the source code? The source code is distributed in the root directory of the download. It is also available through SVN.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair292.js"]
,["Ehcache_Documentation_Set\u002Fto-title_ehcache_faq.html","FAQ","Questions about Configuration General Ehcache Where is the source code? The source code is distributed in the root directory of the download. It is also available through SVN. Can you use more than one instance of Ehcache in a single VM?","Ehcache_Documentation_Set\u002Fpairs\u002Fpair293.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_configuration.html","Questions about Configuration","General Ehcache Where is the source code? The source code is distributed in the root directory of the download. It is also available through SVN. Can you use more than one instance of Ehcache in a single VM?","Ehcache_Documentation_Set\u002Fpairs\u002Fpair294.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_configuration_2.html","General Ehcache","Where is the source code? The source code is distributed in the root directory of the download. It is also available through SVN. Can you use more than one instance of Ehcache in a single VM? Yes. Create your CacheManager using new CacheManager(...) and keep hold of the reference. The singleton appr...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair295.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_configuration_3.html","Replicated Cache","What is the minimum configuration to get replicated caching going? The minimum configuration you need to get replicated caching going is: <cacheManagerPeerProviderFactory class=\u0022net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory\u0022 properties=\u0022peerDiscovery=automatic, multicastGroupAddress...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair296.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_development.html","Questions about Development","General Ehcache Can I use Ehcache as a memory cache only? Yes. Just set the persistence strategy of cache to \u0022none.\u0022 Can I use Ehcache as a disk cache only? As of Ehcache 2.0, this is not possible. You can set the maxEntriesLocalHeap to 1, but setting the maxSize to 0 now gives an infinite capacity....","Ehcache_Documentation_Set\u002Fpairs\u002Fpair297.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_development_2.html","General Ehcache","Can I use Ehcache as a memory cache only? Yes. Just set the persistence strategy of cache to \u0022none.\u0022 Can I use Ehcache as a disk cache only? As of Ehcache 2.0, this is not possible. You can set the maxEntriesLocalHeap to 1, but setting the maxSize to 0 now gives an infinite capacity.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair298.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_development_3.html","Replicated Cache","How many threads does Ehcache use and how much memory does that consume? The amount of memory consumed per thread is determined by the stack size. This is set using -Xss. The amount varies by OS. The default is 512KB (for Linux), but 100kb is also recommended. The threads are created per cache as fo...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair299.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_environ_and_interop.html","Questions about Environment and Interoperability","General Ehcache What version of JDK does Ehcache run with? JDK 1.6 or higher. Can you use Ehcache with Hibernate and outside of Hibernate at the same time? Yes. You use 1 instance of Ehcache and 1 ehcache.xml. You configure your caches with Hibernate names for use by Hibernate. You can have other ca...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair300.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_environ_and_interop_2.html","General Ehcache","What version of JDK does Ehcache run with? JDK 1.6 or higher. Can you use Ehcache with Hibernate and outside of Hibernate at the same time? Yes. You use 1 instance of Ehcache and 1 ehcache.xml. You configure your caches with Hibernate names for use by Hibernate. You can have other caches that you in...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair301.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_environ_and_interop_3.html","Replicated Cache","With replicated caching on Ubuntu or Debian, why am I see the warning below? WARN [Replication Thread] RMIAsynchronousCacheReplicator.flushReplicationQueue(324) | Unable to send message to remote peer. Message was: Connection refused to host: 127.0.0.1; nested exception is: java.net.ConnectException...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair302.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_operations.html","Questions about Operations","General Ehcache How do you get an element without affecting statistics? Use the Cache.getQuiet() method. It returns an element without updating statistics. Is there a simple way to disable Ehcache when testing?","Ehcache_Documentation_Set\u002Fpairs\u002Fpair303.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_operations_2.html","General Ehcache","How do you get an element without affecting statistics? Use the Cache.getQuiet() method. It returns an element without updating statistics. Is there a simple way to disable Ehcache when testing? Set the system property net.sf.ehcache.disabled=true to disable Ehcache. This can easily be done using -D...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair304.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_operations_3.html","Replicated Cache","How can I see if replicated caching is working? You should see the listener port open on each server. You can use the replicated cache debug tool to see what is going on. For information, see Debugging and Monitoring Replicated Caches.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair305.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_troubleshooting.html","Questions about Troubleshooting","General Ehcache I have created a new cache and its status is STATUS_UNINITIALISED. How do I initialize it? You need to add a newly created cache to a CacheManager before it gets initialized. Use code like the following:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair306.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_troubleshooting_2.html","General Ehcache","I have created a new cache and its status is STATUS_UNINITIALISED. How do I initialize it? You need to add a newly created cache to a CacheManager before it gets initialized. Use code like the following:","Ehcache_Documentation_Set\u002Fpairs\u002Fpair307.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_troubleshooting_3.html","Replicated Cache","I see log messages about SoftReferences. What are these about and how do I stop getting the messages? Ehcache uses SoftReferences with asynchronous RMI-based replication, so that replicating caches do not run out of memory if the network is interrupted. Elements scheduled for replication will be col...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair308.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_errors_and_warnings.html","Questions about Errors and Warnings","General Ehcache I am using Java 6 and getting a java.lang.VerifyError on the Backport Concurrent classes. Why? The backport-concurrent library is used in Ehcache to provide java.util.concurrency facilities for Java 4 - Java 6. Use either the Java 4 version which is compatible with Java 4-6, or use t...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair309.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_errors_and_warnings_2.html","General Ehcache","I am using Java 6 and getting a java.lang.VerifyError on the Backport Concurrent classes. Why? The backport-concurrent library is used in Ehcache to provide java.util.concurrency facilities for Java 4 - Java 6. Use either the Java 4 version which is compatible with Java 4-6, or use the version for y...","Ehcache_Documentation_Set\u002Fpairs\u002Fpair310.js"]
,["Ehcache_Documentation_Set\u002Fre-faq_ehcache_errors_and_warnings_3.html","Replicated Cache","Why do I get a RemoteCacheException in a replicated cache topology? The error is: net.sf.ehcache.distribution.RemoteCacheException: Error doing put to remote peer. Message was: Error unmarshaling return header; nested exception is: java.net.SocketTimeoutException: Read timed out.","Ehcache_Documentation_Set\u002Fpairs\u002Fpair311.js"]
],
"words":
{
"welcome":[0,1]
,"ehcache":[0,6,1,3,2,1,3,4,4,1,6,1,7,1,8,2,10,2,11,3,13,9,14,9,16,1,18,2,19,2,20,1,23,1,26,1,28,3,30,1,31,1,32,1,36,1,38,1,39,2,40,4,41,1,42,1,43,3,44,1,45,1,47,2,50,2,51,1,55,1,57,4,59,4,60,4,61,1,62,1,63,1,65,1,68,4,71,1,72,1,80,2,82,6,87,2,91,8,94,1,96,4,97,2,99,4,100,3,103,1,104,4,108,1,111,1,112,3,113,1,116,2,117,5,118,2,119,1,121,2,122,14,123,2,126,1,127,1,128,2,130,1,134,1,137,2,138,2,139,2,141,4,143,4,144,2,145,2,146,10,148,3,150,1,151,1,153,5,156,5,157,1,158,1,165,3,166,1,167,1,168,5,169,2,170,1,171,4,173,1,174,3,175,1,176,5,177,4,178,6,179,2,180,1,181,3,182,4,183,5,184,5,185,1,189,1,190,1,193,3,198,1,200,5,204,1,206,2,207,1,211,1,213,1,224,4,225,2,226,2,227,1,228,11,230,2,232,2,234,1,235,15,236,1,237,2,238,4,239,2,242,1,243,1,244,1,247,3,248,8,249,9,250,1,251,3,252,5,253,1,254,2,256,5,257,1,258,3,259,5,260,3,261,2,262,18,264,1,265,5,266,1,267,5,268,1,269,1,270,1,271,4,272,2,273,1,274,2,275,1,276,2,277,1,278,4,280,1,282,1,283,5,284,1,286,1,287,3,288,3,289,9,290,1,291,2,294,6,297,7,298,3,300,9,303,10,304,1,306,5,307,1,309,5]
,"2.10":[0,1,1,2]
,"online":[0,1,162,1,210,1]
,"documentation":[0,2,3,1,15,1,76,1,144,1,146,1,153,1,185,1,186,1,219,1,222,1,235,1,294,1,301,1]
,"library":[0,2,178,1,258,1,283,1,309,1]
,"contains":[0,1,14,1,18,1,26,1,31,1,42,1,47,1,53,1,57,1,113,1,122,2,143,1,156,1,178,1,227,3,247,2,248,1,249,1,267,1,283,1]
,"product":[0,1,3,1,4,1,6,1,7,1,8,1,10,3,15,1,18,1,19,1,20,1,21,1,23,1,24,1,25,1,26,1,27,1,28,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,38,1,39,1,40,1,41,1,42,1,43,1,44,1,45,1,47,1,48,1,49,1,50,1,53,1,54,1,55,1,58,1,59,1,60,1,61,2,62,1,63,1,64,1,65,2,66,1,67,1,68,1,70,1,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,1,80,1,81,1,82,1,83,1,85,1,86,1,87,1,89,1,90,1,91,1,92,1,94,1,95,1,96,1,97,1,99,1,100,1,101,1,104,1,106,1,107,1,108,1,109,1,111,1,112,1,113,1,114,1,116,1,117,1,118,1,121,1,122,1,126,1,127,1,128,1,130,1,132,1,133,1,134,1,135,1,137,1,138,1,139,1,140,1,141,1,150,1,153,2,157,1,158,1,159,1,160,1,161,1,162,1,163,1,166,1,168,1,169,1,170,1,171,1,235,1,263,2,285,1]
,"open":[0,1,43,1,64,1,171,1,224,2,226,5,228,1,229,2,230,1,231,3,232,1,255,1,262,2,300,1,301,1,304,1]
,"source":[0,1,4,1,25,1,43,1,62,2,137,1,143,1,146,1,166,1,171,1,182,2,210,1,224,1,228,1,231,2,255,1,294,2]
,"standards-based":[0,1,3,1]
,"cache":[0,2,3,5,4,11,7,2,8,27,9,9,10,8,11,1,14,8,18,5,20,10,21,3,25,18,26,32,29,1,30,2,31,11,32,8,33,3,34,2,36,8,37,1,38,3,39,6,40,14,42,2,44,12,50,4,51,1,54,6,55,1,57,4,58,2,59,3,60,6,61,6,62,1,64,5,65,3,66,1,67,2,68,3,70,17,71,14,72,4,73,9,74,3,75,6,76,14,78,2,79,1,80,4,81,1,82,13,83,7,84,1,85,2,86,1,87,7,88,1,89,6,90,4,91,28,93,1,94,4,96,7,97,5,98,1,99,4,100,8,101,2,102,2,103,1,104,20,105,1,106,14,107,4,108,17,109,2,110,1,111,4,112,4,113,1,120,1,121,1,122,2,123,13,124,5,127,6,128,3,130,1,131,9,132,5,133,1,134,8,135,12,138,6,139,20,140,1,141,7,143,6,144,11,145,6,146,4,150,1,153,1,156,1,157,3,158,1,159,1,160,3,163,1,170,3,171,2,173,2,174,12,176,4,177,5,178,4,179,9,180,9,181,12,182,24,183,8,184,4,187,1,188,1,189,2,190,10,192,3,193,2,197,1,200,7,201,2,202,3,204,2,206,4,208,6,209,14,210,1,213,1,220,4,221,1,224,4,225,6,226,3,227,8,228,7,229,3,230,1,235,8,238,2,239,7,240,5,241,2,242,2,243,2,244,12,246,7,247,1,248,2,249,8,252,9,254,3,255,3,256,6,261,11,262,8,263,5,265,3,266,1,267,4,269,1,272,1,275,13,276,8,278,1,279,3,283,3,284,1,294,2,295,6,297,16,298,4,300,1,301,1,303,13,304,7,306,13,307,1,309,7,310,2]
,"boosting":[0,1,3,1]
,"performance":[0,1,3,1,6,1,7,3,9,1,10,2,11,1,57,1,65,3,85,1,86,1,89,1,90,1,91,2,100,1,127,2,128,1,137,1,138,2,143,1,163,1,166,1,182,3,189,1,190,1,235,1,246,1,248,2,263,2,274,1,297,2,303,1]
,"offloading":[0,1,3,1]
,"database":[0,1,3,1,4,2,7,5,8,7,9,4,34,2,54,1,62,1,64,1,70,14,71,4,73,1,141,10,176,5,179,10,180,2,181,10,182,17,235,1,240,2,249,6,262,1,274,1,276,1,280,1]
,"simplifying":[0,1,3,1,135,1]
,"scalability":[0,1,3,1,7,2,9,2]
,"widely-used":[0,1]
,"java-based":[0,1,3,1]
,"it\u0027s":[0,1,182,1]
,"robust":[0,1,3,1]
,"proven":[0,1,3,1]
,"full-featured":[0,1,3,1]
,"scales":[0,1]
,"in-process":[0,1,3,1,265,1]
,"nodes":[0,1,3,1,9,3,70,3,90,1,143,1,171,1,174,1,200,3,224,2]
,"mixed":[0,1,3,1,39,1,40,1,132,1]
,"in-process\u002Fout-of-process":[0,1,3,1]
,"configurations":[0,1,3,1,122,1,123,1,132,2,134,1,145,1,182,1,217,1,278,1,294,1]
,"terabyte-sized":[0,1]
,"caches":[0,1,3,1,6,1,8,2,9,2,10,3,11,2,14,2,18,2,19,4,20,1,21,1,23,3,24,1,25,4,34,1,35,1,36,1,38,1,39,2,44,2,47,1,52,1,53,1,57,3,58,1,59,1,61,1,62,1,64,3,66,1,67,1,69,1,70,4,86,1,94,1,99,1,100,3,102,1,104,2,112,1,122,1,127,1,128,2,131,12,132,10,133,1,134,1,135,2,138,1,139,3,146,1,160,3,172,1,174,3,178,1,195,1,200,1,204,1,206,3,208,1,209,1,220,1,241,3,242,1,244,4,247,1,249,2,263,1,267,1,276,1,279,1,283,1,294,6,297,1,300,9,303,2,304,2,306,3,307,1,309,1]
,"started":[0,1,13,1,122,1,173,1,176,1,182,1,251,1,256,1,262,1,266,1,269,1,272,1]
,"installing":[0,1,13,1,14,3,235,1,236,1]
,"general-purpose":[0,1,3,1,13,1,14,4,106,1]
,"caching":[0,1,3,1,5,1,6,1,7,8,8,8,13,1,14,5,20,1,22,1,53,2,55,2,70,3,71,1,76,1,112,1,141,2,144,1,150,1,154,1,176,5,177,7,178,2,179,1,180,3,181,1,182,1,183,6,189,1,190,7,191,1,193,7,197,2,200,7,201,1,203,1,204,3,212,1,213,2,223,1,224,2,225,1,235,5,239,2,240,4,244,1,248,5,249,1,251,1,254,2,256,5,258,1,259,1,261,1,262,16,267,4,269,2,271,1,272,1,274,1,275,3,281,1,284,2,288,3,289,2,295,2,301,1,304,1]
,"instructions":[0,1,226,1,235,1]
,"downloading":[0,1,235,1,236,1,237,1]
,"adding":[0,1,25,2,39,1,41,2,42,2,85,1,90,1,92,1,100,1,104,1,106,1,107,1,108,1,111,1,134,2,144,1,176,1,183,1,202,1,208,1,220,1,239,1,262,1,263,2,272,1,275,1,303,1]
,"application":[0,1,7,4,8,1,9,12,14,1,31,3,32,3,43,1,59,1,60,1,62,10,70,5,71,1,72,4,80,1,112,1,121,1,124,1,127,1,141,4,143,2,153,1,160,1,166,1,169,3,170,1,176,1,177,9,179,4,180,1,181,8,182,2,183,6,189,1,192,4,193,5,229,1,232,1,235,1,245,3,249,2,252,1,256,5,260,2,261,2,262,11,263,4,269,2,272,2,275,2,276,1,288,3,303,1,306,1,307,1,309,1]
,"release":[1,3,33,1,49,1,51,1,55,1,89,1,103,1,185,1]
,"notes":[1,2,248,1]
,"detailed":[1,1,117,1,174,1]
,"information":[1,2,3,1,10,3,11,2,13,1,14,2,19,1,20,3,36,1,38,2,39,1,40,1,42,1,44,1,54,1,55,1,59,1,76,1,96,1,100,1,104,1,112,1,126,1,127,1,128,1,131,2,133,1,134,1,138,1,144,1,146,1,153,1,156,1,165,2,166,1,171,1,178,1,182,1,190,2,226,1,229,1,235,1,237,1,247,1,249,1,263,1,267,1,281,1,284,1,285,1,288,1,291,1,297,1,303,1,304,2,309,1]
,"new":[1,1,19,5,25,5,32,1,35,1,40,2,41,1,44,1,65,1,67,1,104,3,112,2,113,2,117,4,127,2,128,1,160,1,178,1,182,1,197,1,206,1,208,3,220,3,226,1,227,1,248,7,249,1,252,1,261,1,262,3,283,1,294,1,297,1,303,5,306,2,309,2]
,"page":[1,1,7,1,8,13,14,2,54,1,100,1,173,1,176,3,177,15,178,1,181,2,189,1,190,6,191,1,192,6,193,4,195,1,197,1,252,1,256,1,271,1,274,1,284,1,288,2,289,1,300,1]
,"open-source":[3,2,38,1,122,2,143,1,145,1]
,"solution":[3,1,71,2,177,1,179,1,180,1,181,1,182,2,183,1,184,1,192,1,209,1]
,"today\u2019s":[3,1]
,"widely":[3,1]
,"used":[3,1,6,4,8,4,9,2,10,3,14,1,19,2,20,1,21,1,26,1,36,1,40,2,41,5,42,6,47,1,55,2,58,1,63,1,65,1,67,2,68,1,70,2,74,1,76,4,80,1,81,1,82,1,86,1,96,1,100,1,108,1,111,1,112,10,114,1,117,1,122,1,124,2,127,5,128,6,130,1,131,2,132,1,134,2,135,1,137,1,139,2,144,2,148,2,160,1,173,1,174,1,181,1,182,1,183,1,190,1,197,1,200,2,206,1,207,1,213,1,220,1,224,2,226,1,229,3,230,1,231,1,232,1,239,1,244,1,249,1,256,1,258,2,260,1,265,1,267,1,271,1,280,2,287,1,288,1,297,4,298,2,304,1,309,2]
,"second-level":[3,1,235,5,238,2,239,4,240,2,249,2,278,1,283,2]
,"hibernate":[3,1,7,1,8,3,14,2,68,3,102,1,168,1,176,1,178,4,234,1,235,20,236,2,237,1,238,7,239,12,240,3,241,4,242,2,243,3,244,3,245,1,246,1,247,3,248,15,249,21,279,1,283,4,288,1,289,1,294,1,300,8,309,2]
,"additionally":[3,1,70,1]
,"integrate":[3,1,252,1]
,"third-party":[3,1]
,"products":[3,2,10,3,38,1,44,1,59,1,122,2,123,1,124,1,132,1,263,2]
,"coldfusion":[3,1,250,1,251,4,252,3]
,"google":[3,1,264,1,265,6,266,1,267,2,300,2]
,"app":[3,1,165,1,168,1,178,1,232,1,262,1,264,1,265,6,266,1,267,2,269,2,283,1,285,1,289,1,300,2,301,3]
,"engine":[3,1,134,6,190,1,264,1,265,6,266,1,267,2,300,2]
,"spring":[3,1,14,1,59,4,62,2,68,1,176,2,178,2,183,8,238,1,239,1,253,1,254,6,255,4,256,9,275,3,276,5,284,2]
,"provides":[3,1,9,1,10,3,38,1,40,1,42,1,47,1,63,1,112,1,122,1,126,2,128,1,143,3,144,4,153,1,169,1,177,1,184,1,189,1,200,3,206,1,224,1,262,1,265,2,267,1,306,1]
,"replicate":[3,1,208,1,210,1,217,1,222,1,225,1,297,1]
,"across":[3,1,7,1,9,1,10,1,47,1,57,2,64,4,70,1,74,1,181,1,182,1,200,1]
,"multiple":[3,1,7,2,9,4,10,1,19,3,36,1,38,1,57,1,64,4,74,2,90,1,100,1,104,2,122,1,127,1,128,2,182,1,190,1,200,1,207,1,239,3,272,3,297,1,298,2]
,"core":[3,1,18,1,53,1,80,1,156,1,237,1,249,2,288,2,297,1]
,"bigmemory":[3,7,8,1,9,1,10,5,38,2,90,1,122,2,131,1,132,1,139,1,143,3,144,2,153,2,235,3,249,3,258,1,263,4,294,3,300,1]
,"max":[3,4,8,1,9,1,38,1,90,1,112,2,127,2,134,1,143,1,294,2,300,1]
,"terracotta\u2019s":[3,2]
,"commercial":[3,1]
,"in-memory":[3,1,4,1,8,2,10,3,11,1,18,2,60,1,126,1,127,1,128,3,143,1,144,1,145,1,146,1,153,1,171,1,182,1,235,2,263,1]
,"data-storage":[3,1,137,2]
,"terracotta":[3,2,8,1,10,3,38,1,50,1,58,1,62,2,76,1,122,2,132,1,139,1,144,1,156,2,178,1,181,1,182,1,235,1,248,4,258,1,261,1,263,2,266,1,285,2,294,2,306,2]
,"server":[3,2,7,1,8,7,9,1,10,1,14,4,60,1,62,1,70,1,76,1,143,1,177,4,181,3,182,1,189,1,190,2,193,3,201,1,206,3,232,1,248,1,262,1,263,1,288,1,295,1,301,2,304,1,306,1]
,"array":[3,2,9,1,10,1,76,1,182,1,248,1,306,1]
,"provided":[3,1,8,1,18,1,20,1,24,1,40,1,60,2,71,1,91,2,100,1,113,1,121,1,131,1,143,1,150,1,156,1,160,1,173,1,174,2,182,1,205,1,214,1,227,1,248,1,259,1,261,1,263,1,265,1]
,"enables":[3,1,113,1,144,2,160,1,263,1]
,"terabyte-size":[3,1]
,"offerings":[3,1]
,"http:\u002F\u002Fterracotta.org\u002Fdocumentation":[3,1]
,"available":[3,1,9,1,10,5,28,2,32,1,40,2,41,2,42,1,50,1,72,2,76,1,91,1,112,1,126,1,128,1,130,6,132,1,139,1,143,2,144,2,146,4,156,2,157,2,158,2,174,2,206,1,209,1,216,1,226,2,227,1,229,1,240,1,245,1,258,1,261,2,262,1,263,2,276,2,291,1,294,2]
,"trial":[3,1]
,"full":[3,1,25,1,57,2,65,1,73,1,74,1,111,3,114,1,122,1,128,1,139,1,141,1,143,1,144,1,153,2,179,1,184,2,205,1,214,1,226,1,229,1,276,1,303,1]
,"versions":[3,1,40,1,43,1,51,1,57,1,61,1,64,1,65,2,146,4,178,1,231,1,235,1,237,3,248,2,255,1,265,1,283,1,287,1,289,1,298,1]
,"version":[3,1,8,1,43,1,44,1,50,1,61,1,64,1,68,1,70,1,89,2,122,2,143,2,146,1,148,2,173,2,224,1,236,1,237,1,240,1,248,1,259,3,261,2,265,1,268,1,288,1,300,2,306,1,309,2]
,"longer":[3,1,43,1,44,1,64,1,91,1,123,2,138,2,139,1,248,1,303,1]
,"actively":[3,1,251,1]
,"updated":[3,1,31,1,44,3,66,1,70,3,89,2,112,2,127,2,141,4,153,1,179,4,190,1,240,3,248,1,294,2]
,"basic":[4,1,22,1,26,1,61,1,177,1,193,1,235,1,262,1]
,"terms":[4,2,10,1,127,1]
,"<<this":[4,1,6,1,7,1,8,1,10,2,18,1,19,1,20,1,21,1,23,1,24,1,25,1,26,1,27,1,28,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,38,1,39,1,40,1,41,1,42,1,43,1,44,1,45,1,47,1,48,1,49,1,50,1,53,1,54,1,55,1,58,1,59,1,60,1,61,1,62,1,63,1,64,1,65,1,66,1,67,1,68,1,70,1,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,1,80,1,81,1,82,1,83,1,85,1,86,1,87,1,89,1,90,1,91,1,92,1,94,1,95,1,96,1,97,1,99,1,100,1,101,1,104,1,106,1,107,1,108,1,109,1,111,1,112,1,113,1,114,1,116,1,117,1,118,1,121,1,122,1,123,1,124,1,126,1,127,1,128,1,130,1,132,1,133,1,134,1,135,1,137,1,138,1,139,1,140,1,141,1,150,1,157,1,158,1,159,1,160,1,161,1,162,1,163,1,166,1,168,1,169,1,170,1,171,1]
,"topic":[4,1,6,1,7,1,8,1,10,2,18,1,19,1,20,1,21,1,23,1,24,1,25,1,26,1,27,1,28,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,38,1,39,1,40,1,41,1,42,1,43,1,44,2,45,1,47,1,48,1,49,1,50,1,51,1,53,1,54,1,55,1,58,1,59,1,60,1,61,1,62,1,63,1,64,1,65,1,66,1,67,1,68,1,70,1,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,1,80,1,81,1,82,1,83,1,85,1,86,1,87,1,89,2,90,1,91,1,92,1,94,1,95,1,96,1,97,1,99,1,100,1,101,2,104,1,106,2,107,1,108,1,109,1,111,1,112,1,113,1,114,1,116,1,117,1,118,1,121,1,122,1,123,1,124,1,126,1,127,1,128,1,130,1,132,1,133,1,134,1,135,1,137,2,138,2,139,1,140,1,141,1,148,1,150,1,157,1,158,1,159,1,160,1,161,1,162,1,163,1,166,1,168,1,169,1,170,1,171,1,200,2,224,3,225,2,226,4,228,12,235,1,248,1,251,1]
,"shared":[4,1,6,1,7,1,8,1,10,2,18,1,19,1,20,1,21,1,23,1,24,1,25,1,26,1,27,1,28,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,38,1,39,1,40,1,41,1,42,1,43,1,44,1,45,1,47,1,48,1,49,1,50,1,53,1,54,1,55,1,58,1,59,1,60,1,61,1,62,1,63,1,64,1,65,1,66,1,67,1,68,1,70,1,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,1,80,1,81,1,82,1,83,1,85,1,86,1,87,1,89,1,90,1,91,1,92,1,94,1,95,1,96,1,97,1,99,1,100,1,101,1,104,1,106,1,107,1,108,1,109,1,111,1,112,1,113,1,114,1,116,1,117,1,118,1,121,1,122,1,123,1,124,1,126,1,127,1,128,1,130,1,132,1,133,1,134,3,135,1,137,1,138,1,139,1,140,1,141,1,150,1,157,1,158,1,159,1,160,1,161,1,162,1,163,1,166,1,168,1,169,1,170,1,171,1,182,1,267,1]
,"ehc":[4,1,6,1,7,1,8,1,9,1,10,3,18,1,19,1,20,1,21,1,23,1,24,1,25,1,26,1,27,1,28,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,38,3,39,1,40,1,41,1,42,1,43,1,44,1,45,1,47,1,48,1,49,1,50,1,53,1,54,1,55,1,57,1,58,1,59,1,60,1,61,1,62,1,63,1,64,2,65,3,66,1,67,1,68,1,70,1,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,1,80,1,81,1,82,1,83,1,85,1,86,1,87,1,89,1,90,1,91,1,92,1,94,1,95,1,96,1,97,1,99,1,100,1,101,1,104,1,106,1,107,1,108,1,109,1,111,1,112,1,113,1,114,1,116,1,117,1,118,1,121,1,122,4,123,2,124,1,126,1,127,1,128,3,130,2,131,2,132,1,133,1,134,1,135,1,137,1,138,4,139,2,140,1,141,2,150,1,156,1,157,1,158,1,159,1,160,1,161,1,162,1,163,1,165,1,166,1,168,1,169,1,170,1,171,3]
,"bmg":[4,1,6,1,7,1,8,1,10,2,18,1,19,1,20,1,21,1,23,1,24,1,25,1,26,1,27,1,28,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,38,1,39,1,40,1,41,1,42,1,43,1,44,1,45,1,47,1,48,1,49,1,50,1,53,1,54,1,55,1,58,1,59,1,60,1,61,1,62,1,63,1,64,1,65,1,66,1,67,1,68,1,70,1,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,1,80,1,81,1,82,1,83,1,85,1,86,1,87,1,89,1,90,1,91,1,92,1,94,1,95,1,96,1,97,1,99,1,100,1,101,1,104,1,106,1,107,1,108,1,109,1,111,1,112,1,113,1,114,1,116,1,117,1,118,1,121,1,122,1,123,1,124,1,126,1,127,1,128,1,130,1,132,1,133,1,134,1,135,1,137,1,138,1,139,1,140,1,141,1,148,1,150,1,157,1,158,1,159,1,160,1,161,1,162,1,163,1,166,1,168,1,169,1,170,1,171,1]
,"bmm":[4,1,6,1,7,1,8,1,10,2,18,1,19,1,20,1,21,1,23,1,24,1,25,1,26,1,27,1,28,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,38,1,39,1,40,1,41,1,42,1,43,1,44,1,45,1,47,1,48,1,49,1,50,1,53,1,54,1,55,1,58,1,59,1,60,1,61,1,62,1,63,1,64,1,65,1,66,1,67,1,68,1,70,1,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,1,80,1,81,1,82,1,83,1,85,1,86,1,87,1,89,3,90,1,91,1,92,1,94,1,95,1,96,1,97,1,99,1,100,1,101,1,104,1,106,1,107,1,108,1,109,1,111,1,112,1,113,1,114,1,116,1,117,1,118,1,121,1,122,1,123,1,124,1,126,1,127,1,128,1,130,1,132,1,133,1,134,1,135,1,137,1,138,1,139,1,140,1,141,1,148,1,150,1,157,1,158,1,159,1,160,1,161,1,162,1,163,1,166,1,168,1,169,1,170,1,171,2]
,"docs.>>":[4,1,6,1,7,1,8,1,10,2,18,1,19,1,20,1,21,1,23,1,24,1,25,1,26,1,27,1,28,1,30,1,31,1,32,1,33,1,34,1,35,1,36,1,38,1,39,1,40,1,41,1,42,1,43,1,44,1,45,1,47,1,48,1,49,1,50,1,53,1,54,1,55,1,58,1,59,1,60,1,61,1,62,1,63,1,64,1,65,1,66,1,67,1,68,1,70,1,71,1,72,1,73,1,74,1,75,1,76,1,77,1,78,1,85,1,86,1,87,1,89,1,90,1,91,1,92,1,94,1,95,1,96,1,97,1,99,1,100,1,101,1,104,1,106,1,107,1,108,1,109,1,116,1,117,1,118,1,121,1,122,1,126,1,127,1,128,1,130,1,132,1,133,1,134,1,135,1,137,1,138,1,139,1,140,1,141,1,150,1,157,1,158,1,159,1,160,1,161,1,163,1,166,1,168,1,169,1,170,1,171,1]
,"wiktionary":[4,1]
,"defines":[4,1,126,1]
,"store":[4,3,7,1,10,7,18,1,19,2,26,1,31,1,58,2,60,2,74,4,76,4,78,1,91,1,104,1,111,6,112,3,113,1,114,3,124,5,126,7,127,11,128,29,130,3,131,5,138,1,139,2,143,6,153,1,235,2,262,2,263,3,306,2]
,"things":[4,1,8,1,76,1,82,1,106,1,108,2,170,1,216,1,226,1,247,1,307,1]
,"required":[4,1,42,1,43,2,58,2,59,1,63,1,65,1,70,1,104,3,122,2,128,2,130,1,132,2,134,1,137,1,139,1,144,1,156,1,177,1,178,1,206,4,224,1,227,2,241,1,248,2,283,1,309,1]
,"future":[4,1,18,1,44,1,50,1,89,1,112,2,123,1]
,"retrieved":[4,2,112,1,127,1,190,1,228,2]
,"rapidly":[4,1]
,"collection":[4,1,8,1,10,4,41,1,76,2,82,1,127,1,152,1,153,5,157,1,163,1,176,1,235,3,243,2,247,1,263,1,275,1,300,1]
,"temporary":[4,1,128,2,130,1,131,3,144,1,145,2,231,1,232,3,300,3,306,1]
,"data":[4,9,6,2,7,3,8,8,9,7,10,10,11,6,18,4,20,1,31,7,32,3,33,1,34,2,35,3,38,1,40,4,43,1,54,6,57,8,60,1,61,6,70,5,71,2,76,1,100,1,113,2,124,6,126,5,127,3,128,8,130,8,131,2,132,4,133,1,134,1,136,1,137,6,138,2,139,11,141,13,143,6,144,13,146,3,153,1,171,1,176,3,179,14,181,5,182,20,190,1,200,1,206,1,224,2,226,1,235,3,240,3,249,1,252,1,261,1,263,1,267,1,274,3,275,2,297,1,303,1,306,1]
,"either":[4,1,7,1,9,1,10,2,14,2,18,1,19,1,39,1,54,1,60,1,61,1,65,2,80,1,89,1,91,1,94,1,101,1,127,1,128,2,131,3,139,1,144,1,145,1,146,1,190,1,197,1,224,1,229,1,232,1,238,1,260,1,261,1,262,2,294,2,309,1]
,"duplicates":[4,1]
,"located":[4,1,263,1]
,"elsewhere":[4,1]
,"result":[4,1,8,1,40,1,42,9,43,2,70,1,76,1,87,1,91,2,112,2,134,1,180,2,181,1,303,1]
,"computation":[4,1,8,1,134,1]
,"already":[4,1,19,2,40,1,100,1,104,3,131,1,144,1,165,1,170,2,177,2,178,1,189,1,193,2,197,2,204,1,208,1,220,1,227,1,248,1,275,2,283,1,295,1,298,1,309,2]
,"repeatedly":[4,1]
,"accessed":[4,1,99,1,123,1,135,1,138,1,140,2,274,1,297,3]
,"minimal":[4,1,135,1,183,1,206,1]
,"costs":[4,1]
,"time":[4,1,6,1,7,3,8,7,10,3,35,1,36,1,40,1,43,2,54,1,57,1,61,1,65,2,66,2,67,1,70,10,78,1,82,1,91,1,96,2,112,4,113,1,121,2,127,2,128,2,135,1,141,1,143,1,153,3,160,1,165,1,177,4,179,1,180,2,181,4,182,6,183,3,190,4,192,3,211,1,220,1,252,2,256,3,261,3,300,1,310,1]
,"resources":[4,1,42,1,57,2,61,2,62,1,64,1,73,1,74,1,91,1,118,1,130,1,131,1,132,6,137,2,138,1,265,1]
,"hit":[4,3,8,6,71,2,113,1,135,4,177,1,190,1,192,1,246,2,252,1]
,"element":[4,4,8,1,9,2,10,2,18,1,21,3,26,19,31,3,32,3,36,3,38,3,40,7,42,4,44,3,48,2,58,1,60,1,64,2,65,4,66,1,74,1,75,8,76,7,78,5,81,2,86,1,89,6,90,1,91,28,95,1,100,3,107,1,111,4,112,13,113,11,114,1,122,1,123,4,124,1,126,1,127,11,128,6,134,3,138,5,139,2,140,2,148,1,174,3,176,1,180,4,181,4,184,4,190,1,204,1,205,4,208,3,214,4,220,3,225,2,227,2,228,5,240,1,247,1,249,4,261,3,266,1,276,2,294,1,297,13,300,1,303,4,306,2]
,"requested":[4,2,8,1,42,1,75,1,80,1,124,1,135,2]
,"exists":[4,1,10,1,19,2,44,1,75,1,77,1,89,1,100,1,104,2,127,2,132,1,170,1,183,1,256,1,295,1]
,"given":[4,2,40,1,41,3,50,4,55,1,74,2,76,1,104,1,112,1,160,1,174,1,206,1,239,2,244,2,255,1]
,"key":[4,2,17,1,18,1,21,1,26,3,31,1,32,2,39,1,40,6,42,2,43,1,44,3,48,2,50,26,54,1,55,1,65,1,74,2,76,2,80,1,82,6,89,1,91,1,96,5,100,1,113,1,134,2,141,1,179,1,180,4,183,3,184,2,190,5,205,1,208,1,209,4,214,1,220,1,227,10,228,5,249,1,254,1,256,3,261,3,263,1,267,1,276,3,306,2]
,"referred":[4,2,10,1,144,1]
,"(or":[4,2,6,1,9,1,19,2,30,2,36,1,74,1,78,1,177,1,180,1,193,1]
,"simply":[4,2,10,1,25,1,32,1,38,1,54,1,78,1,100,1,127,1,141,1,170,1,177,1,179,1,180,1,193,1,259,2,275,1]
,"miss":[4,3,33,1,71,1,181,2,190,2,252,2,267,1]
,"exist":[4,1,19,4,123,2,138,2,180,1,183,1,256,1,297,3,309,1]
,"system-of-record":[4,2,31,3,32,1,34,1,35,3]
,"authoritative":[4,1]
,"truth":[4,1]
,"acts":[4,1,70,1]
,"local":[4,1,8,3,10,2,47,1,57,4,59,1,64,11,65,3,68,1,73,1,77,2,90,2,123,1,128,1,130,2,131,2,132,9,141,1,143,4,144,1,145,1,157,1,179,1,182,1,190,1,207,1,267,3]
,"copy":[4,1,10,1,30,1,36,9,57,1,60,1,122,1,124,7,126,1,137,1,141,1,143,3,179,1,190,1]
,"stored":[4,1,10,1,21,1,65,1,139,1,146,1,182,2,190,1,227,4,249,1,255,1,297,2]
,"(sor)":[4,1,31,1,32,1]
,"sor":[4,2,31,3,32,4,135,1,179,1,181,2]
,"often":[4,1,7,3,8,3,11,1,31,1,39,1,70,2,91,1,112,1,130,1,141,1,178,1,179,1,283,1]
,"traditional":[4,1]
,"although":[4,1,44,1,62,1,70,1,248,1,249,1,259,1]
,"specialized":[4,1]
,"file":[4,1,13,1,24,3,26,1,39,1,62,2,70,1,73,1,80,1,94,1,101,1,104,1,121,2,122,10,127,1,128,3,134,3,148,1,174,6,177,2,178,1,180,1,182,1,183,1,193,2,195,2,206,1,216,1,226,2,235,1,239,3,241,1,249,1,256,1,260,4,262,7,263,2,265,1,276,2,278,2,280,2,283,1,297,1]
,"system":[4,1,6,3,8,16,10,1,54,1,70,2,128,5,134,2,141,1,148,2,149,1,150,3,153,1,170,1,207,1,226,1,249,1,259,1,263,1,265,1,294,1,301,1,303,1]
,"reliable":[4,1,200,1,213,1]
,"long-term":[4,1]
,"storage":[4,1,10,4,11,2,20,1,71,1,111,1,124,1,125,1,126,5,127,2,128,1,129,1,130,1,131,1,132,2,134,1,135,2,139,1,140,1,143,2,144,3,145,2,146,1,189,2,204,1,263,6,265,1,294,1]
,"purposes":[4,1,68,1,134,1,226,1,249,1]
,"using":[4,1,7,1,8,1,10,1,11,2,14,2,19,2,20,2,23,2,25,3,30,1,32,3,34,2,35,2,36,1,38,3,39,1,40,3,41,2,42,2,43,3,45,2,46,1,47,2,54,1,57,1,59,1,60,2,62,2,64,1,67,1,68,1,70,4,71,1,74,1,76,2,78,1,82,4,89,1,94,2,96,1,99,1,104,3,106,1,108,1,112,3,113,1,122,1,124,2,130,3,131,2,132,1,134,1,135,4,139,2,141,3,143,1,148,1,154,1,155,1,156,2,170,1,171,1,174,2,176,3,178,1,179,2,181,4,182,1,183,5,184,3,189,1,190,1,199,1,200,3,203,1,204,2,206,1,207,2,210,1,211,1,212,1,213,2,217,1,218,1,219,1,222,1,223,1,224,2,225,1,226,2,227,1,228,2,229,4,230,1,232,1,234,1,235,1,239,1,240,1,244,2,247,3,248,3,249,1,250,1,253,1,254,3,256,4,257,1,258,1,260,1,261,3,262,7,263,1,264,1,267,4,268,1,270,1,271,1,273,1,275,3,276,2,277,1,280,1,282,1,283,1,284,1,285,1,286,1,289,1,290,1,294,1,297,2,298,2,300,7,303,3,304,1,306,1,309,5]
,"assumed":[4,1]
,"<<should":[4,1]
,"say":[4,1,8,3,26,1,27,1,55,1,60,1,68,1,70,1,71,1,72,1,148,1,228,1,238,1,244,1]
,"ehcache\u002Fbmg\u002Fbmx":[4,1]
,"itself":[4,1,6,1,8,1,61,1,65,1,76,1,82,1,139,1,160,1,205,1,214,1]
,"sor.>>":[4,1]
,"works":[5,1,49,1,112,1,153,1,161,1,178,1,183,1,202,1,222,1,226,2,231,3,232,1,246,2,256,1,265,2,283,1,294,1,295,1,309,1]
,"locality":[6,2,112,1]
,"reference":[6,2,8,1,20,1,26,2,27,2,44,2,64,1,78,1,82,1,102,1,104,1,106,1,108,2,112,1,124,2,134,2,139,1,185,1,275,2,276,1,294,1,303,1,306,1]
,"concerns":[6,1]
,"java":[6,1,8,2,10,6,13,1,14,2,25,1,36,1,41,3,57,1,73,2,104,1,112,1,122,1,126,2,127,2,128,3,130,1,150,4,154,1,174,1,204,1,211,1,224,1,228,2,232,1,235,1,247,1,248,1,252,2,256,1,260,1,262,1,263,2,288,1,301,1,309,4]
,"objects":[6,2,10,1,18,1,21,2,33,1,36,1,40,2,42,2,58,2,81,1,82,2,128,1,134,1,153,1,226,1,227,2,229,1,242,4,244,1,246,2,262,1,265,1,297,1]
,"throughout":[6,1]
,"computing":[6,1]
,"cpu":[6,1,7,4,127,1,128,1,297,1]
,"internet":[6,1]
,"domain":[6,1,68,1,112,1,240,2,242,5,243,3,244,2,300,2]
,"name":[6,1,19,3,40,11,41,4,82,4,86,1,87,3,90,1,96,1,102,1,104,7,108,1,113,1,117,1,122,1,134,1,144,3,174,2,183,4,190,5,206,2,207,1,226,6,227,1,229,6,241,1,242,1,243,2,244,7,256,4,262,2,276,2,309,5]
,"(dns)":[6,1]
,"computer":[6,1]
,"systems":[6,2,8,2,20,1,54,1,68,1,70,1,100,1,141,2,166,1,170,3,179,1]
,"exhibit":[6,1,9,1,104,1]
,"near":[6,1]
,"recently":[6,1,9,1,111,1,112,4,127,1,249,1,297,1]
,"likely":[6,1,7,1,104,1,112,1,181,1]
,"again":[6,1,183,1,190,1,230,2,252,1,256,1]
,"long":[6,4,26,2,40,1,42,1,50,2,146,1,153,1,232,1,261,1,300,1,310,1]
,"tail":[6,4]
,"chris":[6,1]
,"anderson":[6,1]
,"wired":[6,1]
,"magazine":[6,1]
,"coined":[6,1]
,"term":[6,1,55,1,61,1,112,2,124,1,144,1,237,1]
,"refer":[6,1,26,1,70,1,71,1,73,1,122,1,126,1,127,1,146,1,165,1,226,1,229,1,263,2]
,"cases":[6,1,124,1,176,2,184,2,197,1,265,1,267,1]
,"e-commerce":[6,1]
,"small":[6,2,135,1,249,1]
,"number":[6,2,7,1,8,3,9,1,10,1,11,1,26,3,42,2,70,1,74,7,77,1,112,3,123,2,127,3,130,5,135,2,138,3,139,1,181,2,190,1,207,1,262,1,289,1,297,6,298,1,306,1]
,"items":[6,2,43,1,57,1,70,2,112,1,249,1,262,1,297,1]
,"bulk":[6,1,91,2]
,"sales":[6,1]
,"blogs":[6,1,251,1]
,"hits)":[6,1]
,"less":[6,1,8,1,32,2,41,3,74,1,112,2,127,1,265,1,297,1]
,"popular":[6,1,54,1,181,1]
,"example":[6,1,7,1,8,2,10,1,20,4,25,2,32,1,36,3,38,1,39,2,40,7,41,3,42,6,43,3,48,1,59,2,62,1,63,1,64,1,70,4,73,1,74,2,91,2,92,1,95,1,97,1,102,1,103,1,104,2,106,1,107,1,108,1,112,1,113,1,122,1,123,1,128,3,130,2,131,1,132,7,134,2,139,2,140,1,141,1,145,2,158,1,161,2,170,1,174,1,177,1,179,1,182,2,183,1,184,1,190,2,192,1,195,1,201,1,206,2,207,1,208,1,210,3,217,1,218,1,222,1,226,5,229,3,230,1,237,1,239,1,240,2,242,1,243,1,244,1,252,1,254,1,255,2,256,1,261,2,262,8,267,1,275,1,276,2,278,1,289,1,295,1,300,2]
,"power":[6,1,47,1]
,"-law":[6,1]
,"probability":[6,1]
,"distribution":[6,2,8,2,112,1,117,1,122,2,135,3,173,1,207,1,249,2]
,"pareto":[6,1,8,1,112,1]
,"80:20":[6,1]
,"rule":[6,1,19,1]
,"found":[6,1,24,1,40,1,42,1,63,1,91,2,104,1,117,1,118,1,122,2,128,1,146,1,183,1,252,1,256,1,280,1]
,"reduce":[6,1,7,2,74,2,127,1,182,1,208,1,274,2,306,1]
,"cost":[6,1,7,1,135,2,166,1,265,1]
,"obtaining":[6,1,26,2,42,1,67,1]
,"improve":[6,1,7,1,177,1,182,1,192,1,263,1,274,1]
,"benefit":[7,1,8,2,70,1,267,1]
,"answer":[7,1,190,1,261,4,262,2]
,"especially":[7,1,181,1]
,"i\u002Fo":[7,4,8,1]
,"bound":[7,7,8,1,82,2,108,1]
,"depends":[7,2,13,1,111,1,139,1,178,1,190,1,284,1,310,1]
,"rate":[7,1,70,2,135,5,182,1]
,"obtained":[7,1,20,1,49,2,64,1]
,"taken":[7,1,10,1,87,1,127,1,131,1,166,1,190,1]
,"principally":[7,1]
,"speed":[7,2,8,3,10,1,128,1,143,1,265,2,267,1,274,1]
,"main":[7,1,35,1,216,1,226,1,247,1]
,"memory":[7,2,10,8,11,1,18,1,19,1,61,1,111,1,112,3,124,3,126,3,127,16,128,2,130,5,131,1,134,3,137,1,139,3,143,1,144,1,145,1,182,1,235,3,263,5,272,3,297,5,298,2,303,2,306,5,307,1]
,"load":[7,1,8,3,9,1,20,1,74,2,80,3,81,1,82,5,87,1,106,1,108,1,117,3,141,4,144,1,176,1,179,4,180,1,181,2,190,1,200,1,224,1,229,3,249,1,261,1,274,2]
,"web":[7,3,8,8,9,1,14,4,54,1,62,2,72,2,104,1,168,1,169,3,176,4,177,13,178,2,187,1,188,1,189,2,190,2,191,1,192,5,193,4,197,2,252,1,267,2,272,2,285,3,288,3]
,"speeding":[7,3]
,"cpu-bound":[7,1]
,"applications":[7,5,8,2,9,1,36,1,62,2,70,2,71,1,143,1,153,2,160,1,235,2,254,1,262,1,298,1,300,1]
,"sped":[7,1,8,6]
,"improving":[7,1]
,"algorithm":[7,1,111,3,112,9,113,2,114,2,128,1,135,3]
,"parallelizing":[7,1]
,"computations":[7,2]
,"cpus":[7,1]
,"(smp)":[7,1]
,"machines":[7,1,154,1,272,1]
,"(clusters)":[7,1]
,"upgrading":[7,1,146,3,235,1,248,2]
,"temporarily":[7,1]
,"reuse":[7,1]
,"including":[7,1,11,1,19,1,43,2,57,1,91,2,106,1,108,1,134,1,137,1,190,1,224,1,231,1,258,1,261,1,262,1,294,1]
,"limited":[7,2,10,2,25,1,42,1,70,1,111,1,126,1,127,1,128,1,134,1,139,1,143,1,158,2,265,1,298,2]
,"large":[7,1,8,2,10,2,42,1,70,1,128,1,153,2,154,1,174,1,224,1,241,1,263,1,297,1,304,1]
,"pages":[7,2,8,1,54,2,104,1,176,1,177,5,189,2,190,1,191,1,192,4,193,3,262,1]
,"high":[7,1,8,1,128,1,182,1,190,1,246,1,248,1,297,2,307,2]
,"rendering":[7,1]
,"authentication":[7,2,112,1]
,"status":[7,1,50,1,76,1,82,3,87,2,108,3,137,1,170,2,306,1]
,"requires":[7,1,19,1,104,1,118,1,121,1,124,1,127,1,128,1,160,1,206,1,218,1,226,1,262,1,294,1]
,"cryptographic":[7,1]
,"transforms":[7,1]
,"i\u002Fo-bound":[7,1]
,"disk":[7,2,10,5,18,1,19,1,26,1,70,1,111,5,114,2,126,1,128,34,130,5,131,8,132,6,134,1,138,2,139,1,143,9,144,15,145,7,146,11,170,1,171,2,204,1,241,1,294,1,297,2,306,2,309,1]
,"network":[7,2,70,2,189,1,190,1,204,1,207,2,211,1,222,1,301,4,307,1,310,1]
,"operations":[7,2,13,2,20,1,26,1,36,1,44,1,57,2,64,2,67,4,74,8,76,2,78,1,82,2,94,1,96,1,106,1,108,3,124,1,144,1,151,1,160,1,170,2,173,1,174,2,197,1,200,2,205,1,213,1,214,1,224,1,230,1,247,1,265,1,269,1,302,1,304,1]
,"case":[7,2,39,1,40,1,41,1,43,1,49,1,54,1,57,3,74,1,75,1,80,1,81,1,128,2,130,1,131,4,144,1,184,1,192,1,205,1,214,1,240,1,249,1,262,1,297,1,307,1]
,"databases":[7,2,62,1,74,1,141,1,179,1,241,1]
,"moore\u0027s":[7,1]
,"law":[7,1,8,6]
,"hard":[7,2,8,1]
,"disks":[7,2]
,"10,000":[7,1]
,"rpm":[7,1]
,"fast":[7,2,143,7,144,2,146,2,190,1,306,1]
,"years":[7,1,254,1]
,"ago":[7,1]
,"blocks":[7,1,9,1,190,1]
,"factors":[7,1,8,1]
,"tear":[7,1]
,"down":[7,1,27,6,70,1,160,1,167,1,168,2,169,3,170,4,171,1,182,1,213,1,230,1,261,2,303,2,306,1]
,"connections":[7,2,73,1,190,1]
,"latency":[7,1,11,1,235,1]
,"minimum":[7,1,135,1,201,2,295,2]
,"round":[7,1,8,1]
,"trip":[7,1,8,1]
,"throughput":[7,1,11,1]
,"limits":[7,1,8,1,42,1,133,1,134,1]
,"overhead":[7,1,9,3,57,1,65,3,163,2,248,1,306,1]
,"marshalling":[7,1]
,"unmarshalling":[7,1,272,2]
,"help":[7,1,141,1,173,1,176,1,177,1,182,1,193,1,297,1]
,"significantly":[7,1,57,1]
,"access":[7,1,11,1,18,1,19,1,30,1,36,1,42,1,59,2,65,1,66,1,75,1,87,1,91,2,100,2,104,2,113,1,123,1,135,4,144,2,158,1,181,1,182,1,184,1,190,1,235,1,240,1,247,1,261,1,265,1,274,4,275,3]
,"object":[7,1,8,3,10,1,18,1,21,1,26,1,32,1,36,1,40,2,41,1,42,3,60,1,75,1,82,4,91,1,96,1,117,2,128,2,134,5,180,1,183,4,189,1,227,1,228,5,240,2,242,1,243,3,246,2,249,2,252,3,256,4,260,1,261,2,262,2,265,1,300,2]
,"generated":[7,1,122,1,178,1,284,1]
,"increased":[7,3]
,"corollary":[7,1]
,"suppose":[7,1,183,1,206,2,217,1,218,1,256,1]
,"perform":[7,1,14,2,20,1,36,1,57,1,65,3,74,2,76,2,106,1,108,1,135,1,182,1,227,1,262,1]
,"100":[7,2,8,2,42,1,70,1,74,2,131,1,134,1,201,2,208,2,220,2,263,1,295,2]
,"expensive":[7,1,54,1,297,1]
,"queries":[7,1,9,1,38,4,39,2,41,2,42,1,43,4,44,1,235,1,240,1,244,2,275,1,280,1]
,"per":[7,1,39,1,74,5,86,1,90,1,94,1,102,1,104,1,107,1,124,1,128,2,135,1,140,1,177,1,189,1,190,1,192,1,206,1,207,1,208,1,216,2,225,1,226,2,229,1,297,1,298,5,306,1,309,1]
,"second":[7,1,42,1,72,1,74,3,113,1,174,2,177,2,178,2,189,1,190,2,192,1,193,1,206,1,306,1]
,"beyond":[7,1,10,1,127,1,174,1,241,1,297,1]
,"threshold":[7,1]
,"backs":[7,1,10,1,126,1]
,"addition":[7,1,21,1,40,1,55,1,76,1,82,1,206,1,239,1,240,1,244,1]
,"occur":[7,1,35,1,44,1,61,1,70,2,74,1,76,2,78,1,96,1,166,1,190,1,211,1]
,"slowly":[7,1]
,"dies":[7,1,182,1]
,"workload":[7,1]
,"cause":[7,1,41,1,42,1,66,1,67,1,70,1,76,2,87,5,104,1,117,3,128,1,138,1,139,1,146,1,173,1,190,2,197,1,207,1,209,1,246,1,249,2,262,1,272,1]
,"hits":[7,1,8,3,112,2,127,2,181,1]
,"impact":[7,1,138,1]
,"scale":[7,1,54,1,153,1,265,1]
,"times":[7,1,8,9,10,1,54,1,65,4,70,1,74,1,91,1,113,1,128,1,143,1,144,2,182,1,252,1,274,1,303,1]
,"higher":[7,1,57,1,137,2,145,1,146,2,153,1,178,2,235,1,238,3,244,1,248,1,259,1,265,1,283,2,297,1,298,1,300,1]
,"business":[8,1,47,2,143,1]
,"response":[8,1,190,5,197,1]
,"getting":[8,1,10,1,14,1,26,1,43,1,50,2,178,1,190,1,197,1,211,1,246,2,249,1,256,1,263,1,307,1,309,1]
,"piece":[8,1,181,1,224,1]
,"proportion":[8,8]
,"reused":[8,1]
,"significant":[8,1,65,1,141,1,177,1,179,1,190,2,192,1]
,"applying":[8,3,254,1]
,"amdahl\u0027s":[8,3]
,"amdahl\u2019s":[8,3]
,"finds":[8,1,42,2]
,"total":[8,1,132,2,135,1,138,1,153,1,154,1,174,1,263,1]
,"speedup":[8,11,177,2,192,1,193,1]
,"part":[8,1,43,2,67,1,70,1,178,1,189,1,190,1,224,1,272,1]
,"\u002F((1":[8,8]
,"-proportion":[8,2]
,"up)":[8,3]
,"\u002Fspeed":[8,1]
,"following":[8,2,10,2,18,1,23,4,24,4,25,2,26,10,27,2,30,1,31,1,32,1,33,1,39,2,40,2,41,1,42,2,43,1,44,1,48,1,50,2,57,1,59,3,62,3,63,1,64,1,65,2,68,1,70,1,71,1,74,1,80,1,83,1,91,3,95,1,97,1,100,1,102,1,104,1,107,1,113,1,118,1,123,1,124,1,127,1,128,1,130,2,132,5,134,4,138,1,139,5,140,2,141,1,145,1,146,1,148,2,153,1,156,1,157,1,158,1,161,1,165,1,169,1,171,1,174,1,177,3,178,2,179,1,183,1,190,2,192,1,193,3,195,1,206,3,207,1,208,2,220,1,226,3,228,1,229,2,237,3,238,1,239,3,240,1,242,1,252,1,254,1,256,1,261,1,262,10,263,2,266,2,272,2,275,1,276,1,278,1,283,1,284,1,288,1,289,1,303,1,306,1,309,1]
,"examples":[8,2,19,1,26,1,27,1,40,1,70,2,73,1,113,1,121,1,132,3,145,1,176,1,210,1,226,1,229,1]
,"show":[8,1,75,1,178,1,262,1,283,1]
,"apply":[8,1,42,1,43,1,47,1,64,2,65,1,130,2,134,1,242,1,243,1,244,1]
,"common":[8,1,30,1,34,1,55,1,70,1,96,1,134,1,135,1,182,1,190,1,206,1,211,1,222,1,232,1,235,1,244,1,262,2,300,1]
,"situations":[8,1,40,1,70,1,117,1,190,2]
,"interests":[8,1]
,"simplicity":[8,1]
,"assume":[8,2,40,1,177,1,183,3,193,1,256,3]
,"single":[8,3,40,1,124,1,131,1,176,1,181,1,262,1,272,2,294,1]
,"thing":[8,1,54,2,112,1,117,1,153,1,177,1,193,1,235,1]
,"cached":[8,4,9,1,57,3,58,1,62,1,134,1,143,2,146,1,177,2,181,2,182,1,183,1,190,1,192,1,193,1,249,2,256,1,275,2]
,"gets":[8,1,26,5,65,1,70,1,132,5,209,1,297,1,303,1,306,1,307,1]
,"lives":[8,1]
,"forever":[8,2,78,1,140,1]
,"persistent":[8,1,128,1,143,3,170,1,171,1]
,"relational":[8,1]
,"session.load":[8,1,246,2]
,"1000":[8,3,132,1,177,1,193,1,221,3,222,3,226,3,229,4,266,1]
,"faster":[8,1,10,1,43,1,128,1,144,1,182,2]
,"<<ffc-do":[8,2]
,"need":[8,2,10,1,39,1,40,3,43,1,51,1,54,1,55,1,57,3,59,1,65,1,68,1,70,2,71,1,76,1,82,2,87,1,89,1,91,1,96,1,100,1,103,1,108,2,128,1,131,1,133,1,138,1,143,2,163,1,165,1,177,2,190,1,193,2,200,4,201,1,204,3,211,1,213,2,215,1,216,1,225,1,226,1,227,1,237,1,239,1,243,1,249,1,259,1,275,1,276,2,288,1,295,1,297,1,301,1,303,2,306,2,309,1]
,"?>>":[8,1,27,1,40,1,43,1,59,1,60,1,61,1,64,1,106,1,138,1,235,1]
,"typical":[8,1,39,1,189,1,221,1,244,2]
,"query":[8,4,38,2,40,2,41,9,42,27,43,6,44,2,180,1,181,1,190,2,235,4,239,3,244,14,300,1]
,"return":[8,1,19,4,21,1,31,3,38,1,40,2,42,3,50,4,54,1,57,1,64,1,76,1,100,1,104,1,117,1,124,1,144,1,177,1,181,1,183,2,184,1,190,1,192,1,226,1,228,1,244,1,254,1,256,2,272,1,276,2,310,1]
,"list":[8,1,23,3,25,1,41,2,42,3,61,1,63,1,73,1,83,2,174,4,206,2,209,2,244,1,272,1,303,1,304,1]
,"ids":[8,2,190,1]
,"attempt":[8,1,21,1,65,1,74,2,76,1,87,4,96,1,104,1,122,1,297,1]
,"session.iterate":[8,1,246,2]
,"back":[8,1,57,1,61,2,62,2,64,1,67,1,75,1,91,1,97,1,106,1,108,1,209,2,230,1,303,1,306,1]
,"imagine":[8,1,54,3,181,1]
,"scenario":[8,1,34,1,62,1,182,1,190,3]
,"execute":[8,1,38,1,39,1,62,1,76,1,78,1,141,2,179,2,181,2,259,1,262,1]
,"against":[8,1,38,2,40,1,68,1,70,2,102,1,113,1,170,1,181,1,224,1,244,1,267,1,271,2]
,"returns":[8,1,19,1,36,1,40,3,42,1,44,1,77,1,80,1,81,1,87,2,91,4,94,1,99,1,124,1,127,1,134,1,190,1,261,2,301,3,303,1]
,"hundred":[8,1]
,"loads":[8,1,71,1,182,1,209,1,229,1,230,1]
,"takes":[8,3,40,1,42,2,54,1,65,1,106,1,108,1,112,3,113,1,123,2,132,1,134,1,138,4,139,2,153,1,174,1,177,1,190,1,192,1,248,1,310,1]
,"loading":[8,1,9,2,24,1,40,1,71,1,80,1,82,2,91,2,96,2,108,2,115,1,116,3,117,1,118,1,135,1,190,1,230,1,232,1,300,1]
,"rest":[8,1]
,"(80":[8,1]
,"operation":[8,1,26,1,36,2,64,1,65,2,70,3,74,2,75,1,76,8,78,1,87,2,91,1,96,2,124,1,131,1,134,1,143,1,144,1,145,1,174,1,205,1,209,1,214,1]
,"thus":[8,4,91,1,106,1,108,1,141,1,179,1,182,2,249,1,306,1]
,"(75":[8,1]
,"*80":[8,1]
,"expected":[8,3,113,1,132,1,153,1,298,1,306,1,309,1]
,"-.6)":[8,1]
,"\u002F1000)":[8,6]
,"\u002F(.4":[8,1]
,".0006)":[8,1]
,"=2.5":[8,1]
,"observed":[8,1]
,"retrieve":[8,1,42,1,297,1]
,"simplepagecachingfilter":[8,1,14,1,177,3,190,5,193,3,309,2]
,"few":[8,1,54,2,153,2,163,1,265,1]
,"milliseconds":[8,1,190,1,229,1]
,"stipulate":[8,1]
,"talking":[8,1]
,"cache.>>":[8,1]
,"-1)":[8,4]
,"\u002F(0":[8,1]
,".0001)":[8,1]
,"=1000":[8,1]
,"fragment":[8,2,176,1,177,3,192,1,195,1,262,1]
,"entire":[8,1,14,1,71,3,131,1,134,1,139,2,190,1,297,1]
,"big":[8,1]
,"win":[8,1]
,"sometimes":[8,1,43,1,55,1,104,1,170,1,181,1,240,2,249,1]
,"liveness":[8,1]
,"requirements":[8,1,58,1,143,1]
,"vary":[8,1,237,1]
,"different":[8,1,11,1,23,1,41,1,61,1,63,1,70,1,104,2,130,1,143,2,190,2,240,1,248,1,249,2,251,1,259,1,294,1,298,1]
,"parts":[8,1,40,1,70,1]
,"simplepagefragmentcachingfilter":[8,1,14,1,190,3,195,5]
,"let\u0027s":[8,1,244,1,256,1]
,"fold":[8,1]
,"improvement":[8,1]
,"taking":[8,1]
,"render":[8,1]
,"-.4)":[8,1]
,"\u002F(.6":[8,1]
,".0004)":[8,1]
,"=1.6":[8,1]
,"efficiency":[8,19,139,1]
,"entries":[8,4,11,1,74,1,76,4,86,1,100,1,130,3,133,1,134,1,137,2,138,2,139,11,140,2,144,1,170,1,180,1,227,1,272,2,300,1,306,1]
,"live":[8,4,57,1,83,1,140,1,141,1,179,1,180,2,211,1,261,2]
,"close":[8,1,235,1,276,1]
,"static":[8,1,19,1,54,1,117,3,156,1,160,1,267,1]
,"fragments":[8,1,176,1,177,1,178,1,189,1,190,2,191,1,192,1,284,1]
,"footers":[8,1]
,"currencies":[8,1]
,"world":[8,1,13,1]
,"affect":[8,2,130,1,137,1]
,"liveliness":[8,1]
,"needs":[8,1,9,1,82,2,87,1,96,1,108,1,143,2,166,1,182,2,197,1,208,1,220,1,226,1,230,1,262,1]
,"fit":[8,1,10,1,71,2,127,1]
,"resource":[8,1,11,2,20,1,24,1,67,1,68,1,70,8,74,1,76,5,122,1,132,2,137,1,139,2,140,1,235,1,239,2,249,2,297,1,309,1]
,"machine":[8,1,170,4,207,1,298,3,301,1]
,"32-bit":[8,1,297,1]
,"limit":[8,1,42,2,43,1,112,3,123,2,127,2,128,1,135,1,138,2,263,1,297,1]
,"address":[8,1,206,2,218,1,262,4,289,1,301,4]
,"space":[8,1,128,1,132,2,135,2,138,1]
,"64-bit":[8,1]
,"constraint":[8,1]
,"garbage":[8,1,10,4,127,1,152,1,153,6,154,1,219,1,235,1,263,1]
,"issues":[8,1,85,1,86,1,87,1,89,1,90,1,91,1,211,1,222,1,232,1,271,1,272,1,289,1,300,2]
,"impractical":[8,1]
,"heap":[8,1,10,4,21,1,126,1,127,5,130,1,131,7,132,13,138,1,139,2,153,2,154,1,265,1,307,1]
,"various":[8,1,23,1,122,1,143,1,247,1]
,"eviction":[8,1,11,1,71,4,91,1,110,1,111,5,112,5,113,6,114,1,123,3,127,3,128,1,135,10,137,1,138,8,139,1,140,2,141,2,150,1,179,2,261,1,297,1,306,1]
,"algorithms":[8,1,110,1,111,2,112,2,139,1,141,2,179,2]
,"evict":[8,1,111,1,112,1,113,1,114,1,249,1]
,"excess":[8,1]
,"shape":[8,1]
,"usage":[8,1,14,1,29,1,30,1,112,1,113,1,128,1,130,1,134,1,135,1,139,1,143,1,144,1,145,1,146,3,163,1,275,1]
,"300":[8,2,59,1,68,1,177,1,178,3,180,1,193,1,242,1,266,1,276,1,283,3]
,"3000":[8,1]
,"(80\u002F20":[8,1]
,"rule)":[8,1]
,"applies":[8,1,42,1,64,1,171,1,227,1]
,"ones":[8,1,82,1,190,1,297,1]
,"drives":[8,1]
,"average":[8,2,297,2]
,"request":[8,2,54,2,91,1,176,1,181,5,190,7,195,1,197,2,229,3]
,"lifespan":[8,7]
,"read\u002Fwrite":[8,1,249,1]
,"ratio":[8,5,135,1]
,"read":[8,1,27,1,31,1,32,1,33,1,47,1,49,6,50,6,60,1,65,1,70,2,71,1,100,1,141,1,143,1,176,1,177,1,179,1,181,6,182,1,192,1,219,1,235,2,240,3,244,1,249,1,275,1,310,1]
,"compared":[8,1,65,1,135,1,146,1]
,"written":[8,2,31,1,60,1,70,5,76,4,144,1,171,1,209,1]
,"empty":[8,1,139,1,176,2,180,2,181,1]
,"rooms":[8,1]
,"hotel":[8,1]
,"change":[8,1,35,1,44,2,47,1,57,1,63,1,64,1,87,1,113,1,124,1,135,1,166,2,177,2,182,2,192,1,193,1,195,1,202,1,211,1,247,1,295,1,301,1,303,1]
,"frequently":[8,1,112,3,114,1,127,2,177,1,192,1,267,1,274,1]
,"however":[8,2,9,2,10,1,19,1,36,1,42,1,43,1,55,1,57,2,60,1,61,1,67,1,68,1,70,1,80,1,99,1,113,1,130,1,131,1,132,1,138,1,139,1,140,1,146,2,153,1,163,1,171,2,178,1,180,1,182,1,190,2,202,1,209,1,241,1,246,1,283,1,295,1,298,1,303,3]
,"details":[8,1,13,1,14,1,34,1,35,1,43,1,82,1,91,1,108,1,126,1,140,1,177,2,183,1,228,1,247,1,256,1]
,"room":[8,1]
,"beds":[8,1]
,"immutable":[8,1,9,1,41,2]
,"therefore":[8,1,34,1,47,1,57,1,59,1,61,1,96,1,124,1,134,1,160,1,179,1,181,1,182,2,204,1,216,2,226,2,298,1]
,"maximum":[8,1,10,2,71,1,74,3,111,1,123,2,127,3,130,3,138,3,141,1,179,1,180,2,297,6]
,"write":[8,1,31,1,32,3,34,1,35,3,36,1,47,1,49,4,50,5,61,1,66,1,67,3,70,13,71,1,72,1,74,3,76,3,78,1,144,1,170,1,176,1,182,3,209,1,262,2]
,"thousands":[8,1,54,1,182,1]
,"reads":[8,1,57,2,62,1,65,1,71,1,100,1,141,1,143,1,179,1]
,"keeps":[8,1,297,2,303,1]
,"statistics":[8,1,75,1,113,1,153,1,163,5,247,4,303,5]
,"measured":[8,1,134,5]
,"directly":[8,1,31,2,32,1,38,1,39,1,41,1,55,1,102,1,171,1,200,1,204,1,216,1,222,1,224,1,226,1,258,1,261,2,262,2,269,1,274,1,300,5]
,"rather":[8,1,35,1,36,1,54,1,62,1,74,1,82,1,121,1,124,1,177,1,190,1,192,1,205,1,214,1]
,"estimated":[8,1]
,"cluster":[8,6,44,1,57,1,58,1,61,1,76,1,173,5,174,3,181,2,182,1,200,1,204,1,206,5,207,1,215,1,216,1,217,1,224,1,226,1,228,5,230,3,258,1,272,3,289,2,306,1]
,"round-robin":[8,1]
,"balancer":[8,1]
,"next":[8,1,33,1,51,1,80,1,81,1,91,1,143,1,144,1,171,1,238,1,249,1]
,"entry":[8,2,21,1,26,1,54,1,55,1,70,1,76,3,80,1,86,2,90,1,91,1,100,2,137,5,140,3,141,1,160,2,179,1,190,1,240,2,242,1,249,1,255,1,261,1,272,1]
,"variable":[8,1,261,1,275,2,288,1]
,"requests":[8,4,181,2,182,1,190,1,200,1,224,1,229,2]
,"caused":[8,1,134,1,197,1,289,1,301,1]
,"(ttl)":[8,1,297,1]
,"setting":[8,1,58,1,68,1,74,1,112,1,123,1,127,1,128,1,130,1,131,5,132,1,134,3,138,2,139,2,141,1,150,1,166,1,179,1,180,2,190,2,206,1,207,2,211,1,239,3,244,1,261,1,262,1,267,1,297,3,303,1,310,2]
,"table":[8,1,41,1,130,1,146,1,262,1]
,"shows":[8,1,28,1,39,2,40,1,48,1,62,2,64,1,97,1,112,3,123,1,134,2,140,1,161,2,190,1,245,1,269,1]
,"misses":[8,1,181,1,190,1]
,"ratios":[8,1]
,"whole":[8,1,113,1]
,"follows":[8,1,19,1,40,1,64,1,65,1,72,1,90,1,103,1,112,1,117,1,124,1,174,1,178,1,193,1,206,2,225,1,227,1,230,1,235,1,248,1,261,1,262,1,283,1,298,1,303,1]
,"servers":[8,5,160,1,181,3,206,4,217,1,218,2,232,1,289,1,301,1]
,"1\u002F2":[8,1]
,"0\u002F2":[8,3]
,"3\u002F4":[8,1]
,"2\u002F4":[8,1]
,"1\u002F4":[8,1]
,"0\u002F4":[8,1]
,"9\u002F10":[8,1]
,"8\u002F10":[8,1]
,"7\u002F10":[8,1]
,"6\u002F10":[8,1]
,"19\u002F20":[8,1]
,"18\u002F20":[8,1]
,"17\u002F20":[8,1]
,"16\u002F10":[8,1]
,"49\u002F50":[8,1]
,"48\u002F50":[8,1]
,"47\u002F20":[8,1]
,"46\u002F50":[8,1]
,"standalone":[8,3,9,2,51,1,64,1,126,1,146,1,156,1,259,1,306,1]
,"generally":[8,1,70,2,104,2,166,1,249,1]
,"(lifespan":[8,1]
,"-number":[8,1]
,"caches)":[8,1]
,"\u002Flifespan":[8,1]
,"relative":[8,1,65,2,262,2]
,"affected":[8,2,10,1,128,1,249,2]
,"short":[8,1,40,1,127,1,141,1,179,1,182,1,251,1]
,"dramatically":[8,1,74,1]
,"problem":[8,1,32,1,153,1,174,2,176,1,177,1,179,1,180,1,181,5,182,2,183,1,184,1,190,1,192,1,206,1,209,1,231,1,249,1,272,3,300,1,303,1,304,1,307,1]
,"solved":[8,1,153,1,310,1]
,"distributed":[8,2,9,7,10,1,40,1,51,1,54,1,58,1,64,1,70,1,138,1,146,1,171,2,267,1,294,2,300,1,306,1]
,"capability":[8,1,143,1]
,"put":[8,1,21,1,26,1,36,2,40,2,54,2,57,1,75,3,76,1,89,3,91,7,96,1,100,1,104,1,112,3,124,1,127,3,134,1,174,1,182,1,183,1,184,2,190,2,209,3,227,2,228,6,251,1,252,1,256,1,261,1,267,2,275,2,276,2,297,1,303,1,310,1]
,"propagated":[8,1]
,"*effective":[8,2]
,"efficiency)":[8,3]
,"(proportion":[8,1]
,"efficiency)\u002Fspeed":[8,1]
,"effective":[8,4,11,1,70,1,74,1,130,1,138,1,182,1,297,1]
,"=(cache":[8,1]
,"*(cluster":[8,1]
,"formula":[8,1]
,"earlier":[8,1,146,3,178,1,248,2,255,1,283,1]
,"two":[8,1,19,2,23,1,36,1,41,1,53,1,64,2,65,1,91,1,113,1,128,1,131,1,139,1,144,1,174,2,197,1,206,3,216,1,217,1,218,1,226,1,247,1,248,1,249,2,251,1,254,1,262,1,267,1,275,1]
,"=.35":[8,2]
,"(10":[8,3,40,1]
,"\u002F10":[8,3]
,"=.9":[8,4]
,"*.9":[8,3]
,"=.315":[8,1]
,"*.315)":[8,1]
,"*.315":[8,1]
,"\u002F(.685":[8,1]
,".000315)":[8,1]
,"=1.45":[8,1]
,"(two":[8,2]
,"servers)":[8,2,9,1]
,"=.70":[8,2]
,"=.63":[8,1]
,"*.63)":[8,1]
,"*.63":[8,1]
,"\u002F(.37":[8,1]
,".00063)":[8,1]
,"=2.69":[8,1]
,"=.90":[8,1]
,"=.81":[8,1]
,"*.81)":[8,1]
,"*.81":[8,1]
,"\u002F(.19":[8,1]
,".00081)":[8,1]
,"=5.24":[8,1]
,"dramatic":[8,1]
,"sensitive":[8,1,40,1,288,1]
,"topology":[9,6,51,1,298,1,300,1,304,1,310,1]
,"types":[9,1,19,1,38,1,39,3,40,3,70,1,126,1,139,1,158,1,197,1,200,2,204,1,205,1,214,1,227,1]
,"(section)":[9,1]
,"held":[9,4,50,6,61,1,104,1,143,1,153,1]
,"node":[9,3,61,1,70,1,74,2,76,1,90,1,128,1,138,1,224,1,225,1,263,1,267,1,306,3]
,"independent":[9,1,190,1]
,"communication":[9,1]
,"running":[9,1,11,1,43,1,62,1,116,1,123,1,126,1,207,1,244,1,289,1,303,1]
,"weak":[9,2]
,"consistency":[9,4,64,1,71,1,144,1,146,2,182,1]
,"contain":[9,1,42,1,228,2,237,1,239,2]
,"consistent":[9,1,44,2,61,1,64,1,70,3,76,1,138,1,143,2,144,2]
,"values":[9,1,38,9,39,6,40,4,41,1,43,4,44,1,59,1,90,1,122,1,127,1,128,1,138,4,139,1,141,1,176,2,179,1,180,3,183,2,184,1,204,1,209,2,247,1,255,1,256,2,262,1,263,2,275,2,297,4,303,1]
,"time-to-live":[9,1,137,1,176,1]
,"completed":[9,1,54,1,209,2]
,"reloaded":[9,1,128,2,137,1,143,1,146,1,249,1]
,"remote":[9,1,90,2,96,1,158,3,160,1,173,1,207,1,211,1,272,1,301,1,310,2]
,"subset":[9,1,10,1,40,1,43,1,113,1,126,1,258,1]
,"offers":[9,1,11,1,143,3,200,1,213,1,235,1]
,"rich":[9,1]
,"options":[9,1,19,1,45,1,73,1,124,1,127,1,128,1,137,2,144,5,146,4,160,2,165,1,177,1,204,1,216,1,220,1,226,1,261,1,262,4,263,1]
,"recommended":[9,1,44,1,126,1,143,1,146,2,166,1,168,2,206,2,230,1,232,1,239,1,249,1,271,1,298,1,300,2,303,1]
,"approach":[9,1,67,1,113,2,121,2,141,2,179,2,294,1,306,2]
,"clustered":[9,1,50,1,90,1,146,1,176,2,181,1,182,3,248,1,261,1,306,4]
,"scaled-out":[9,1]
,"environment":[9,2,82,3,90,1,181,1,261,1,262,3,288,1,299,1]
,"highest":[9,1]
,"level":[9,1,10,1,13,1,49,1,57,1,60,1,64,3,122,2,128,1,130,7,131,1,132,1,134,6,135,2,145,1,166,4,174,1,178,2,240,1,262,1,304,1,307,1]
,"availability":[9,2,182,1]
,"replicated":[9,4,51,1,74,1,172,1,173,1,200,8,201,1,203,1,204,4,205,1,206,2,208,4,212,1,213,3,214,1,220,4,221,1,223,1,224,2,225,2,226,1,295,3,298,3,301,2,304,7,307,1,310,3]
,"copied":[9,1,208,1,220,1]
,"invalidated":[9,1]
,"without":[9,2,10,1,14,1,55,1,57,1,62,1,89,1,100,1,104,2,112,1,123,1,124,1,127,1,132,1,138,1,139,1,144,1,166,1,182,2,204,1,240,1,244,1,289,1,297,1,303,2]
,"locking":[9,1,46,1,47,4,48,2,49,2,50,1,51,2,65,1,127,1,128,1,240,1,297,1]
,"replication":[9,1,74,1,96,1,173,1,174,3,198,1,199,1,200,5,201,1,202,1,205,1,209,1,210,2,211,1,213,1,214,1,220,2,222,2,224,4,225,2,226,1,230,1,231,1,232,2,265,1,272,2,298,2,301,1,307,3]
,"asynchronous":[9,1,44,1,70,1,182,2,204,1,208,1,220,1,298,1,307,1]
,"synchronous":[9,1,85,1,86,1,87,1,89,1,90,1,91,1,96,1,143,1,144,1,208,1,209,1,220,1]
,"writing":[9,1,32,1,34,1,35,1,70,1,74,2,75,1,144,1,176,1,182,4]
,"thread":[9,1,10,1,34,2,35,1,44,1,50,4,54,5,64,3,68,1,74,1,76,1,85,1,86,1,87,1,89,1,90,1,91,3,100,1,117,1,127,2,128,2,170,1,181,2,182,3,190,3,197,1,289,1,297,4,298,4]
,"propagation":[9,1,211,1]
,"occurs":[9,1,65,1,71,1,74,1,85,1,87,1,89,1,91,1,96,2,131,1,137,1,138,2,181,1,209,1,272,2]
,"mode":[9,1,34,1,57,7,60,1,61,7,62,1,68,4,70,1,74,3,76,2,144,1,208,1,226,1,229,1,262,2]
,"supported":[9,1,30,1,38,1,39,1,40,2,51,1,57,2,60,1,67,1,68,5,122,2,190,1,200,1,227,1,249,2,261,2,262,2]
,"production":[9,1,126,2,127,1,166,1,178,1,279,1,283,1,287,1]
,"deployed":[9,1,160,1,181,2]
,"clusters":[9,2]
,"instances":[9,4,10,1,36,1,50,1,134,1,141,1,179,1,239,1,306,1,309,1]
,"undesirable":[9,1]
,"behaviors":[9,1,36,1,104,1]
,"drift":[9,1]
,"-if":[9,1,64,2,227,1,298,3]
,"instance":[9,2,19,1,23,2,27,1,33,2,36,1,40,3,73,1,86,1,99,1,104,1,117,2,124,1,134,2,182,1,238,2,239,1,261,1,262,1,275,2,294,1,300,1,309,3]
,"maintains":[9,1,240,1]
,"updates":[9,1,26,2,74,1,141,3,160,1,179,3,182,2,209,2,220,1,226,1,244,1]
,"made":[9,1,19,1,21,1,38,1,39,2,40,1,41,1,70,1,74,1,91,1,96,1,104,1,112,2,127,2,141,2,144,1,166,2,179,2,181,1,206,1,297,1,306,1]
,"appear":[9,1,51,1,66,1,134,1,174,1,243,1,304,1,306,1]
,"happens":[9,1,44,1,62,1,70,3,91,1,111,1,134,1,144,1,153,1,190,3,197,1,216,1,226,1,272,1,297,1]
,"session":[9,1,244,2]
,"ensures":[9,1,160,1,235,1]
,"kept":[9,1,144,3]
,"sync":[9,1,57,2,141,1,179,2,182,1]
,"bottlenecks":[9,2]
,"-in":[9,1]
,"single-instance":[9,1]
,"effectively":[9,1,297,1]
,"shields":[9,1]
,"redundant":[9,1]
,"keep":[9,1,18,1,40,1,137,1,139,1,141,1,179,1,182,2,235,1,294,1]
,"fresh":[9,1,141,2,179,2]
,"refreshing":[9,2]
,"leads":[9,1]
,"added":[9,1,10,1,25,2,38,1,40,2,42,4,57,1,66,1,81,1,86,1,87,1,102,1,104,1,109,1,113,1,122,1,123,1,124,1,127,1,134,2,150,1,160,3,174,1,183,1,197,2,206,1,216,1,226,1,249,1,256,1,266,1,288,1,297,1,303,1,306,3,309,1]
,"eliminates":[9,1]
,"per-instance":[9,1]
,"tiers":[10,3,11,2,20,1,71,1,111,1,125,1,126,7,127,1,129,1,130,3,133,1,137,3,140,1,263,1]
,"divide":[10,1,132,2]
,"areas":[10,1,71,1]
,"memorystore":[10,6,26,1,60,1,70,1,91,1,170,2,294,1,297,3,306,1]
,"on-heap":[10,1,134,3]
,"hold":[10,2,18,1,50,1,82,1,108,1,127,1,139,1,275,1,294,1]
,"elements":[10,3,18,1,20,2,21,1,26,3,36,1,40,1,42,2,70,2,71,4,74,2,76,5,77,2,78,1,89,1,91,2,100,1,111,2,112,7,113,2,122,3,124,3,127,3,128,4,130,1,134,5,135,1,138,4,139,2,141,1,146,5,150,1,174,2,179,1,205,1,208,3,214,1,220,3,225,1,228,1,263,1,266,1,294,4,297,5,303,2,306,1,307,1,310,1]
,"tier":[10,4,11,4,126,1,127,3,128,1,130,1,131,14,132,2,137,4,138,1,139,3,143,1,144,3,145,1,146,1,271,1]
,"subject":[10,3,126,2,181,1,263,1]
,"offheapstore":[10,11]
,"overflow":[10,5,126,2,127,4,128,2,145,1,297,1]
,"capacity":[10,2,126,2,267,1,297,1]
,"size":[10,6,11,2,42,2,43,1,71,1,74,6,77,1,111,3,112,3,126,1,127,8,128,5,130,2,131,8,133,1,134,2,135,4,138,1,139,5,145,1,174,1,241,1,263,2,265,1,267,1,297,3,298,1,304,1,306,1,307,1,310,1]
,"ram":[10,2,126,1]
,"(gc)":[10,2,127,1,153,1]
,"diskstore":[10,6,26,1,75,1,91,4,128,3,144,2,170,3,189,1,263,1,265,1,267,1,297,7,298,2]
,"always":[10,1,19,1,32,1,36,1,40,1,41,1,55,2,61,1,62,1,70,1,71,1,112,1,121,1,122,1,127,2,134,1,143,1,182,2,241,1,246,2,261,1,301,3]
,"enabled":[10,4,14,1,57,1,59,2,62,1,68,1,76,1,127,4,160,1]
,"characteristics":[10,1,20,1,127,1,139,1]
,"accepts":[10,1,40,1,102,1,127,1,190,1]
,"whether":[10,1,31,1,40,1,41,2,43,1,44,2,50,2,51,1,54,1,64,1,65,1,100,1,127,1,139,2,148,1,160,4,171,1,181,1,190,3,208,1,220,1,241,1,261,1,274,1,280,1,294,1,297,1]
,"serializable":[10,4,21,1,26,2,75,1,127,1,128,1,158,1,204,1,205,2,214,2,263,1,265,1]
,"fastest":[10,1,127,2,143,1]
,"option":[10,1,42,1,63,1,68,1,127,1,128,2,139,2,143,2,144,8,170,1,206,1,261,1,262,1,300,1]
,"safe":[10,1,113,1,127,1]
,"concurrent":[10,1,54,1,66,1,100,1,127,1,181,1,190,1,240,2,309,1]
,"threads":[10,2,36,1,54,2,64,1,66,3,68,2,100,2,104,5,127,1,128,1,153,1,181,3,182,1,190,4,249,1,297,1,298,3,303,1]
,"(available":[10,2]
,"only)":[10,1,90,1,130,2,131,1,146,1,206,1]
,"holds":[10,1,70,1,91,1,106,1,108,1,126,1,184,1,276,2,306,1]
,"hottest":[10,1,126,1]
,"specify":[10,1,40,2,54,1,63,1,122,1,127,1,128,2,131,3,134,2,138,1,139,1,206,3,207,1,215,1,216,1,239,2,249,1,262,1]
,"configuration":[10,5,11,4,13,3,14,1,19,10,20,3,23,1,24,6,25,6,26,1,34,1,35,1,36,1,38,1,39,7,40,5,41,2,58,1,63,1,64,1,68,2,71,2,73,3,76,1,80,1,81,1,82,1,83,1,94,1,95,1,96,1,97,1,101,1,102,1,104,2,107,1,109,1,111,2,118,3,119,1,121,14,122,12,123,5,124,2,126,1,127,3,128,8,131,4,132,4,134,1,137,1,138,3,139,5,140,2,141,2,144,2,145,4,146,7,148,1,166,1,171,1,173,1,174,3,176,1,177,1,178,4,179,2,181,1,183,3,194,1,195,3,201,3,202,1,206,8,208,1,211,1,215,1,216,4,217,1,218,2,220,2,221,2,222,1,226,11,229,4,230,2,235,3,238,2,239,5,242,1,243,1,244,2,256,2,261,1,262,3,263,3,266,2,276,2,278,2,279,1,283,4,293,1,294,1,295,4,297,3,298,1,300,2,301,1,303,2,304,1,309,5,310,1]
,"existing":[10,1,19,5,26,1,104,1,111,1,127,1,128,1,156,1,174,1,202,1,208,1,220,1,248,1,261,1,274,2,309,1]
,"deleted":[10,2,66,1,91,4,127,2,137,2,171,1,232,1,300,1]
,"evaluated":[10,1,127,1]
,"spooling":[10,1,127,2]
,"check":[10,1,19,1,31,1,41,1,44,1,54,1,70,1,72,1,91,2,127,1,148,1,174,1,181,1,182,1,237,1,297,1]
,"expiry":[10,1,71,2,91,3,127,4,128,2,190,4,244,1,297,3,298,1]
,"carried":[10,1,127,1]
,"expired":[10,1,75,1,91,4,127,3,128,2,137,1,138,1,139,2,140,1,190,1,249,1,297,1]
,"spooled":[10,1,91,1,127,1]
,"sizing":[10,3,11,10,20,1,71,1,111,1,123,1,126,2,127,2,129,1,130,6,131,3,132,5,133,2,134,11,139,2,140,1,235,1,263,2]
,"configuring":[10,6,11,1,20,1,40,1,59,2,63,1,70,1,73,1,86,1,90,1,120,1,125,1,127,1,128,5,131,2,139,1,142,1,147,1,148,1,171,1,176,1,178,1,179,1,190,1,206,1,207,1,208,1,209,1,220,1,226,3,230,1,235,4,238,1,239,1,240,2,241,2,260,2,262,1,266,1,279,1,283,1,294,1]
,"guide":[10,3,11,2,12,1,13,4,14,2,16,1,20,1,36,1,71,1,111,1,119,1,121,1,141,1,144,1,151,1,171,1,177,1,187,1,198,1,247,1,263,2,267,1,275,1,294,1,297,1,300,1]
,"extends":[10,1,82,1,91,1,100,1,102,1,190,1,226,1,247,1,276,2]
,"outside":[10,1,35,1,70,1,137,1,141,1,153,1,179,1,297,1,300,2]
,"amount":[10,1,126,1,131,2,132,1,139,1,153,1,263,1,298,2,310,1]
,"create":[10,1,14,5,19,7,23,1,25,3,39,2,40,3,43,1,47,1,70,1,72,1,73,1,76,1,86,1,91,2,96,1,99,1,104,1,106,1,108,1,122,1,132,1,178,1,182,1,207,1,226,2,228,3,229,2,249,1,252,1,260,1,261,3,262,6,279,1,283,1,294,1,300,1,303,3,306,1,309,1]
,"extremely":[10,1,54,1]
,"off-heap":[10,3,70,1,111,1,126,2,127,1,130,2,132,10,235,1,263,10,294,2]
,"bytes":[10,3,11,1,128,2,130,3,132,1,135,2,228,4]
,"suitable":[10,1,104,1,106,1,108,1,126,1,190,4,205,2,214,2]
,"non":[10,1]
,"overflowing":[10,2,128,1]
,"offheapmemorystore":[10,1]
,"removed":[10,2,21,2,44,3,76,3,86,1,87,1,89,2,91,3,111,1,123,1,127,1,128,2,138,1,139,4,143,1,160,1,171,1,190,1,206,1,297,2]
,"warning":[10,1,91,1,122,2,128,1,131,1,134,2,207,1,227,3,263,1,297,1,301,1,307,1,309,2]
,"log":[10,1,14,1,21,1,134,3,153,1,166,1,171,1,174,1,227,3,304,1,307,1,309,1]
,"message":[10,1,21,1,62,1,117,1,128,1,141,7,171,1,179,7,200,2,208,1,213,1,220,1,224,4,226,7,227,16,228,6,229,5,230,6,231,3,249,1,255,2,289,1,301,3,307,2,310,1]
,"emitted":[10,1,59,1,91,1]
,"serialization":[10,5,36,2,124,1,128,5,263,1]
,"deserialization":[10,1,43,1,263,1]
,"place":[10,1,13,2,14,1,21,1,63,1,80,1,104,1,123,3,133,1,138,4,140,1,141,1,153,1,259,1,262,1,263,1,267,1,275,1,297,1]
,"putting":[10,1,26,1,239,1,263,1]
,"theoretically":[10,1,249,1]
,"slower":[10,1,65,7,144,1,182,1]
,"difference":[10,1,33,1,34,1,153,1,189,1,297,1]
,"mitigated":[10,1,70,1]
,"associated":[10,1,42,1,82,1,246,2]
,"larger":[10,1,263,1,306,2]
,"heaps":[10,1,153,2,154,1]
,"account":[10,1,62,1,127,1,190,1]
,"best":[10,1,27,1,38,1,42,1,43,1,112,1,113,1,127,1,210,1,265,1,272,1,300,1]
,"allocate":[10,1,132,2]
,"possible":[10,1,43,3,47,2,70,1,73,1,90,1,91,1,99,1,113,2,127,1,145,1,160,1,240,1,247,1,297,1,298,1,303,1,307,1]
,"triggering":[10,1,127,1]
,"pauses":[10,1,127,1,153,1]
,"cannot":[10,1,33,1,40,2,42,2,44,1,49,2,59,1,61,1,64,1,70,1,71,1,117,1,127,1,128,1,131,2,132,1,139,3,206,1,232,1,294,1,309,1]
,"(without":[10,1,127,1]
,"causing":[10,1,19,1,121,1,127,1,133,1]
,"pauses)":[10,1,127,1]
,"thread-safe":[10,1,20,1,124,1,128,1,248,1,297,2]
,"disk-spooling":[10,1,128,1]
,"facility":[10,1,128,1]
,"additional":[10,1,13,1,27,1,41,1,42,1,59,1,128,2,144,1,153,1,165,1,174,1,197,1,215,1,216,1,235,1,243,1,247,1,263,2,303,1,309,1]
,"persisting":[10,1,128,1]
,"restarts":[10,1,128,2]
,"(standalone)":[10,1]
,"max)":[10,1]
,"instead":[10,1,36,1,38,1,39,1,43,6,60,2,64,1,73,1,106,1,124,1,143,1,154,1,180,1,182,2,183,1,238,1,239,2,256,1,307,1]
,"placed":[10,1,25,1,64,1,82,1,87,1,91,1,96,1,108,1,112,1,118,1,127,1,128,1,208,1,220,1,230,1,260,2,263,1]
,"writes":[10,1,34,1,65,3,70,10,71,2,76,2,128,1,143,1,144,2,176,1,182,6,240,1]
,"objectinputstream":[10,1,128,1]
,"mechanism":[10,1,58,1,61,1,68,2,82,2,106,1,108,1,128,1,141,1,143,1,179,1,200,2,202,1,204,1,207,1,213,1,217,1,224,3,262,2,295,1,306,1]
,"non-serializable":[10,1,21,1,128,1,297,2]
,"notserializableexception":[10,1,128,1]
,"thrown":[10,1,40,2,57,1,64,3,67,1,76,2,78,2,96,1,117,1,128,1,131,1,190,1,197,2,207,1,289,1]
,"aware":[10,1,261,1]
,"serialized":[10,3,126,2,127,1,128,3,134,2]
,"type":[10,1,14,1,40,8,78,1,94,1,128,1,134,1,139,1,190,1,213,2,220,1,227,4,228,2,229,2,249,1,254,1,255,1,261,1]
,"shown":[10,1,25,1,63,2,68,1,73,1,95,1,107,1,109,1,132,1,178,1,238,1,240,1,262,1,278,1,283,1,300,1]
,"consisting":[10,1,128,1]
,"map":[10,1,40,1,76,1,82,1,104,1,128,1]
,"string":[10,1,23,4,40,3,42,2,43,2,48,2,104,1,128,1,134,1,184,2,190,1,222,1,226,2,227,2,228,4,229,1,262,3,276,2]
,"arrays":[10,2,128,2,134,1]
,"126ms":[10,1,128,1]
,"349,225":[10,1,128,1]
,"byte":[10,2,40,1,128,2,134,1,189,1,228,6]
,"7ms":[10,1,128,1]
,"310,232":[10,1,128,1]
,"serialize":[10,1,128,1]
,"making":[10,1,36,1,38,1,39,1,40,2,41,1,43,1,64,1,113,1,128,1,156,1]
,"better":[10,1,112,1,128,1,154,1,181,1,190,1,262,2]
,"choice":[10,1,13,1,32,1,128,1]
,"increasing":[10,1,128,1,307,1,310,1]
,"disk-store":[10,1,19,4,128,2]
,"optional":[10,1,90,1,127,1,128,2,174,1,226,1,262,1,309,1]
,"stores":[10,1,11,2,20,2,36,1,57,2,58,1,70,1,111,1,128,3,171,1,269,1,294,1]
,"configure":[10,1,13,2,14,2,19,1,34,1,36,1,68,1,73,1,95,1,102,1,107,1,122,1,124,1,128,2,131,1,145,1,176,2,177,5,178,1,183,3,193,5,200,3,204,2,207,1,213,2,216,1,219,2,225,1,226,1,235,3,237,2,238,1,240,1,256,3,262,2,263,1,267,1,275,1,276,1,283,1,300,1,306,1]
,"simplifies":[10,1,128,1]
,"uses":[10,1,31,1,40,2,41,1,55,1,62,1,63,1,65,1,68,2,70,1,71,1,74,1,87,1,99,1,111,1,114,1,118,1,124,1,128,2,165,1,190,3,206,1,210,1,226,1,229,1,232,1,246,1,255,1,265,1,272,1,276,1,279,1,300,1,307,1]
,"fewer":[10,1,70,1,128,1,182,1]
,"<<!":[10,1,38,2]
,"!>>>":[10,1]
,"persistence":[10,1,19,1,128,2,130,1,131,3,142,1,143,5,144,4,145,4,146,14,171,2,182,1,235,1,261,1,266,1,278,1,297,2,306,1]
,"restartability":[10,1,128,1,142,1,143,1,144,2,146,2,171,2]
,"section":[10,1,45,1,59,1,122,1,128,1,131,1,145,1,146,1,183,1,238,1,256,1,300,1]
,"automatic":[11,3,20,1,39,2,43,1,137,1,206,5,211,1,235,1,249,1,262,1,294,1]
,"control":[11,2,14,1,20,1,44,2,47,1,57,1,60,1,128,1,134,2,137,1,139,1,141,1,145,1,179,1,183,1,207,1,211,1,235,1,241,2,249,1,261,1,297,1]
,"(arc)":[11,1,137,1]
,"gives":[11,1,112,1,139,1,141,1,179,1,297,1]
,"fine-grained":[11,1,235,1]
,"controls":[11,1,134,1,235,1,310,1]
,"tuning":[11,2,130,1,152,1,154,2,204,1]
,"enabling":[11,1,177,1,193,1,235,1,239,2,278,1]
,"trade-offs":[11,1]
,"independently":[11,1]
,"adjustable":[11,1]
,"parameters":[11,1,25,1,42,2,80,1,123,1,138,1,190,1,262,1,303,1]
,"include":[11,1,41,1,43,1,50,1,65,2,74,1,85,1,87,1,89,1,91,1,100,1,123,1,132,1,143,1,146,1,165,1,190,1,195,1,197,1,206,1,238,1,249,1,278,1]
,"differentiated":[11,2]
,"tier-based":[11,2]
,"pinning":[11,3,20,1,133,5,137,2,139,20]
,"hot":[11,1,143,1,235,1]
,"eternal":[11,1,71,1,78,1,123,1,138,4,261,2,297,3]
,"arc":[11,1]
,"wealth":[11,1]
,"benefits":[11,1,70,2,182,1,267,1]
,"limitations":[11,1,70,2,133,1,139,1,140,1,173,1,265,3,267,1]
,"avoid":[11,1,19,1,49,1,66,1,70,1,71,1,76,1,122,1,128,1,190,1,235,1,249,1,263,1]
,"outofmemory":[11,1,133,1,235,1]
,"errors":[11,1,61,1,78,1,94,1,117,1,121,1,133,1,134,2,139,1,174,1,235,1,308,1]
,"pooled":[11,1,132,2]
,"requirement":[11,1,55,1,68,1,70,1,121,1]
,"individually":[11,1]
,"flexibility":[11,2,40,1]
,"percentages":[11,1,130,1,131,1]
,"dynamically":[11,1,40,4,123,4,183,2,256,2,303,1]
,"involves":[11,2,130,1,134,1,235,1]
,"appropriately":[11,1,71,1,104,1,130,1,160,1]
,"ways":[11,1,23,1,70,1,130,1,262,1,303,1]
,"simple":[11,1,38,1,40,1,48,1,122,1,130,1,135,1,143,1,176,2,178,1,184,6,189,1,190,1,235,1,262,2,269,2,276,1,283,1,303,1]
,"attributes":[11,1,38,5,39,10,40,13,41,5,42,8,43,2,44,1,74,2,86,1,90,1,122,1,123,1,124,1,130,7,131,2,132,1,133,1,134,1,138,1,144,1,146,2,157,1,158,8,207,1,294,1,297,2,303,2]
,"tune":[11,1,138,1,297,1]
,"dynamic":[11,1,39,3,40,7,54,1,94,1,123,2,190,1,267,2]
,"allocation":[11,1,132,1]
,"balancing":[11,1,141,1,179,1]
,"important":[11,1,43,1,78,1,141,1,166,1,179,1,181,1,235,1,241,1,244,1,248,1]
,"aspects":[11,1,71,1]
,"managing":[11,3,42,1,62,1,65,1,136,1,137,1,297,1]
,"life":[11,3,136,1,137,3,297,1]
,"expiration":[11,1,123,2,137,1,138,3,139,1,140,1,141,8,176,2,179,8,252,1]
,"installation":[12,1,211,2,259,3,272,2,278,2,288,2]
,"download":[13,1,14,1,62,2,165,2,173,1,235,1,236,1,245,1,278,1,294,1]
,"http:\u002F\u002Fehcache.org\u002Fdownloads":[13,1]
,"beginning":[13,1,64,1,248,1]
,"1.7.1":[13,1,165,1]
,"slf4j":[13,2,134,1,165,6]
,"(http:\u002F\u002Fwww.slf4j.org)":[13,1]
,"logging":[13,6,70,1,164,1,165,8,166,5,174,3,272,1,304,2]
,"framework":[13,1,14,1,165,1,170,1,254,1,275,1,276,1,278,1]
,"concrete":[13,1,36,1,82,4,87,4,91,3,96,4,102,2,108,4,165,4]
,"implementations":[13,1,82,1,87,1,91,1,96,1,108,1,113,1,165,1,224,1,276,1]
,"1.5":[13,1,173,1,259,1,304,1,306,1]
,"1.6":[13,1,224,1,268,1,300,2,306,3]
,"jar":[13,1,122,1,165,1,173,1,259,1]
,"classpath":[13,2,14,1,24,2,82,1,87,1,91,1,96,1,108,1,118,1,122,3,158,1,174,1,239,1,259,1,260,1]
,"ehcache.xml":[13,2,14,3,24,1,39,1,63,1,80,2,82,3,86,1,87,3,91,3,94,1,95,1,96,4,101,1,102,1,104,2,108,3,118,2,122,8,123,1,128,2,174,2,177,4,178,2,180,1,185,1,190,2,193,4,195,1,206,1,210,1,216,1,225,1,226,3,235,2,241,2,242,1,243,1,244,3,260,3,262,1,263,2,266,1,278,1,279,2,280,2,283,2,294,1,300,1,309,1]
,"xml":[13,1,73,1,121,2,122,6,178,1,190,1,204,1,227,1,228,3,242,1,243,1,266,1,283,1]
,"optionally":[13,1,170,1,200,1,204,1,239,2]
,"appropriate":[13,1,59,2,121,1,134,1,177,2,193,2,259,1,262,1]
,"described":[13,1,38,1,111,1,122,1,135,1,139,1,235,5]
,"developer":[13,1,16,1,141,1,275,1]
,"<<ffc-a":[13,1]
,"hello":[13,1,62,1]
,"exercise":[13,1]
,"nice>>":[13,1]
,"specific":[14,1,40,1,43,2,70,1,76,1,82,2,87,1,91,1,96,1,108,1,131,2,132,1,139,1,176,1,177,1,229,1,230,1,237,2,244,1,247,1,276,1]
,"technologies":[14,1,62,1,211,1]
,"steps":[14,3,64,3,177,2,178,2,183,1,193,3,235,1,256,1,262,1,263,1,275,1,283,2]
,"(see":[14,2,206,1,265,1]
,"caching)":[14,2]
,"integrations":[14,2,233,1]
,"book":[14,2,178,2,235,1,252,1,262,3,283,2]
,"servlet":[14,1,62,1,176,1,177,3,193,3,197,1,309,1]
,"subclass":[14,2,82,1,87,1,96,1,108,1]
,"cachingfilter":[14,1,100,1,104,1,190,2,196,1,197,1,309,1]
,"jsp:include":[14,1]
,"anything":[14,1,82,2,227,1,229,1,272,1,276,1]
,"callable":[14,1]
,"requestdispatcher":[14,1,197,1]
,"pagefragmentcachingfilter":[14,1]
,"web.xml":[14,1,169,1,177,4,193,4,194,1,195,2]
,"declare":[14,1,132,1,134,1,262,1]
,"filters":[14,1,176,1,177,1,189,1,192,1,267,1]
,"created":[14,1,19,2,24,1,35,1,40,2,41,1,60,1,76,1,82,1,86,1,100,1,102,1,103,1,104,2,106,1,108,1,117,1,122,2,128,3,144,1,182,1,190,1,227,1,232,1,241,1,249,1,298,2,306,3]
,"above":[14,1,40,1,42,1,60,1,63,1,113,1,132,1,134,1,146,1,181,1,183,1,195,1,239,1,256,1,262,2,298,1,307,1]
,"filter":[14,2,104,1,177,5,190,8,193,5,195,1,197,1,271,1,309,1]
,"mapping":[14,1,240,2]
,"associating":[14,1]
,"url":[14,1,24,2]
,"user":[14,2,54,1,62,1,78,1,122,2,177,2,181,4,187,1,190,3,226,1,229,1,231,1,267,1,276,1]
,"restful":[14,3]
,"soap":[14,2]
,"ehcache-standalone-server":[14,1]
,"https:\u002F\u002Fsourceforge.net\u002Fprojects\u002Fehcache\u002Ffiles\u002Fehcache-server":[14,1]
,"bin":[14,1]
,"directory":[14,1,122,1,128,5,144,1,178,2,252,1,259,1,260,2,262,2,263,2,283,2,288,1,294,1]
,"startup.sh":[14,1]
,"start":[14,1,23,1,40,2,68,1,177,2,193,2,207,1,209,1,211,1,230,1,262,1,263,1,272,1,275,1,288,2]
,"foreground":[14,1]
,"default":[14,1,19,3,25,1,36,1,40,1,41,1,42,1,43,1,59,2,64,3,68,2,70,1,74,1,80,1,86,1,90,1,91,1,94,1,96,1,111,2,112,3,121,1,122,5,123,2,124,3,127,1,128,5,138,3,141,1,144,4,148,1,153,1,163,1,173,1,177,1,178,1,179,1,190,3,193,1,204,1,206,1,207,2,208,2,211,3,220,1,226,1,228,1,229,2,230,2,239,1,262,2,279,1,283,1,298,1,301,1,303,1,309,4]
,"listen":[14,1,160,1,226,1]
,"port":[14,1,190,2,206,1,207,2,288,1,304,1]
,"8080":[14,1]
,"services":[14,1,106,1,108,1]
,"sample":[14,1,33,1,48,1,62,10,72,3,112,6,122,2,134,1,174,1,178,1,192,1,194,1,195,1,221,1,226,1,266,1,269,3,276,2,283,1,288,2]
,"war":[14,1,272,1]
,"module":[14,1,173,1,188,1,189,1,200,1,224,2,236,2,237,1,265,1,279,1]
,"code":[14,1,19,2,23,1,25,1,27,1,28,1,31,4,32,3,40,1,48,1,55,1,59,1,62,2,64,1,73,1,75,1,141,1,177,1,179,1,180,1,181,3,183,1,193,1,210,1,228,1,244,1,252,2,260,1,261,1,262,2,274,1,276,3,294,2,300,1,303,1,306,1]
,"samples":[14,1,19,1,33,1,228,4,239,1]
,"programming":[14,1,36,1]
,"language":[14,1,40,1,41,1,224,1]
,"jcache":[14,2,55,1,82,2]
,"style":[14,1,104,1]
,"early":[14,1]
,"draft":[14,1]
,"implementation":[14,1,20,1,40,1,47,1,60,4,63,1,68,2,70,1,76,2,82,3,87,2,91,3,96,2,99,1,108,2,124,3,131,1,134,1,144,1,150,1,165,3,190,1,244,1,248,2,254,1,276,4,306,1,309,1]
,"contained":[14,1,227,1]
,"net.sf.ehcache.jcache":[14,1]
,"package":[14,1,43,1,53,1,134,5,156,4,197,1,288,2]
,"cocoon":[14,1]
,"acegi":[14,1]
,"frameworks":[14,1,102,1,275,1]
,"usually":[14,1,127,1,267,1,301,1]
,"even":[14,1,26,1,40,1,57,1,71,1,75,1,106,1,108,1,133,1,139,1,141,1,143,2,179,1,181,3,182,2,190,2,205,1,214,1,232,1,262,1,300,1,306,1]
,"realizing":[14,1]
,"first":[14,1,31,2,40,2,42,2,54,3,61,1,63,1,65,2,100,1,112,3,118,1,127,3,138,1,174,2,177,1,181,1,182,1,190,2,193,1,197,1,252,1,262,1]
,"happening":[14,1,71,1,153,1,174,1,304,1,307,1]
,"discover":[14,1]
,"names":[14,1,40,4,41,2,134,1,190,1,242,1,243,1,247,1,300,1]
,"settings":[14,1,21,1,68,1,74,1,121,1,123,1,130,2,137,1,139,1,140,1,141,4,177,2,179,3,180,1,183,1,193,2,235,2,239,2,241,1,242,1,243,1,244,1,249,1,297,1]
,"classes":[17,1,18,4,53,2,80,1,82,1,87,1,91,1,108,1,117,3,134,2,156,1,254,1,309,1]
,"methods":[17,1,18,1,19,4,20,2,21,1,41,1,42,1,43,1,50,1,70,1,75,1,76,1,80,6,82,1,83,1,85,2,86,1,87,3,89,3,90,1,91,4,104,4,106,2,108,2,127,1,156,1,176,2,178,2,183,4,247,2,254,1,256,2,275,3,276,1,284,2,309,1]
,"consists":[18,1]
,"cachemanager":[18,2,19,22,23,6,24,8,25,12,26,1,27,7,39,2,40,2,64,7,85,4,86,2,87,10,97,2,99,1,102,1,104,8,122,4,128,6,130,10,131,4,132,8,134,7,144,1,145,4,157,2,158,1,159,1,160,11,161,2,168,1,169,1,170,6,174,1,184,3,190,2,200,1,202,1,204,1,207,3,208,1,213,1,216,1,220,1,225,1,226,1,238,2,249,2,252,1,260,1,261,2,272,2,276,6,294,3,295,1,298,1,300,1,303,3,304,1,306,2,309,7]
,"manages":[18,1,204,1]
,"logical":[18,2,20,2,41,7,306,1]
,"sets":[18,1,42,1,128,1,130,3,132,2,190,1,244,1,261,5,263,1,303,1]
,"represented":[18,1,42,1,60,1,242,1]
,"essentially":[18,1,301,1]
,"name-value":[18,1,91,1]
,"pairs":[18,1,74,1,82,2,87,1,91,1,96,1,108,1]
,"kind":[18,1,141,1,143,1,179,1,238,1]
,"want":[18,2,36,1,39,3,43,3,44,1,50,6,55,2,57,2,63,1,64,1,104,1,106,1,108,1,113,1,156,2,178,1,184,1,190,1,207,1,208,1,217,2,226,1,230,1,235,1,239,1,244,1,259,1,262,2,263,1,275,2,283,1,294,1,297,1,306,1,309,1]
,"just":[18,1,27,1,38,1,65,1,72,1,91,4,113,1,181,1,182,1,183,1,184,1,256,1,262,1,272,1,297,1,306,1]
,"physically":[18,1]
,"implemented":[18,1,60,1,249,1]
,"representations":[18,1]
,"components":[18,1,62,1,76,1,190,1]
,"actualized":[18,1]
,"mostly":[18,1,68,1]
,"form":[18,1,40,1,80,2,81,1,262,1]
,"api":[18,1,21,2,23,1,28,1,38,5,39,1,40,1,41,1,45,1,47,1,50,1,51,2,57,3,60,2,64,1,70,1,75,3,100,1,112,1,158,1,160,1,163,1,168,1,184,2,202,1,231,1,248,1,258,2,261,1,262,10,269,1,295,1]
,"largely":[18,1]
,"responsible":[18,1,67,1]
,"providing":[18,1,127,1,143,2,173,1,174,1,255,1]
,"programmatic":[18,1,83,1,97,1,103,1,109,1,121,2,145,1,160,1]
,"<<ffc-rewritten":[18,1]
,"slightly":[18,1,44,1]
,"foram":[18,1,148,1,235,2]
,"review":[18,1,19,1,141,1]
,"releases.>>":[18,1,44,1]
,"class":[19,1,20,1,31,1,32,3,40,3,41,1,42,1,63,1,73,1,82,4,86,3,87,2,90,2,91,2,96,6,102,1,103,1,108,4,115,1,116,4,117,9,134,5,144,1,160,1,169,1,176,1,184,5,190,2,206,1,207,2,208,1,220,1,226,2,228,1,240,1,248,2,261,1,268,1,272,2,276,3]
,"manage":[19,1,137,1,247,1]
,"creation":[19,4,23,1,76,2,102,1,103,1,128,1,226,1,238,2,289,1,301,2,309,1]
,"removal":[19,1,91,1]
,"controlled":[19,1,64,1,134,1]
,"named":[19,6,40,1,183,1,208,2,220,1,244,1,255,1,256,1,276,1]
,"modes":[19,2,57,3,64,1,65,2,68,1,74,1]
,"supports":[19,1,30,1,45,2,51,1,61,1,68,1,74,1,121,1,157,1,180,1,190,1,262,1]
,"singleton":[19,7,23,2,25,1,27,1,190,1,238,2,294,1,303,2,309,1]
,"jvm":[19,5,57,1,61,1,132,2,153,1,168,1,170,1,176,1,181,1,182,3,303,3]
,"cachemanagers":[19,5,23,1,122,1,128,1,207,1,210,1,239,1,249,1,294,1,298,2,306,1]
,"allowed":[19,1,44,1,59,1,74,1,138,2,181,1,183,1,256,1,297,1]
,"constructors":[19,1,20,1,45,1,122,1]
,"creating":[19,2,23,1,38,3,41,1,82,2,87,2,91,2,96,2,101,2,106,1,108,2,226,2,229,2,239,1,262,1,276,1,309,1]
,"non-singleton":[19,1,239,1]
,"violate":[19,1]
,"nullpointerexception":[19,1]
,"error":[19,1,21,1,40,1,96,1,117,1,121,1,122,1,138,1,166,1,226,1,249,1,268,1,272,3,289,1,298,2,301,1,309,2,310,3]
,"cachemanager.create":[19,5,23,1,303,1]
,"unnamed)":[19,2]
,"singletons":[19,1]
,"calling":[19,1,64,2,87,2,91,1,154,1,183,1,202,1,256,1,295,1]
,"configured":[19,1,25,1,36,2,40,4,60,1,64,1,68,1,74,1,76,2,80,1,82,3,86,1,87,3,90,2,91,3,94,4,96,2,102,2,107,1,108,3,111,1,113,1,122,1,124,1,128,3,130,1,131,4,132,2,134,1,135,1,139,7,144,3,146,1,169,1,171,1,174,4,182,2,190,1,204,1,206,2,207,2,218,1,221,1,222,1,225,2,229,2,230,2,232,1,235,1,239,1,243,1,244,1,249,1,261,1,262,2,263,1,278,1,279,1,297,2,298,1,306,2]
,"(if":[19,1,74,1,139,1]
,"exists)":[19,1]
,"creates":[19,1,23,3,24,5,25,1,82,1,87,1,90,1,96,1,100,1,108,1,128,1,132,1,156,1,243,1,262,1]
,"based":[19,1,24,2,25,1,38,1,63,1,70,1,102,1,113,2,127,1,137,1,138,2,139,1,140,1,190,2,225,1,228,1,241,1,243,1,262,1,306,1]
,"passed-in":[19,3]
,"work":[19,1,20,1,43,1,54,2,55,1,57,1,63,1,64,2,67,1,68,4,117,3,190,2,202,1,205,1,214,1,222,1,226,2,228,2,229,1,230,1,231,1,235,1,259,1,265,1,267,2,276,2,295,1,297,1,310,1]
,"cachemanager.newinstance":[19,2,23,1]
,"method":[19,1,38,1,40,8,42,1,50,1,59,1,68,1,75,4,76,11,77,2,78,3,82,12,87,11,91,13,96,3,102,1,104,6,106,2,108,8,122,1,127,2,141,3,156,2,160,2,170,1,179,3,183,13,190,1,197,3,228,1,244,1,254,1,255,2,256,13,261,1,262,4,275,3,276,1,294,1,303,2]
,"parses":[19,1]
,"doesn\u0027t":[19,1,36,1,61,1,141,1,179,1,180,1,183,1,222,1,256,1,276,1]
,"behavior":[19,1,47,1,94,1,106,1,134,1,160,1,294,1,303,1,306,1]
,"(configuration":[19,3]
,"configuration)":[19,3,32,1,132,2]
,"cachemanager.getinstance":[19,1,27,1,303,2,309,1]
,"throw":[19,1,39,1,66,2,67,1,76,2,82,1,91,1,96,1,104,1,108,1,190,1]
,"exception":[19,1,32,1,39,1,40,1,44,1,64,1,66,1,67,1,74,1,76,2,78,3,93,1,94,4,95,1,96,12,97,1,100,4,146,1,197,2,272,3,289,1,301,2,310,1]
,"parameter":[19,1,80,1,106,1,108,1,183,2,229,1,256,2,262,2,297,2]
,"(configuration)":[19,1,128,1]
,"null":[19,1,40,1,41,2,44,5,45,2,75,1,80,1,81,1,82,2,87,1,96,3,100,3,113,1,117,1,127,1,170,1,180,6,184,1,190,1,276,1,303,1]
,"note":[19,1,25,1,41,1,42,1,59,1,70,2,74,2,77,1,99,1,102,1,104,2,118,1,122,1,123,1,127,1,130,1,131,2,132,3,134,1,138,1,140,1,143,1,154,1,168,1,259,1,261,1,262,1,263,1,294,1]
,"instance-mode":[19,1]
,"(non-singleton)":[19,1]
,"concurrently":[19,1,36,2]
,"management":[19,1,153,1,155,1,156,5,160,2,161,1,247,1,263,1]
,"path":[19,4,128,13,144,5,211,2,262,2,272,2,288,1,309,1]
,"specified":[19,1,24,1,25,2,40,1,42,3,65,1,76,5,86,2,127,1,128,4,131,7,134,1,144,2,146,3,227,4,229,1,238,1,309,1]
,"unique":[19,1,112,1,122,1,128,1,190,2,289,1]
,"ensure":[19,1,64,1,71,1,74,1,104,1,131,1,248,1,249,2,266,1,267,1,289,2]
,"depending":[19,1,21,1,43,1,61,1,85,1,86,1,87,1,89,1,90,1,91,1,139,1]
,"upon":[19,1,76,1,139,2,144,1,146,1,181,1]
,"strategy":[19,1,32,2,59,2,113,1,124,2,127,1,128,2,144,5,145,3,240,2,249,2,297,2]
,"automatically":[19,1,40,2,41,1,43,1,60,1,63,2,68,1,127,1,128,1,132,1,144,1,160,1,163,1,168,1,169,1,181,2,190,1,224,1,235,1,249,1,263,1,306,2,309,1]
,"resolve":[19,1,50,1,122,1]
,"conflict":[19,1,128,1,144,1,309,1]
,"know":[19,1,122,1,206,2,249,1]
,"explicitly":[19,1,39,1,41,1,64,1,70,1,73,1,122,1,128,1,131,2,132,2,139,1,207,1,303,1]
,"managed":[19,1,62,2,182,1,275,1]
,"special":[19,1,42,1,127,1,141,1,150,1,179,1,249,1,309,1]
,"considerations":[19,1,42,1,44,1,65,1,91,1,163,1,219,1]
,"javadoc":[19,1,39,1,40,1,41,1,42,1,43,1,50,1,54,1,55,1,73,1,75,1,121,1,122,1,185,1,254,1,303,1]
,"http:\u002F\u002Fwww.ehcache.org\u002Fapidocs\u002F2.10.1\u002Ffor":[19,1,54,1,55,1,73,1]
,"passing":[19,1,36,1,63,1,124,1]
,"representation":[20,1]
,"analogous":[20,1]
,"region":[20,1,211,1,238,1,239,1,248,1]
,"once":[20,1,40,1,44,1,54,1,70,2,78,1,104,1,128,1,131,1,134,1,135,1,140,1,180,1,181,1,182,1,183,1,190,1,206,1,216,2,222,1,226,2,230,1,249,1,256,1,261,1,262,1]
,"(through":[20,1]
,"cachemanager)":[20,1,131,1,184,1,276,1]
,"actions":[20,2,70,1,178,1,227,2,284,1]
,"performed":[20,1,36,1,38,1,42,1,57,1,68,1,135,2,146,1,160,1,227,1]
,"physical":[20,1,235,1]
,"relegated":[20,1]
,"instantiated":[20,1,275,1]
,"programmatically":[20,1,25,3,39,3,74,2,80,1,92,2,94,1,101,1,104,1,109,1,124,2,128,1,139,1,145,1,239,2,297,1,303,1,306,3,309,1]
,"certain":[20,2,59,1,70,1,121,2,123,1,140,1,184,1,190,1,249,1,303,1]
,"(arc)-related":[20,1]
,"(for":[20,4,90,1,130,2,141,1,179,1,259,2,298,1]
,"getcachemanager":[20,1,104,2]
,"isnodebulkloadenabled":[20,1]
,"issearchable":[20,1]
,"())":[20,1,24,1,32,3,40,1,42,2,45,3,104,2,117,2,139,1,226,1,244,1]
,"cache-wide":[20,1]
,"flush":[20,1,137,1,146,1,170,1]
,"initialize":[20,1,306,1,309,1]
,"dispose)":[20,1]
,"allow":[20,1,36,1,47,1,64,1,74,1,82,1,83,1,85,1,89,1,91,1,106,1,108,1,135,1,160,1,174,1,183,1,256,1,301,1]
,"remove":[20,1,43,1,57,1,76,1,91,3,128,1,137,1,146,2,174,1,190,1,205,1,208,1,211,1,214,1,220,1,227,2,228,5,272,1,303,1]
,"replace)":[20,1]
,"isexpired":[20,1]
,"ispinned)":[20,1]
,"atomic":[21,1,47,1,57,2,61,1]
,"value":[21,1,26,4,31,1,36,3,39,1,40,7,41,2,42,3,43,1,44,5,50,6,58,1,59,1,70,3,74,2,76,2,77,1,82,2,87,1,91,2,96,1,108,1,113,1,123,2,128,2,132,2,134,2,135,1,138,3,144,1,174,2,180,7,181,4,183,1,197,1,209,3,211,2,227,4,228,6,229,1,244,1,249,1,254,1,256,1,261,3,262,1,267,1,269,1,276,2,297,5,307,1]
,"record":[21,1,135,1,141,1,144,2]
,"accesses":[21,1,31,1,140,1]
,"expire":[21,1,71,1,138,2,141,1,179,1,262,2,297,1]
,"persist":[21,1,61,1,182,1]
,"discarded":[21,1,61,1]
,"debug-level":[21,1]
,"apis":[21,1,82,1,121,1,247,2]
,"identical":[21,1,206,1,217,1,220,1]
,"except":[21,1,51,1,190,2,265,1]
,"getkeyvalue":[21,1]
,"getobjectvalue":[21,1,180,1]
,"getkey":[21,1]
,"getvalue":[21,1]
,"usages":[23,1]
,"snippets":[23,1,276,1]
,"illustrate":[23,1,70,1,132,1]
,"versus":[23,1,131,1,180,1,265,1]
,"defaults":[23,2,25,1,74,6,178,1,208,5,220,5,228,1,283,1]
,"cachenames":[23,2]
,"=cachemanager.getinstance":[23,1,64,1]
,".getcachenames":[23,1]
,"=manager.getcachenames":[23,1]
,"manager1":[23,1]
,"=cachemanager.newinstance":[23,2,24,4]
,"src\u002Fconfig\u002Fehcache1.xml":[23,1]
,"manager2":[23,1]
,"src\u002Fconfig\u002Fehcache2.xml":[23,1]
,"cachenamesformanager1":[23,1]
,"=manager1.getcachenames":[23,1]
,"cachenamesformanager2":[23,1]
,"=manager2.getcachenames":[23,1]
,"defined":[24,1,135,1,237,1,288,1]
,"manager":[24,4,25,2,26,1,27,2,59,4,60,3,61,3,62,1,63,3,64,1,68,3,84,1,86,1,97,1,161,1,261,2,276,1,289,1,306,1]
,"src\u002Fconfig\u002Fehcache.xml":[24,2]
,"=getclass":[24,1]
,".getresource":[24,1,118,1]
,"(\u0022\u002Fanotherconfigurationname.xml":[24,1]
,"(url)":[24,1]
,"inputstream":[24,2]
,"fis":[24,1]
,"=new":[24,1,25,2,26,1,32,1,39,4,40,5,45,2,48,1,73,2,97,1,103,1,104,1,109,1,124,4,128,2,145,3,161,1,226,1,228,2,303,1,306,1]
,"fileinputstream":[24,1]
,"(new":[24,1,25,2,26,2,31,2,32,2,39,5,40,3,41,1,48,2,64,2,73,3,145,2,180,1,181,1,184,1,276,1]
,".getabsolutepath":[24,1]
,"try":[24,1,43,2,48,2,62,1,64,1,68,1,76,1,117,3,141,2,179,2,181,1,222,1,226,1,244,1,246,2,249,1,303,1,309,1]
,"{cachemanager":[24,1]
,"(fis)":[24,1]
,"finally":[24,1,48,2,49,1,183,1,230,1,244,1,256,1,276,1,304,1]
,"{fis.close":[24,1]
,"removing":[25,2,26,1,85,1,135,1,139,1,272,1]
,"manager.addcache":[25,2,306,1]
,"(cachename)":[25,1,104,1,184,1,276,1]
,"adds":[25,2,40,1,42,1,65,1,104,2]
,"called":[25,5,26,2,27,2,39,1,40,1,41,1,43,2,44,1,57,1,64,5,70,1,74,2,76,7,78,1,80,1,81,1,82,7,91,4,96,1,100,1,104,1,108,4,122,3,128,2,170,1,176,1,181,1,182,2,227,1,229,1,240,1,254,1,255,1,267,1,309,2]
,"testcache":[25,8,278,1]
,"singletonmanager":[25,4]
,"defaultcache":[25,1,76,1,82,1,102,2,108,1,122,4,178,1,241,1,261,1,279,1,283,1,309,2]
,"=cachemanager.create":[25,4,306,1]
,"singletonmanager.addcache":[25,2]
,"test":[25,2,28,1,126,1,210,2,228,1,288,1,297,1,303,1]
,"=singletonmanager.getcache":[25,2]
,"below":[25,2,60,1,63,3,68,1,73,2,75,1,82,2,86,1,87,2,89,1,96,3,108,2,109,1,128,1,135,1,174,1,177,1,178,1,193,1,195,1,206,1,220,1,238,1,240,1,283,1,289,1,301,1]
,"add":[25,1,39,2,40,1,41,2,42,1,44,1,51,1,54,1,64,1,74,1,92,1,95,1,97,2,101,1,102,1,104,3,131,1,134,1,138,1,146,2,158,1,165,1,169,1,174,1,177,1,178,2,182,1,183,3,193,1,200,2,204,1,213,1,225,1,226,2,227,1,237,3,240,1,252,1,256,3,259,1,262,9,263,1,275,5,278,1,283,1,284,1,295,1,306,4,309,3]
,"usable":[25,1]
,"until":[25,1,44,1,50,2,57,2,65,1,67,1,74,1,87,2,91,4,100,2,139,1,140,1,160,1,190,2,207,1,209,2,230,1]
,"memoryonlycache":[25,1]
,"5000":[25,1,189,1,244,1,306,1]
,"false":[25,2,39,2,43,2,59,1,68,2,70,1,73,4,74,3,122,1,123,1,124,2,140,1,144,3,146,3,148,2,161,3,177,1,178,1,180,1,193,1,195,8,201,1,208,7,220,6,221,2,222,2,226,4,229,4,237,1,240,4,242,1,243,2,244,2,266,2,278,3,283,1,294,1,295,1,306,1]
,"(memoryonlycache)":[25,1]
,"\u002F\u002Fcreate":[25,2,39,1]
,"specifying":[25,1,241,1]
,"cacheconfiguration":[25,1,39,2,40,2,73,1,123,1,124,5,145,2,157,2,158,1,159,1,160,2]
,"maxentrieslocalheap)":[25,1,131,1]
,".memorystoreevictionpolicy":[25,1]
,"(memorystoreevictionpolicy.lfu)":[25,1]
,".eternal":[25,1,39,1]
,"(false)":[25,1,208,1,220,1]
,".timetoliveseconds":[25,1]
,"(60)":[25,1,123,1]
,".timetoidleseconds":[25,1]
,"(30)":[25,1]
,".diskexpirythreadintervalseconds":[25,1]
,"(0)":[25,1]
,".persistence":[25,1,145,1]
,"persistenceconfiguration":[25,1,145,1]
,".strategy":[25,1,145,1]
,"(strategy.localtempswap)))":[25,1]
,"(testcache)":[25,1]
,"constructor":[25,1,40,1,54,1,73,1,122,1]
,"http:\u002F\u002Fehcache.org\u002Fapidocs\u002F2.10.1\u002Fnet\u002Fsf\u002Fehcache\u002Fcache.html":[25,1]
,"<<ffc-why":[25,1,60,1,61,1,144,1]
,"directing":[25,1]
,"readers":[25,1,49,1,106,1,176,1,181,3]
,"doc":[25,1,40,1,43,1,44,1,45,1,51,1,65,1,91,2,106,1,122,1]
,"directed":[25,1]
,"version.>>":[25,1]
,"removes":[25,1,26,1,140,1,209,2]
,"samplecache1":[25,2,26,11,104,1,174,5,261,2,266,1]
,"singletonmanager.removecache":[25,1]
,"performing":[26,1]
,"obtains":[26,1]
,"preconfigured":[26,1]
,"=manager.getcache":[26,9,73,1,123,2]
,"puts":[26,1,74,2,209,1,261,2,306,1]
,"key1":[26,10]
,"value1":[26,2]
,"cache.put":[26,4,31,1,40,1,48,1,180,1,182,1,252,1,261,3]
,"(element)":[26,1,32,2,91,1]
,"updating":[26,1,44,2,303,1]
,"knows":[26,1,55,1]
,"considers":[26,1]
,"update":[26,1,31,1,57,1,70,1,75,1,76,1,91,2,127,1,147,1,148,2,174,1,177,1,182,4,193,1,249,1,262,1,267,1,306,1]
,"purpose":[26,1,108,1,189,1,197,1]
,"notifying":[26,1,89,1,141,1,179,1]
,"listeners":[26,1,74,1,84,1,85,3,87,1,88,1,89,5,90,2,91,4,301,1]
,"\u0022))":[26,2,39,4,41,1,64,2,145,1]
,"\u002F\u002Fthis":[26,1]
,"value2":[26,1]
,"=cache.get":[26,2,31,1,48,1,180,1,181,1,261,1,276,1]
,"=element.getvalue":[26,1]
,"nonserializable":[26,1]
,"=element.getobjectvalue":[26,1,180,1]
,"cache.remove":[26,1,139,1]
,"sizes":[26,1,131,2,134,2,153,1]
,"currently":[26,3,45,1,50,1,74,1,77,1]
,"int":[26,1,62,1,261,2]
,"elementsinmemory":[26,3]
,"=cache.getsize":[26,1]
,"=cache.getmemorystoresize":[26,1]
,"<<ffc-we":[26,1,57,1,70,1,100,1,143,1]
,"something":[26,1,27,1,59,1,61,1,100,1,122,1,240,1]
,"reported":[26,1,61,1,174,1,231,1,301,1]
,"distributed.>>":[26,1]
,"=cache.getdiskstoresize":[26,1]
,"shut":[27,3,168,1,169,2,170,2,171,1,261,2,303,1]
,"shut-down":[27,1]
,"hook":[27,1,168,1,170,7,303,1]
,"practice":[27,1]
,"shuts":[27,3,160,1,168,1,169,1]
,".shutdown":[27,1,303,2]
,"assuming":[27,2,40,1,104,1,112,2,127,2,135,1]
,"<<ffc-this":[27,1,43,1,45,1,61,1,72,1,106,1,131,1,133,1,138,1,166,1,171,1]
,"sentence":[27,1,61,1,72,1,91,2,100,1]
,"seems":[27,1,91,1,117,1,133,1,171,1,232,1,300,1,310,1]
,"difficult":[27,1]
,"unclear":[27,1]
,"along":[27,1,65,1,102,1,117,1,141,1,165,1,173,1,179,1,269,1,272,1]
,"line":[27,1,128,1,174,1,244,2,261,1,262,2,303,1]
,"manager.shutdown":[27,1,261,2]
,"cachemanagertest.java":[27,1]
,"https:\u002F\u002Ffisheye.terracotta.org\u002Fbrowse\u002Fehcache\u002Fbranches\u002Fehcache-2.10.1\u002Fehcache-core\u002Fsrc\u002Ftest\u002Fjava\u002Fnet\u002Fsf\u002Fehcache\u002F":[27,1]
,"junit":[28,2,298,1]
,"tests":[28,4,41,2,138,1,210,1,228,1,231,2,232,1,271,1,288,1,298,1,300,2]
,"comes":[28,1,47,1,207,1,209,1,230,1,259,1,288,1]
,"comprehensive":[28,1,294,2]
,"suite":[28,1]
,"browse":[28,1]
,"https:\u002F\u002Ffisheye.terracotta.org\u002Fbrowse\u002Fehcache\u002Fbranches\u002Fehcache-2.10.1\u002Fehcache-core\u002Fsrc\u002Ftest\u002Fjava\u002Fnet\u002Fsf\u002Fehcache\u002Fsearch":[28,1]
,"unit":[28,1,135,1]
,"src.zip":[28,1]
,"tarball":[28,1,173,1]
,"patterns":[29,1,30,3,32,1,99,1,275,2]
,"several":[30,1,59,1,70,1,224,1,262,1]
,"cache-aside":[30,1,31,2,33,1,34,1,275,1,276,1]
,"direct":[30,1,38,1,106,1,263,1]
,"manipulation)":[30,1]
,"cache-as-sor":[30,1,32,6,181,1,275,1]
,"combination":[30,1,32,1]
,"read-through":[30,2,32,2,33,3,71,3,100,1,181,1]
,"write-through":[30,2,32,3,33,1,34,6,35,2,67,3,69,1,70,4,73,2,74,3,76,4,182,1]
,"write-behind":[30,2,32,3,34,1,35,7,67,2,69,1,70,9,71,3,72,1,73,2,74,5,76,5,77,2,176,1,182,13]
,"patterns)":[30,1]
,"write-back)":[30,1]
,"pattern":[31,1,32,5,33,2,34,3,35,2,70,2,78,1,80,1,99,1,104,1,135,1,181,2,274,1,276,1]
,"means":[31,1,35,1,41,1,42,1,61,1,70,1,74,2,89,1,122,1,123,2,135,1,138,4,143,1,297,1,309,1]
,"consult":[31,1]
,"bypassing":[31,1]
,"otherwise":[31,2,57,1,65,1,111,1,118,1,181,1]
,"fetch":[31,1]
,"results":[31,1,38,2,41,6,42,24,43,3,44,3,55,1,112,1,138,1,190,1,244,1,262,2]
,"looks":[31,1,118,1,122,4,181,1,240,1,243,2]
,"pseudo-code":[31,1]
,"public":[31,2,32,4,40,1,106,1,108,1,113,1,134,2,156,1,184,6,226,2,240,1,244,1,254,2,255,2,275,2,276,11]
,"mydataaccessclass":[31,2,32,2]
,"{private":[31,1,32,1,134,1,184,1,276,1]
,"final":[31,1,32,1,40,1,91,4,134,1,135,1,184,4,262,1,276,4]
,"(ehcache":[31,1,32,2,76,1,82,2,91,2,96,1,102,1,104,2,108,2]
,"cache)":[31,1,32,2,36,2,62,1,76,1,82,1,91,1,108,1,181,1,275,1,276,1]
,"{this.cache":[31,1,276,1]
,"=cache":[31,1,261,1,276,1]
,"\u002F*read":[31,1,32,1,181,1]
,"*\u002Fpublic":[31,2,32,2,50,6,76,1,82,7,83,3,87,2,91,2,96,1,104,2,108,3,113,1,117,3,160,1,181,1,243,1,276,1]
,"readsomedata":[31,1,32,1,181,1]
,"key)":[31,1,32,2,50,6,181,1,184,2,276,1]
,"{element":[31,1,181,1,184,1,276,1]
,"((element":[31,1,181,1]
,"(key))":[31,2,181,2,306,1]
,"!=null)":[31,2,181,2,184,1,276,2]
,"{return":[31,1,32,2,83,1,117,2,181,1,184,2,243,1,276,2]
,"element.getvalue":[31,1,32,1,181,1,184,1,276,1]
,"\u002F\u002Fnote":[31,1,181,1]
,"decide":[31,1,181,1]
,"\u002F\u002Fwill":[31,1,181,1]
,"\u0027nulls":[31,1,181,1]
,"(value":[31,1,180,1,181,1,254,1,276,1]
,"=readdatafromdatastore":[31,1,181,1]
,"{cache.put":[31,1,32,1,48,1,181,1,276,1]
,"(key":[31,3,32,1,48,2,50,4,181,1,184,1,276,1]
,"value))":[31,1,181,1,184,1,276,1]
,"\u002F*write":[31,1,32,1]
,"void":[31,1,32,7,50,4,83,2,91,2,104,2,113,1,160,1,184,1,254,1,255,1,276,4]
,"writesomedata":[31,1,32,1]
,"value)":[31,3,32,2,184,2,276,3,306,1]
,"{writedatatodatastore":[31,1,32,1]
,"implies":[32,1]
,"primary":[32,1,64,1,70,1,246,2,249,1]
,"delegates":[32,1]
,"reading":[32,1,33,1,49,1,70,1,153,1]
,"activities":[32,1,134,1]
,"absolved":[32,1]
,"responsibility":[32,2,85,1,86,1,89,1,90,1]
,"implement":[32,1,33,1,34,1,36,1,41,1,58,2,68,1,85,1,89,1,99,1,103,1,113,1,181,2,182,1,183,1,184,1,256,1]
,"advantages":[32,1,121,1,143,1]
,"cluttered":[32,1]
,"(improved":[32,1]
,"maintainability)":[32,1]
,"strategies":[32,1,141,1,179,1,240,1]
,"per-cache":[32,1,139,1]
,"basis":[32,1,39,1,59,1,65,1,128,1,134,1,190,1]
,"(use":[32,1]
,"allows":[32,3,38,1,42,1,73,1,100,1,113,1,117,1,124,1,128,1,131,1,145,1,157,2,158,1,178,1,182,1,204,1,244,1,284,1,301,3]
,"solve":[32,1,53,1,209,1]
,"thundering-herd":[32,1]
,"disadvantage":[32,1]
,"visible":[32,1,57,1,64,1,207,1,306,1]
,"code-path":[32,1]
,"{cache.registercachewriter":[32,1]
,"mycachewriter":[32,2,73,2]
,"this.cache":[32,1]
,"selfpopulatingcache":[32,1,33,1,53,1,55,7,80,2,100,2,181,1]
,"(cache)":[32,1,97,1,103,1,104,1,303,1]
,"-notice":[32,2]
,"treated":[32,2,38,1,227,1]
,"*the":[32,4,75,1,76,2,82,2,87,2,91,1,226,1]
,"assumes":[32,1]
,"cache.get":[32,1,43,1,57,1,252,1,261,1]
,"(key)":[32,2,48,5,50,2,82,2,184,1,276,1,306,1]
,"cache\u0027s":[32,1,76,1,82,1,108,1,128,1,131,1,135,1,138,2,139,1,208,1,216,1,220,1,226,1,303,1]
,"\u002F***implement":[32,2]
,"cacheentryfactory":[32,2,33,1,55,1,80,1]
,"provide":[32,2,36,1,40,1,63,2,82,2,86,1,87,2,91,2,96,1,99,1,108,1,124,1,127,1,144,1,166,1,190,1,210,1,224,1,226,1,237,1,248,1,263,1,269,1,304,1,306,1,309,1]
,"*\u002Fprivate":[32,2,104,1]
,"mycacheentryfactory":[32,1]
,"implements":[32,2,128,1,144,1,184,1,248,2,276,7]
,"{public":[32,1]
,"createentry":[32,1]
,"(object":[32,1,50,8,82,1]
,"throws":[32,7,50,2,75,1,76,6,82,4,91,4,104,2,108,2,117,1,160,1,226,1,228,1,244,1,289,1]
,"readdatafromdatastore":[32,1]
,"cachewriter":[32,3,34,1,70,3,73,2,74,1,75,2,76,8]
,"interface":[32,1,33,1,34,1,40,1,41,1,68,1,76,3,80,1,82,3,85,1,87,1,89,1,91,2,96,2,99,1,106,1,108,2,113,2,184,1,206,1,207,2,211,1,247,2,276,2]
,"clone":[32,1,76,4,82,3,91,3,108,4]
,"clonenotsupportedexception":[32,2,76,3,82,3,91,3,108,3]
,"{throw":[32,1,117,3,226,1]
,"init":[32,1,76,1,82,2,104,2,108,1]
,"dispose":[32,1,76,2,82,3,91,1,108,2,170,2]
,"cacheexception":[32,5,64,1,75,2,76,5,82,4,91,3,94,1,104,2,108,3,117,5,160,1,207,1,272,1,303,1]
,"(element":[32,3,40,1,75,1,76,2,113,2,180,1,184,1,276,1]
,"element)":[32,1,40,1,75,1,76,1,91,5,112,1,135,1]
,"(element.getkey":[32,2]
,"writeall":[32,1,76,1]
,"(collection":[32,2,76,2,82,1]
,"<element>":[32,1,76,1]
,"elements)":[32,3,74,1,76,1,77,1]
,"{for":[32,2]
,"{write":[32,1]
,"delete":[32,1,70,1,74,1,76,3,146,1,209,1,297,1]
,"(cacheentry":[32,1,76,1]
,"entry)":[32,1,76,1]
,"{deletedatafromdatastore":[32,1]
,"deleteall":[32,1,74,1,76,1]
,"<cacheentry>":[32,1,76,1]
,"entries)":[32,1,76,1,138,1]
,"{delete":[32,1]
,"mimics":[33,1,34,1]
,"structure":[33,1,34,1]
,"instruct":[33,1]
,"wrap":[33,1]
,"<<ffc-the":[33,1,44,1,50,1,64,1,91,1]
,"paragraph":[33,2,61,1,70,1,72,1,89,1,166,1,171,2]
,"hidden":[33,1]
,"clear":[33,1,36,1,139,1,237,1,249,1]
,"refers":[33,1,44,1,207,1,235,1]
,"find":[33,1,42,1,51,1,89,1,128,1,171,1,180,1,237,1,280,1]
,"mentions":[33,1]
,"reinstate":[33,1]
,"refresh":[33,1,51,1,100,1,252,1]
,"execution":[34,1,35,1,40,1,76,1,104,1,141,1,179,1]
,"transaction":[34,2,35,4,36,2,56,1,57,3,59,6,60,4,61,9,62,4,63,6,64,17,65,5,67,6,68,8,70,5,76,1,144,2,209,1]
,"context":[34,1,57,1,86,2,103,1,117,1,121,1,226,4,229,1,237,1]
,"covered":[34,1,238,1]
,"scope":[34,1,35,1,139,1,211,1]
,"(including":[34,1,35,1]
,"settings)":[34,1,35,1]
,"changes":[35,1,36,1,42,1,57,4,64,5,74,1,123,1,124,1,144,1,177,1,182,1,183,1,193,1,248,1,288,1,306,1]
,"timing":[35,1,106,1,108,1]
,"queues":[35,1,224,2,230,1,231,2,232,2,300,2]
,"later":[35,1,40,2,43,1,48,1,78,1,122,1,124,1,182,1]
,"consequences":[35,1]
,"often-times":[35,1]
,"commit":[35,1,36,1,44,1,57,3,60,1,64,3,67,1,70,2,249,4]
,"separate":[35,1,70,1,76,1,122,1,156,1,174,1,294,1,309,1]
,"copyonread":[36,2,124,1]
,"true":[36,2,39,4,40,1,50,4,62,1,68,1,73,7,74,3,112,1,113,1,117,2,123,1,124,2,134,2,143,1,144,2,146,7,148,1,150,2,177,1,190,2,193,1,208,7,220,5,226,1,228,1,237,1,239,6,243,1,244,1,261,1,262,1,263,3,278,4,294,1,303,4,306,1]
,"copyonwrite":[36,2,124,1]
,"copy-on-read":[36,1,58,1,60,1]
,"useful":[36,1,43,1,57,1,62,1,80,1,100,2,102,1,104,1,190,1]
,"can\u0027t":[36,1,50,2,298,1,306,1]
,"(and":[36,1,66,1,74,1,77,1,112,2,127,2,146,1,179,1]
,"holds)":[36,1]
,"model":[36,1,135,2]
,"isolate":[36,1]
,"done":[36,1,40,1,42,1,44,1,54,1,62,1,64,3,70,2,74,1,82,1,91,1,108,1,116,1,174,1,178,1,208,1,213,1,216,1,220,1,224,1,225,1,226,2,260,1,262,1,267,1,283,1,289,1,303,1,307,1]
,"lets":[36,1,64,1,182,1,183,1,200,1,224,1,267,1]
,"determine":[36,1,42,1,65,1,111,1,121,1]
,"exactly":[36,1,42,1,131,1,144,1,246,2,249,1,289,1]
,"(i.e":[36,1,118,1,132,1,190,1]
,"state":[36,3,40,1,44,3,55,1,64,1,76,1]
,"actually":[36,1,43,1,75,1,76,1,306,1]
,"mutations":[36,1]
,"reflected":[36,1,124,1]
,"proper":[36,1,50,2,63,1,78,1,122,1]
,"isolation":[36,1,49,1,57,1,58,1,60,1,64,2,240,2]
,"boundaries":[36,1,70,1]
,"(the":[36,1,74,1,112,1,178,1,179,1,181,1,263,1,283,1]
,"standard":[36,1,60,1,61,1,63,1,116,1,117,1,144,1,156,1,157,1,224,2,275,1,276,1]
,"good":[36,1,178,1,244,1,261,1,283,1,303,1]
,"fast)":[36,1]
,"enough":[36,1,139,1,211,1,307,1]
,"copystrategy":[36,1,124,1]
,"easily":[36,1,70,1,121,1,178,1,182,1,235,1,267,1,274,1,278,1,284,1,303,1]
,"cloning":[36,1]
,"copies":[36,1,124,1,144,1]
,"references":[36,1,59,1,124,1,134,5]
,"searching":[37,1,38,1]
,"search":[38,9,39,5,40,11,42,1,43,3,44,6,45,3,190,1,243,1,267,1]
,"arbitrarily":[38,1]
,"complex":[38,1,40,1,41,1,116,1,213,1]
,"development":[38,1,166,1,262,2,272,1,296,1]
,"alternative":[38,1,47,1,55,1,68,2,127,1,156,1,259,1]
,"indexes":[38,1,44,1]
,"ability":[38,1,258,1]
,"looked":[38,1]
,"criteria":[38,1,41,3,43,2,44,1,45,4]
,"keys":[38,7,39,5,40,1,42,2,43,4,47,1,76,5,80,1,82,4,190,1,204,1,205,1,209,4,214,1,249,1,263,1,303,1,306,3]
,"indexing":[38,2,39,2,40,2,43,1,44,1]
,"practices":[38,1,42,1,43,1,271,1,272,1,300,2]
,"optimizing":[38,1,42,1,43,1,138,1]
,"searches":[38,2,40,1,42,1,43,4]
,"searchable":[38,6,39,8,40,12,43,1]
,"extracted":[38,1,40,3,42,1,254,1]
,"summary":[38,1,43,1,249,1]
,"(aggregators)":[38,1]
,"returned":[38,1,40,1,42,3,44,2,77,1,87,1,104,1,123,2,127,1,138,2,146,1,183,1,190,2,228,2,240,1,249,1,256,1]
,"32-year-old":[38,1]
,"males":[38,1]
,"=cache.createquery":[38,1,41,4,42,3]
,".includevalues":[38,2]
,".addcriteria":[38,2,41,4]
,"(age.eq":[38,1,41,2]
,"(32)":[38,1]
,".and":[38,1]
,"(gender.eq":[38,1,41,1]
,"male":[38,1,41,1]
,"\u0022)))":[38,1]
,".execute":[38,2,41,2]
,"!>>":[38,1,80,1,81,1,82,1,83,1,111,1,112,1,113,1,114,1,123,1,124,1]
,"formulate":[38,1]
,"\u002F\u002Fbigmemory":[38,1]
,"attribute":[38,1,39,2,40,25,41,5,42,7,59,1,74,3,123,2,127,1,128,3,130,1,134,2,139,2,144,4,148,2,174,2,206,3,261,1]
,"<integer>":[38,1,41,1]
,"age":[38,2,39,2,40,10,41,4,42,1]
,"=cache.getsearchattribute":[38,1,41,3,42,2]
,"person.createquery":[38,1]
,"(age.gt":[38,1]
,"(30))":[38,1]
,"prepared":[38,1,61,5]
,"index":[38,1,40,2,43,1,44,4,62,1,128,1,170,1,262,1]
,"extracting":[38,1]
,"themselves":[38,1,62,1,63,1,76,1,82,1,108,1,224,1]
,"<searchable\u002F>":[39,2]
,"tag":[39,1]
,"definition":[39,1,240,1]
,"<cache":[39,4,40,1,43,1,59,1,64,1,68,1,73,5,81,1,90,1,95,1,107,1,124,1,132,15,139,3,140,1,177,1,178,3,180,1,193,1,195,4,201,1,208,2,220,1,221,1,222,1,226,1,229,2,240,2,242,1,243,2,244,3,249,1,266,1,278,3,283,3,295,1]
,"name=\u0022":[39,6,40,7,43,1,59,1,64,1,73,5,124,1,132,20,139,3,140,1,177,1,178,3,180,1,193,1,195,4,201,1,208,2,220,1,221,1,222,1,226,1,229,2,238,4,239,5,240,2,242,1,243,2,244,3,248,1,252,2,266,1,276,15,278,9,283,3,295,1]
,"cache2":[39,1,40,1,132,4,139,1]
,"maxbyteslocalheap=\u0022":[39,1,132,9]
,"16m":[39,1]
,"eternal=\u0022":[39,2,40,1,59,1,122,1,124,1,140,1,177,1,178,1,180,1,193,1,195,5,201,1,208,2,220,1,221,1,222,1,226,1,229,2,242,1,243,2,244,3,266,2,278,4,283,1,295,1]
,"maxbyteslocaloffheap=\u0022":[39,2,132,7,139,1,263,1]
,"256m":[39,1,263,1]
,"<persistence":[39,2,40,1,122,1,145,2,178,1,195,5,242,1,243,2,244,3,266,1,278,1,283,1]
,"strategy=\u0022":[39,2,40,1,122,1,145,2,146,5,178,1,195,5,242,1,243,2,244,3,266,1,278,1,283,1]
,"localrestartable":[39,2,128,1,144,2,146,2,170,1,306,1]
,"\u0022\u002F>":[39,4,40,6,43,1,63,2,68,1,73,4,81,1,86,1,90,1,95,1,107,1,122,2,124,1,128,1,134,1,145,3,178,3,195,6,201,4,206,3,207,1,208,2,221,1,222,1,226,1,229,4,242,1,243,2,244,3,249,1,266,3,276,17,278,4,283,3,295,3,310,1]
,"<\u002Fcache>":[39,4,40,5,43,1,59,1,64,1,73,5,81,1,90,1,95,1,107,1,124,1,132,15,139,3,140,1,145,2,195,4,201,1,208,2,220,1,221,1,222,1,226,1,229,2,278,3,295,1]
,"scan":[39,1,41,1]
,"respectively":[39,1]
,"disable":[39,1,123,1,146,1,148,1,303,2]
,"cachename":[39,2,43,1,73,2,87,2,104,1,184,2,190,2,195,3,202,1,227,3,276,2,295,1]
,"<searchable":[39,2,43,1]
,"keys=\u0022":[39,1,43,1]
,"values=\u0022":[39,1,43,1]
,"<\u002Fsearchable>":[39,3,40,6,43,1]
,"mix":[39,1]
,"think":[39,1,55,1,64,1,86,1,138,1,303,1]
,"initialized":[39,1,40,1,76,1,82,1,91,2,108,1,182,1,306,1]
,"indicate":[39,1,91,1,166,2,227,3]
,"allowdynamicindexing":[39,1]
,"enable":[39,1,57,1,70,1,74,1,80,1,122,1,127,1,134,1,160,1,166,1,174,1,177,2,178,1,193,2,211,1,235,1,240,3,262,2,263,1,283,1,294,1,303,1,304,1]
,"extractor":[39,2,40,18]
,"defining":[39,2,40,1]
,"allowdynamicindexing=\u0022":[39,1]
,"extract":[39,1,40,2,82,1]
,"extractors":[39,1]
,"explained":[39,1,122,1,220,1]
,"detail":[39,1,143,1]
,"cache3":[39,1,132,4]
,"maxentrieslocalheap=\u0022":[39,1,40,1,59,1,122,1,124,1,132,1,139,1,177,1,178,4,180,1,193,1,195,5,201,1,208,2,220,1,221,1,222,1,226,1,229,2,242,1,243,2,244,3,266,2,278,4,283,4,295,1]
,"10000":[39,1,122,1,139,1,177,1,178,4,180,1,193,1,195,6,242,1,266,2,278,1,283,4]
,"10g":[39,1,132,5]
,"<searchable>":[39,1,40,6]
,"<searchattribute":[39,2,40,6]
,"class=\u0022":[39,1,40,2,63,2,73,3,81,1,86,1,90,1,95,1,102,1,107,1,124,1,178,1,201,4,206,3,207,1,208,2,217,1,218,1,220,1,221,2,222,2,226,3,229,5,243,1,252,2,266,1,276,6,278,1,283,1,295,4,310,1]
,"net.sf.ehcache.search":[39,1]
,"testattributeextractor":[39,1]
,"gender":[39,1,40,4,41,3,134,2]
,"expression=\u0022":[39,1,40,2]
,"value.getgender":[39,1]
,"cachemanagerconfig":[39,1,145,1]
,"cacheconfig":[39,1,145,1]
,"mycache":[39,3,139,1,140,4,145,1,306,1]
,"(true)":[39,1,40,2,73,2,124,2,208,2,220,2,244,2]
,"cacheconfig.addsearchable":[39,1]
,"(searchable)":[39,1,40,1]
,"searchable.addsearchattribute":[39,4]
,"searchattribute":[39,4]
,".name":[39,4,145,1]
,"\u002F\u002Fuse":[39,1]
,"expression":[39,1,40,5,41,3,135,1]
,"accessing":[39,1,44,1,176,1,184,1,276,1]
,"first_name":[39,1,40,1,262,1]
,".expression":[39,2]
,"value.getfirstname":[39,1]
,"last_name":[39,1,262,1]
,"value.getlastname":[39,1]
,"zip_code":[39,1]
,".classname":[39,1,73,1]
,"net.sf.ehcache.search.testattributeextractor":[39,1,40,2]
,"(cachemanagerconfig)":[39,1,145,1]
,"cachemanager.addcache":[39,1,303,1]
,"(cacheconfig))":[39,1]
,"=cachemanager.getehcache":[39,1,62,1,145,1]
,"\u002F\u002Fnow":[39,1,40,2]
,"learn":[39,1]
,"net.sf.ehcache.search*packages":[39,1]
,"http:\u002F\u002Fwww.ehcache.org\u002Fapidocs\u002F2.10.1\u002F":[39,1,42,1,43,1,75,1,121,1,122,1]
,"define":[40,1,190,1,309,1]
,"during":[40,1,60,1,61,1,67,1,76,1,82,2,91,1,108,1,131,1,141,1,143,1,144,1,145,1,153,1,179,1,207,1,231,1,249,2,275,1,307,1]
,"attributeextractors":[40,1]
,"boolean":[40,1,41,3,50,4,160,4,254,1,261,2]
,"character":[40,1]
,"double":[40,4,197,1]
,"float":[40,2]
,"integer":[40,3,130,1,269,1]
,"java.util.date":[40,1]
,"java.sql.date":[40,1]
,"enum":[40,2]
,"correspond":[40,1]
,"attributetype":[40,1]
,"http:\u002F\u002Fehcache.org\u002Fapidocs\u002F2.10.1\u002Fnet\u002Fsf\u002Fehcache\u002Fsearch\u002Fattribute\u002Fattributetype.html":[40,1]
,"matching":[40,1,195,1]
,"resolves":[40,1]
,"java.lang.double":[40,1]
,"interpreted":[40,1,227,1,262,1]
,"primitive":[40,1]
,"type=\u0022":[40,1,252,2]
,"wrong":[40,1,61,1]
,"attributeextractorexception":[40,1]
,"<<ffc-in":[40,1]
,"statement":[40,1,42,1,55,1,64,1,101,1,122,1,171,2,235,1]
,"detected":[40,1,63,1,68,1,197,1,303,1]
,"validated":[40,1]
,"saved":[40,1,146,1]
,"established":[40,1]
,"changed":[40,2,82,1,87,1,108,1,121,1,128,2,182,2]
,"initially":[40,2]
,"well-known":[40,5,41,1]
,"referenced":[40,2,41,2,94,1]
,"predefined":[40,2,42,1,225,1]
,"and\u002For":[40,1,43,1,124,1,144,1,262,1]
,"convenience":[40,1,41,1,165,1]
,"constant":[40,2,262,1]
,"query.key":[40,2]
,"greater":[40,1,41,2,74,1,121,1,153,1,230,1]
,"readability":[40,1]
,"statically":[40,1]
,"import":[40,1,134,1,184,3]
,"query.value":[40,1]
,"reflection":[40,1]
,"reflectionattributeextractor":[40,2]
,"built-in":[40,1,43,1,100,1,104,1,112,1,134,1,158,1,189,1,206,1,207,1,262,1]
,"javabean":[40,2]
,"conventions":[40,1]
,"understands":[40,1]
,"property":[40,1,63,1,68,1,70,2,128,2,134,2,138,1,148,1,150,2,170,1,182,1,211,1,216,1,222,1,226,1,227,8,238,1,239,5,241,1,249,1,261,1,263,2,294,2,303,1]
,"declared":[40,1,41,1,134,1,259,1,267,1]
,"<cache>":[40,4,124,1,134,2,138,1,145,2,303,1]
,"method\u002Fvalue":[40,1]
,"dotted":[40,1]
,"chains":[40,1]
,"chain":[40,3,80,2,81,2,177,1,190,3,193,1,195,1]
,"starting":[40,1,122,1,272,2]
,"calls":[40,2,43,1,61,1,87,2,91,2,100,1,104,1,170,1,183,5,190,1,197,1,255,1,256,5,262,2,275,1,303,1]
,"field":[40,4,134,3,243,1]
,"freely":[40,1]
,"value.person.getage":[40,1]
,"element.tostring":[40,1]
,"portions":[40,1]
,"case-sensitive":[40,1]
,"custom":[40,3,47,1,68,1,128,1,229,1,262,1,306,1]
,"implementing":[40,1,80,1,82,1,87,1,91,1,96,1,108,1]
,"attributeextractor":[40,1]
,"interface\u0027s":[40,1]
,"attributefor":[40,1]
,"(\u2002)":[40,3,41,1,42,8]
,"previously":[40,3,75,1,143,1]
,"person":[40,4]
,"containing":[40,2,134,1]
,"none":[40,1,50,1,128,1,144,1,145,2,146,1,178,1,244,1,266,1,283,1,297,2,303,1]
,"passed":[40,1,42,1,50,2,70,1,76,1,78,1,80,1,82,2,102,1,174,1,216,1,226,1,229,1,262,2]
,"employee":[40,1]
,"returnval":[40,1]
,"=employee.getdept":[40,1]
,"pass":[40,1,204,1,275,1]
,"properties":[40,2,71,1,73,1,82,6,86,2,87,2,90,2,91,2,96,2,102,2,106,1,108,3,128,1,149,1,150,1,206,2,207,3,208,3,220,2,226,1,227,2,229,2,261,1,262,1]
,"properties=\u0022":[40,1,63,2,73,2,81,1,86,1,90,1,95,1,102,1,107,1,178,1,201,1,206,3,207,1,208,1,217,1,218,1,220,1,221,2,222,1,226,3,229,5,266,1,278,1,283,1,295,1,310,1]
,"foo=this":[40,1]
,"bar=that":[40,1]
,"etc=12":[40,1]
,"java.util.properties":[40,1]
,"dynamicattributesextractor":[40,7]
,"allowing":[40,1,141,1,179,1]
,"call":[40,2,42,1,45,1,64,1,68,1,82,1,87,3,91,1,96,1,100,1,104,1,106,1,108,1,112,4,127,4,168,1,170,3,182,1,252,1,254,1,261,1,262,2,301,2,303,4,310,1]
,"point":[40,1,43,1,62,1,78,1,127,1,134,1,160,1,288,1]
,"insertion":[40,1]
,"respective":[40,1]
,"every":[40,1,60,1,130,1,131,1,132,1,153,1,180,1,182,2]
,"ehcache.put":[40,1]
,"replace":[40,1,104,1]
,"invocation":[40,1]
,"register":[40,2,63,1,68,1,73,1,83,1,85,1,87,1,89,1,91,1,156,1,160,5,161,1,168,2,170,1,182,1]
,"config":[40,1,123,1,124,1,148,1,239,3,247,1,260,1,262,2,263,1,275,1,288,1,301,1,309,3]
,"config.setname":[40,1]
,"cachecfg":[40,1]
,"personcache":[40,2]
,"cachecfg.seteternal":[40,1]
,"cachecfg.terracotta":[40,1]
,"terracottaconfiguration":[40,1]
,".clustered":[40,1]
,"(true))":[40,1]
,".allowdynamicindexing":[40,1]
,"cachecfg.addsearchable":[40,1]
,"config.addcache":[40,1]
,"(cachecfg)":[40,1]
,"(config)":[40,1,124,1]
,"=cm.getcache":[40,1]
,"attrnames":[40,1]
,"={\u0022":[40,1]
,"\u002F\u002Fthe":[40,1]
,"known":[40,1,91,2,99,1,104,1,206,1,218,1,271,1,300,1]
,"fields":[40,2,91,2,134,2]
,"cache.registerdynamicattributesextractor":[40,1]
,"{map":[40,2,226,1]
,"<string":[40,3,226,2]
,"object>":[40,3,226,2]
,"attributesfor":[40,1]
,"attrs":[40,2]
,"hashmap":[40,1]
,"=(person)":[40,1]
,"element.getobjectvalue":[40,1]
,"\u002F\u002Ffor":[40,1]
,"fname":[40,1]
,"=value.getname":[40,1]
,"==null":[40,1]
,"value.getname":[40,1]
,"split":[40,1,74,1]
,"(\u0022\u005C\u005Cs":[40,1]
,"[0]":[40,2]
,"attrs.put":[40,2]
,"(attrnames":[40,2]
,"fname)":[40,1]
,"[1]":[40,1]
,"value.getage":[40,1]
,"john":[40,1]
,"doe":[40,1]
,"person.gender.male)))":[40,1]
,"newly":[40,1,60,1,306,1]
,"indexed":[40,2,43,1]
,"extracts":[40,1]
,"rules":[40,1,42,2,65,1,104,1,289,1]
,"indexable":[40,1]
,"registered":[40,2,60,1,61,1,80,1,96,3,160,3,161,1,170,2]
,"(this":[40,1]
,"prevent":[40,1,49,1,71,1,123,1,146,1,176,1,180,1,181,1]
,"potential":[40,1,66,1,67,1,70,1,85,1,86,1,87,1,89,1,90,1,91,1,241,1]
,"races":[40,1]
,"registration":[40,1,83,1,160,1]
,"incomplete":[40,1]
,"leading":[40,1,43,2]
,"erroneous":[40,1]
,"results.)":[40,1]
,"replaces":[40,1,156,1,248,1]
,"queried":[40,1]
,"regardless":[40,1,123,1,138,1]
,"initial":[40,2,117,3,135,1,215,1,216,1,226,2,229,1,237,1,262,1]
,"precedence":[40,1,139,1]
,"fluent":[41,1]
,"object-oriented":[41,1]
,"principles":[41,1]
,"domain-specific":[41,1]
,"(dsl)":[41,1]
,"familiar":[41,1,144,1]
,"programmers":[41,1]
,"(35))":[41,2]
,".includekeys":[41,2]
,".end":[41,2]
,"=query.execute":[41,1]
,"(query.key.eq":[41,1]
,"(query.value.lt":[41,1]
,"(10))":[41,1]
,"<string>":[41,2,42,2]
,"expressions":[41,5]
,"built":[41,1,68,1,104,1,141,1,179,1]
,"operators":[41,6]
,"<and>":[41,2]
,"<or>":[41,1]
,"comparison":[41,10,58,1,146,1]
,"<ge>":[41,1]
,"(>=)":[41,1]
,"<between>":[41,1]
,"<like>":[41,1]
,"addcriteria":[41,1,42,1]
,"clause":[41,2,42,12]
,"further":[41,1,73,1,170,2,248,1,255,1,281,1]
,"clauses":[41,1]
,"(age.le":[41,1]
,"(65))":[41,1]
,".add":[41,1]
,"criterion":[41,1]
,"operator":[41,13]
,"nest":[41,1]
,"within":[41,1,42,1,43,1,57,1,62,1,64,1,73,1,106,1,108,1,116,1,137,1,138,2,206,1,252,1,262,1,266,1,294,1]
,"=35":[41,1]
,"=female":[41,1]
,"query.addcriteria":[41,1]
,"(35)":[41,1]
,"gender.eq":[41,1]
,"(gender.female))":[41,1]
,"compound":[41,1,249,1]
,"nesting":[41,1]
,"complete":[41,1,42,1,54,1,62,1,64,1,75,1,190,1,210,2,221,2,310,1]
,"http:\u002F\u002Fwww.ehcache.org\u002Fapidocs\u002F2.10.1\u002Fnet\u002Fsf\u002Fehcache\u002Fsearch\u002Fexpression\u002Fpackage-summary.html":[41,1]
,"age.lt":[41,1]
,"(10)":[41,2]
,"shorthand":[41,2]
,"saying":[41,1]
,"lessthan":[41,2,43,1]
,"description":[41,1,130,1,176,1,227,1,261,1]
,"meaning":[41,8,43,1,86,1,90,1,122,1,207,1,229,1]
,"equalto":[41,1]
,"equals":[41,2,58,1]
,"condition":[41,2,66,1]
,"greaterthan":[41,1,43,1]
,"greaterthanorequal":[41,1,43,1]
,"equal":[41,2,131,1,183,2,256,2,297,1,306,1,307,1]
,"incollection":[41,1]
,"argument":[41,1,54,1,82,7,174,4,229,2,254,1,255,1,261,1]
,"lessthanorequal":[41,1,43,1]
,"ilike":[41,3,43,1]
,"regular":[41,1]
,"matcher":[41,1]
,"\u0022*\u0022":[41,1]
,"may":[41,1,55,1,70,2,76,2,82,1,87,1,91,3,94,1,96,2,108,1,113,1,122,1,132,1,134,3,137,1,138,2,140,1,144,1,180,3,181,1,190,2,211,3,226,1,237,1,249,1,259,1,279,1]
,"placing":[41,1]
,"wildcard":[41,1,43,3]
,"front":[41,1,181,2,267,2]
,"insensitive":[41,1]
,"isnull":[41,2,45,2]
,"notnull":[41,2,45,2]
,"notequalto":[41,1]
,"strings":[41,1,190,1,227,1]
,"case-insensitive":[41,1]
,"executed":[41,1,67,1,76,1,78,1,80,1,81,1,85,1,87,1,89,1,91,1,177,1,180,1,193,1,195,1,249,1]
,"modified":[41,1,123,1,141,1,179,1]
,"re-executed":[41,1]
,"end":[41,1,61,1,171,1,174,1,261,1]
,"organizing":[42,1]
,"350":[42,2]
,"included":[42,4,43,1,50,2,74,1,77,1,122,1,141,1,148,1,176,1,177,1,179,1,181,1,192,1,249,1,289,1]
,"aggregators":[42,7,44,3]
,"present":[42,1,74,1,76,1,181,1,248,1]
,"-when":[42,3]
,"includekeys":[42,2,43,3]
,"includevalues":[42,2,43,4]
,"(s)":[42,1,62,1,182,1]
,"includeattribute":[42,3,43,1]
,"getattribute":[42,1]
,"(attribute":[42,1]
,"<t>":[42,1]
,"attribute)":[42,1]
,"aggregator":[42,2,43,2]
,"-aggregator":[42,1]
,"summaries":[42,1]
,"computed":[42,1]
,"result.getaggregatorresults":[42,1]
,"order":[42,5,63,1,70,5,80,1,81,1,89,1,91,1,112,1,118,1,127,1,128,1,177,2,193,2,195,2,235,1,244,1,261,1,303,1]
,"query.includeaggregator":[42,2]
,"(\u005C<attribute\u005C>":[42,1]
,".\u005C<aggregator\u005C>)":[42,1]
,"sum":[42,1,44,1,138,1]
,"(age.sum":[42,1]
,"ordering":[42,3,47,1,70,3]
,"ordered":[42,1,43,1]
,"ascending":[42,2]
,"descending":[42,1]
,"addorderby":[42,1]
,"direction":[42,1]
,"ages":[42,1]
,"query.addorderby":[42,1]
,"(age":[42,1]
,"direction.ascending)":[42,1]
,"grouping":[42,3]
,"grouped":[42,4]
,"similarly":[42,1]
,"sql":[42,1,280,1]
,"group":[42,5,206,6]
,"groupby":[42,11]
,"feature":[42,1,143,1,176,1,182,2,190,1]
,"according":[42,1,102,1,143,1,163,1,197,1]
,"addgroupby":[42,1]
,"department":[42,1]
,"location":[42,2,63,3,210,1,239,1,263,1]
,"dept":[42,3]
,"loc":[42,2]
,"q.includeattribute":[42,2]
,"(dept)":[42,2]
,"(loc)":[42,2]
,"q.addcriteria":[42,1]
,"(cache.getsearchattribute":[42,1]
,"salary":[42,1]
,".gt":[42,1]
,"(100000))":[42,1]
,"q.includeaggregator":[42,1]
,"(aggregators.count":[42,1]
,"q.addgroupby":[42,1]
,"(dept":[42,1]
,"loc)":[42,1]
,"groups":[42,2]
,"aggregate":[42,1]
,"functions":[42,1]
,"=singleresult.getattribute":[42,2]
,"step":[42,1,177,4,193,4,226,1,256,3]
,"(\u00A0)":[42,1]
,"semantics":[42,1,240,2]
,"least":[42,1,111,1,112,7,114,1,127,3,140,1,201,1,219,1,232,1,263,2,295,1,297,1,300,1]
,"aggregation":[42,1]
,"function":[42,1,43,1,135,2,181,1]
,"typically":[42,1,60,1,182,1,235,1,310,1]
,"anyway":[42,1]
,"processing":[42,1,64,1,87,1,91,1,141,1,179,1,181,1,190,1]
,"easier":[42,1,176,1,184,1,276,2]
,"prior":[42,1,122,1,235,2,248,2,268,1,298,1]
,"orderby":[42,1]
,"listed":[42,1,96,1,183,1,256,1]
,"limiting":[42,1,70,2,134,1]
,"unlimited":[42,1,139,1,230,1,267,1]
,"query.includekeys":[42,2]
,"query.execute":[42,2]
,"outofmemoryerror":[42,1]
,"maxresults":[42,2,43,3]
,"query.maxresults":[42,1,43,1]
,"(100)":[42,1]
,"discard":[42,1,112,1]
,"free":[42,1,91,1,128,1,137,2,163,1]
,"topics":[42,1,139,1,231,1]
,"relate":[42,1]
,"pagination":[42,1,43,1]
,"interrogating":[42,1]
,"interrogation":[42,1,83,1]
,"haskeys":[42,1]
,"hasvalues":[42,1]
,"hasattributes":[42,1]
,"hasaggregators":[42,1]
,"construct":[43,1]
,"logic":[43,1,45,1,47,2,301,1]
,"careful":[43,1,78,1,91,2,181,1]
,"burden":[43,1]
,"unnecessary":[43,1,128,1,181,1]
,"result.getvalue":[43,3]
,"consider":[43,4,131,1,179,1,181,1,190,1,230,1,275,1]
,"sufficient":[43,1,174,1]
,"demand":[43,1,71,1,100,1]
,"run":[43,1,62,1,74,1,121,1,138,1,153,1,170,1,174,1,183,1,249,1,256,1,259,1,262,2,271,1,288,2,289,1,298,2,300,1,307,1]
,"individual":[43,1,64,1,131,5,132,1,138,1,139,1]
,"lazy":[43,1,71,1]
,"deserialized":[43,1]
,"result.getkey":[43,1]
,"carefully":[43,1]
,"constructing":[43,1,100,1]
,"<<ffc-find":[43,1]
,"leave":[43,1,44,1,91,1,103,1,122,1,171,1,174,1,208,1,300,1]
,"ehcache>":[43,1]
,"turn":[43,1,68,1,71,1,128,1,132,1,211,1,239,2,249,1,262,1,297,1,301,1]
,"quickly":[43,1,143,1,230,1]
,"receiving":[43,1,206,1,307,1]
,"(int":[43,1,64,2]
,"number_of_results)":[43,1]
,"statistic":[43,1]
,"count":[43,1,138,1]
,"net.sf.ehcache.search.aggregator":[43,1]
,"fuzzy":[43,1]
,"(wildcard)":[43,1]
,"trailing":[43,2]
,"321*\u0022":[43,1]
,"\u0022*123":[43,1]
,"<searchattribute>":[43,1]
,"reversed":[43,1]
,"(startdate)":[43,1]
,"(enddate)":[43,1]
,"(between":[43,1]
,"(startdate":[43,1]
,"enddate))":[43,1]
,"appears":[43,1,44,1,61,1,122,1,226,1,232,1,265,1,272,1,300,1]
,"2.8\u002F4.1":[43,1,44,1]
,"dates":[43,1]
,"integers":[43,1]
,"save":[43,1,182,2]
,"conversion":[43,1,122,1,204,1]
,"concurrency":[44,3,240,2]
,"unlike":[44,1]
,"selectable":[44,1]
,"transactions":[44,2,47,2,57,8,59,1,60,5,61,1,62,2,64,9,65,2,67,1,68,1,70,3,209,2,249,1]
,"eventually":[44,1,66,1,70,1,86,1,128,1,139,1,144,1,182,1,190,1]
,"synchronously":[44,1,81,1,144,1]
,"lags":[44,1]
,"behind":[44,1,70,3,72,1,74,1,190,1,267,1]
,"performs":[44,1,64,1,197,1]
,"reflect":[44,1,306,1]
,"applied":[44,1,53,1,64,1,122,1,182,1,306,1]
,"unexpected":[44,1,121,1]
,"select":[44,1,60,1,113,1,244,1]
,"disagree":[44,1]
,"calculation":[44,3]
,"redoing":[44,1]
,"yourself":[44,1]
,"re-accessing":[44,1]
,"repeating":[44,1]
,"reindexed":[44,1]
,"supplied":[44,1,229,1]
,"stale":[44,1,54,2,57,1,100,1,249,1]
,"non-null":[44,1,180,1]
,"tell":[44,1,72,1,176,1,211,1,262,1]
,"last":[44,1,76,1,78,3,122,1,127,1,144,3,170,2,262,1]
,"recommendations":[44,1]
,"executions":[44,1]
,"guards":[44,1,170,1]
,"working":[45,1,60,1,64,1,70,1,128,1,143,1,144,1,272,1,289,1,304,1]
,"nulls":[45,1,180,1]
,"deliberate":[45,1]
,"presence":[45,1,272,1]
,"myquery.addcriteria":[45,3]
,"(cache.getattribute":[45,3]
,"middle_name":[45,5]
,".isnull":[45,2]
,"absence":[45,1]
,".notnull":[45,1]
,"equivalent":[45,2,143,1,239,1]
,".not":[45,1]
,"alternatively":[45,1,134,1,260,1]
,"explicit":[46,1,47,3,48,2,64,1,128,1,131,1,132,1,180,1]
,"locks":[47,1,49,1,61,1,65,1,66,2,144,2,249,1,297,1]
,"guaranteed":[47,1,70,2,71,1,89,1,91,1,237,1]
,"caution":[47,1,104,1]
,"deadlocks":[47,1,303,3]
,"123":[48,2]
,"foo":[48,2]
,"val":[48,1]
,"cache.acquirewritelockonkey":[48,2]
,"val))":[48,1]
,"{cache.releasewritelockonkey":[48,2]
,".sometime":[48,1]
,"{object":[48,1]
,"cachedval":[48,1]
,".getvalue":[48,1]
,"cachedval.setsomething":[48,1]
,"abc":[48,1]
,"cachedval))":[48,1]
,"lock":[49,9,50,17,55,1,91,1]
,"acquiring":[49,1]
,"outstanding":[49,2,70,1]
,"queue":[49,2,62,1,70,5,74,8,76,2,77,4,141,2,179,2,182,9,200,2,224,3,226,6,227,1,228,1,229,9,230,5,231,3,307,1]
,"released":[49,1,248,1,300,1,303,1]
,"problems":[49,1,53,1,153,1,166,1,173,1,197,1,206,1,280,1]
,"block":[49,1,57,1,64,1,65,1,66,1,87,2,91,3,100,3,134,1,181,1,190,2,197,1]
,"acquire":[49,2]
,"akin":[49,1]
,"read_committed":[49,1,57,1,64,1]
,"achieved":[49,1,70,2,73,1,104,1,139,1]
,"\u002F***acquires":[50,2]
,"**@param":[50,8,76,4,82,4,83,2,87,2,91,4,96,2,104,1,113,3,117,1,160,1]
,"-the":[50,6,74,7,141,1,179,1,190,2,207,3,226,10,229,10]
,"retrieves":[50,6,275,1]
,"protect":[50,6,144,1]
,"via":[50,6,104,1,121,2,158,1,238,1,247,1,258,1,276,1]
,"*locking":[50,6]
,"acquirereadlockonkey":[50,1]
,"{this.acquirelockonkey":[50,2]
,"locktype.read)":[50,2]
,"acquirewritelockonkey":[50,1]
,"locktype.write)":[50,2]
,"\u002F***try":[50,2]
,"timeout":[50,4,54,1,64,3,65,1,190,2,240,1,244,1]
,"millis":[50,2]
,"*then":[50,2]
,"telling":[50,2]
,"didn\u0027t":[50,2,294,1]
,"*@param":[50,2,76,3,82,3,87,1,91,4,96,2,108,1,113,2,160,5]
,"-millis":[50,2]
,"giveup":[50,2]
,"*@return":[50,4,82,5,87,1,91,2,96,1,113,2,117,3]
,"awarded":[50,2]
,"*@throws":[50,2,75,3,76,1,82,3,91,1,104,1,108,1]
,"interruptedexception":[50,4]
,"tryreadlockonkey":[50,1]
,"timeout)":[50,4]
,"{sync":[50,2]
,"=getlockforkey":[50,2]
,"s.trylock":[50,2]
,"(locktype.read":[50,1]
,"trywritelockonkey":[50,1]
,"(locktype.write":[50,1]
,"\u002F***release":[50,2]
,"releasereadlockonkey":[50,1]
,"{releaselockonkey":[50,2]
,"releasewritelockonkey":[50,1]
,"\u002F***returns":[50,2,243,1]
,"current":[50,4,51,1,64,3,90,1,91,1,106,1,122,1,128,1,202,1,207,1,262,1,295,1]
,"*\u002Fboolean":[50,2,113,1]
,"isreadlockedbycurrentthread":[50,1]
,"iswritelockedbycurrentthread":[50,2]
,"comment":[50,3,128,1]
,"support":[50,1,51,1,56,1,57,3,60,2,61,1,68,1,76,2,82,1,91,1,141,1,174,1,177,1,179,1,190,1,193,1,226,1,230,1,239,1,248,4,249,2,254,1,259,1,262,2,291,2,294,2,301,1]
,"querying":[50,1,180,1]
,"thread\u0027s":[50,1]
,".however":[50,1]
,"bigmem":[50,1,51,2,61,1,143,1]
,"docs":[50,1,80,1,81,1,82,1,83,1,111,1,112,1,113,1,114,1]
,"neither":[50,1,104,1]
,"omit":[50,1,144,1]
,"discrepancy":[50,1,146,1]
,"release.>>":[50,1,91,1]
,"topologies":[51,2,298,1]
,"<<ffc-currently":[51,1]
,"noted":[51,1,134,1,143,1]
,"blocking":[52,1,53,1,54,2,100,1,106,1,211,2]
,"self":[52,1,106,1]
,"populating":[52,1,106,1]
,"self-populating":[53,1,100,2]
,"net.sf.ehcache.constructs":[53,1]
,"everyday":[53,1]
,"blockingcache":[53,1,54,3,55,2,100,3,103,2,104,7,181,2,190,1]
,"busy":[54,2]
,"site":[54,1,181,1,183,2,211,1]
,"users":[54,3,72,1,78,1,122,1,165,1,181,2,190,1,235,1,248,1]
,"evenly":[54,1]
,"tend":[54,1]
,"gravitate":[54,1]
,"minutes":[54,2,70,1,140,1,141,1,179,1]
,"collections":[54,1,70,1,240,1,243,3]
,"calculate":[54,1]
,"asks":[54,1]
,"lot":[54,1,174,1,204,1]
,"contending":[54,1]
,"ten":[54,2,113,1,141,1,153,1,300,1]
,"upstream":[54,1,190,3]
,"jsp":[54,1]
,"velocity":[54,1]
,"interactions":[54,1]
,"service":[54,1,160,1,178,1,226,1,229,1,235,1,284,1]
,"layer":[54,1,262,1,274,1,275,2]
,"doing":[54,1,55,1,76,1,82,1,85,1,86,1,87,1,89,1,90,1,91,1,104,1,108,1,131,1,190,1,241,1,262,1,298,1,310,1]
,"enter":[54,1,55,1,262,1]
,"requesting":[54,1,181,1,190,1]
,"wait":[54,2,74,3,190,5,207,1,229,1,310,1]
,"obtain":[54,1,97,1]
,"indefinitely":[54,1,137,1,190,2,197,1]
,"timeoutmillis":[54,1,229,1]
,"complicated":[55,1]
,"thinking":[55,1]
,"synonymous":[55,1]
,"pull-through":[55,1,80,1]
,"populate":[55,1,262,2]
,"inspired":[55,1]
,"getwithloader":[55,1,80,1]
,"getallwithloader":[55,1,80,1]
,"cacheloader":[55,1,71,2,80,7,81,1,82,15,83,3,229,1,267,1]
,"<<ffc-i":[55,1,86,1]
,"sure":[55,1,68,1,71,1,112,2,174,1,180,1,266,1,272,1,289,1,301,1]
,"supposed":[55,1,122,1]
,"clearly":[55,1,70,1]
,"confusing":[55,1,72,1,144,1]
,"2.0":[57,1,123,1,235,2,248,5,287,1,297,1,306,1]
,"2.3.x":[57,1]
,"lower":[57,1,127,1,133,1,137,3,230,1,235,1,263,1,306,1]
,"releases":[57,1]
,"2.4":[57,1,309,1]
,"global":[57,1,60,4]
,"xa_strict":[57,2,59,3,60,1,61,2,65,4,68,1]
,"nothing":[57,1,131,1,153,1,174,1,180,1,289,1,304,1]
,"happen":[57,1,144,1,171,1,174,1,230,1,249,1]
,"transactionexception":[57,1,64,2]
,"visibility":[57,1,121,1]
,"offered":[57,1]
,"xaresource":[57,1,60,2,61,2,67,1,68,1,70,1]
,"two-phase":[57,2,60,1,249,3]
,"specifically":[57,1,60,1]
,"mutating":[57,2,61,1]
,"transactional":[57,3,58,3,59,2,65,1,66,2,67,1,68,3,249,3]
,"putwithwriter":[57,1,75,1]
,"removewithwriter":[57,1]
,"removeall":[57,1,174,1,255,1]
,"old":[57,1,209,1,248,3]
,"rewrite":[57,1,70,1,72,1,101,1]
,"parallel.>>":[57,1]
,"atomically":[57,2]
,"committed":[57,1,61,2,70,1,197,1,240,1]
,"rolled":[57,1,61,2,62,1,67,1]
,"straightforward":[57,1,141,1,179,1]
,"calculated":[57,1]
,"dbms":[57,1]
,"jms":[57,1,182,1,200,2,223,1,224,3,225,2,226,4,227,4,228,1,229,3,232,1,301,1]
,"jta":[57,1,60,2,61,4,62,1,70,1]
,"participating":[57,2,298,1]
,"crash":[57,2,61,3,143,2,144,3]
,"afford":[57,1,179,1]
,"brief":[57,1]
,"period":[57,1,64,1,177,2,182,1,192,2]
,"similar":[57,1,80,1,141,1,179,1,242,1,263,1]
,"strict":[57,1,68,1,301,1]
,"disaster":[57,1]
,"recovery":[57,1,61,5,143,1,144,1]
,"guarantees":[57,1,65,1,70,1]
,"extra":[57,1,99,1,144,1,248,1,298,1,306,1]
,"safety":[57,1,85,1,86,1,87,1,89,1,90,1,91,1]
,"decreases":[57,1]
,"java.io.serializable":[58,1]
,"\u002Fcopy-on-write":[58,1]
,"override":[58,1,64,1,80,1,133,1,139,1,190,2,208,1,220,1,289,1,309,1]
,"hashcode":[58,1]
,"overridden":[58,1,104,2]
,"rely":[58,1]
,"elementvaluecomparator":[58,2]
,"cache-by-cache":[59,1]
,"transactionalmode":[59,1]
,"xacache":[59,1,62,1]
,"500":[59,1]
,"timetoidleseconds=\u0022":[59,1,122,1,124,1,140,1,177,1,178,3,180,1,193,1,195,4,201,1,208,1,220,1,221,1,222,1,226,1,229,2,242,1,266,2,278,2,283,3,295,1]
,"timetoliveseconds=\u0022":[59,1,122,1,124,1,140,1,177,1,178,1,180,1,193,1,195,5,201,1,208,1,220,1,221,1,222,1,226,1,229,2,242,1,243,2,244,2,266,2,278,2,283,1,295,1]
,"600":[59,1,177,1,180,1,193,1,242,1,243,2,266,1]
,"diskexpirythreadintervalseconds=\u0022":[59,1,122,1]
,"transactionalmode=\u0022":[59,1,64,1,65,1]
,"<<ffc-there":[59,1]
,"else":[59,1,180,2]
,"@transactional":[59,1,62,1]
,"spring-annotated":[59,1]
,"begin\u002Fcommit\u002Frollback":[59,1]
,"statements":[59,1,166,1]
,"internally":[59,1,303,1]
,"inject":[59,1,275,1]
,"chosen":[59,2,134,1,139,1]
,"spring\u0027s":[59,1,276,1]
,"platformtransactionmanager":[59,1,68,1]
,"lookup":[59,2,60,1,63,2,272,1]
,"able":[59,1,76,1,82,1,108,1,177,1,192,1]
,"detect":[59,2,303,1]
,"websphere":[59,2,68,3,232,4,301,2]
,"managers":[59,2,63,3]
,"<tx:method>":[59,1]
,"read-only=true":[59,1]
,"problematic":[59,1,170,1,249,1]
,"<<ffc-can":[60,1]
,"mean":[60,1,100,1,182,1,237,1,309,1]
,"act":[60,1,78,1,244,1]
,"{xaresouce}":[60,1]
,"participate":[60,1,67,1,75,1,76,1]
,"third":[60,1,132,1,204,1]
,"party":[60,1]
,"bitronix":[60,1,63,1]
,"enclosed":[60,1]
,"straighten":[60,1]
,"notation":[60,1,262,1]
,"intentional":[60,1,180,1]
,"probably":[60,1,67,1,113,1,271,1,275,1]
,"explain":[60,1,103,1]
,"it.>>":[60,1,294,1]
,"xatransactionstore":[60,1]
,"jtalocaltransactionstore":[60,1]
,"former":[60,1]
,"decorates":[60,2]
,"underlying":[60,1,70,6,74,2,76,8,94,1,104,2,135,1,200,2,213,1,217,1,224,1,244,2,249,1,262,1,306,1]
,"augmenting":[60,1]
,"<xaresouce>":[60,1]
,"latter":[60,1,127,1]
,"localtransactionstore-decorated":[60,1]
,"controllable":[60,1]
,"proprietary":[60,1]
,"transactioncontroller":[60,1,64,2]
,"initialization":[60,1,82,1]
,"transactionmanagerlookup":[60,1]
,"transactionmanagerlookup.register":[60,1]
,"(xaresouce)":[60,1]
,"copy-on-write":[60,1]
,"failure":[61,1,70,1,76,2,94,1,143,1,190,3]
,"specification":[61,1,197,1,262,1]
,"recoverable":[61,1]
,"persisted":[61,1,139,1,144,1,182,1]
,"onto":[61,1,141,1,179,1,301,1]
,"non-clustered":[61,1]
,"aimed":[61,1]
,"distributed-cache":[61,1]
,"today":[61,1]
,"go.>>":[61,1]
,"went":[61,1]
,"asked":[61,1]
,"recover":[61,2,135,1]
,"guarantee":[61,1,67,1,240,1]
,"differs":[61,1]
,"{xaresource}":[61,1]
,"merely":[61,1]
,"follow":[61,1,80,1,92,1,177,1,183,1,193,1,256,1,263,1,275,1]
,"flow":[61,1]
,"registering":[61,1,106,1,108,1,160,1,174,1]
,"{synchronization}":[61,1]
,"inconsistent":[61,1,70,2,71,1,76,1,146,1,209,1,275,1]
,"inconsistency":[61,1,70,2,71,1]
,"(such":[61,1,139,1]
,"databases)":[61,1]
,"remains":[61,1,140,1,249,1]
,"fully":[61,1,72,1,75,1,86,1,90,1,117,1,134,1,143,1,144,1,207,1,242,1,243,1]
,"around":[61,1,139,1,143,1,265,1,267,1,272,1,289,1,300,1]
,"responds":[61,1]
,"manager\u0027s":[61,1]
,"xids":[61,1]
,"failed":[61,1,76,3,78,3]
,"branches":[61,1]
,"showing":[62,1,303,1]
,"variety":[62,1,80,1]
,"jboss":[62,1,63,1,231,1]
,"people":[62,1]
,"ejb":[62,1,289,3,301,1]
,"container":[62,2,232,1,289,2]
,"demonstration":[62,1]
,"snippet":[62,1]
,"simpletx":[62,1]
,"usertransaction":[62,1]
,"=getusertransaction":[62,1]
,"printline":[62,2]
,"(servletresponse":[62,4]
,"{ut.begin":[62,1]
,"=servicewithintx":[62,1]
,"bye":[62,1]
,"index)":[62,1]
,"ut.commit":[62,1]
,"catch":[62,1,64,1,117,4,226,1]
,"(exception":[62,1]
,"{printline":[62,1]
,"caught":[62,1,96,1]
,"e.getclass":[62,1]
,"rolling":[62,1]
,"printstacktrace)":[62,1]
,"{printwriter":[62,1]
,"=servletresponse.getwriter":[62,1]
,"e.printstacktrace":[62,1]
,"s.flush":[62,1]
,"rollbacktransaction":[62,1]
,"(ut)":[62,1]
,"forge":[62,2]
,"readme":[62,2]
,"explains":[62,2,100,1,182,1,183,1]
,"banking":[62,1]
,"represents":[62,1]
,"real-world":[62,1]
,"<account":[62,1]
,"transfer>":[62,1]
,"messages":[62,1,141,2,166,4,174,1,179,2,200,2,204,1,207,3,208,1,213,1,220,1,228,1,249,1,304,2,307,3]
,"tries":[62,1]
,"transfers":[62,1]
,"failures":[62,1,128,1]
,"balance":[62,2]
,"summed":[62,1]
,"spring-based":[62,1]
,"jetty":[62,1,301,1]
,"(embedded)":[62,1]
,"broker":[62,1]
,"(activemq)":[62,1]
,"(embedded":[62,1]
,"derby":[62,1]
,"instances)":[62,1]
,"(transactional":[62,1]
,"ehcache)":[62,1]
,"atomikos":[62,1,63,1,68,3]
,"demarcation":[62,1]
,"aop\u0027s":[62,1]
,"annotation":[62,1,134,4,183,1,240,1,255,2,256,1]
,"mvn":[62,2]
,"clean":[62,2,76,1,82,1,146,1,297,1]
,"jetty:run":[62,2]
,"browser":[62,1,190,6,262,1,288,1]
,"http:\u002F\u002Flocalhost:9080":[62,1,288,1]
,"-dxa=no":[62,1]
,"detects":[63,1,170,1]
,"genericjndi":[63,1]
,"(e.g":[63,1,113,1,247,1,262,2]
,"glassfish":[63,2,286,1,287,4,288,2,289,7,301,1]
,"jtom":[63,1]
,"others":[63,1,74,1,206,1,208,1,213,1,220,1,267,1]
,"jndi":[63,2,68,1,226,7,229,7]
,"java:\u002Ftransactionmanager":[63,1]
,"weblogic":[63,1,68,3]
,"(since":[63,1,249,1]
,"2.4.0)":[63,1]
,"out-of-the-box":[63,1]
,"priority":[63,1,139,2]
,"net.sf.ehcache.transaction.manager.transactionmanagerlookup":[63,1]
,"defaulttransactionmanagerlookup":[63,2]
,"<transactionmanagerlookup":[63,2]
,"com.mycompany.transaction.manager.mytransactionmanagerlookupclass":[63,1]
,"propertyseparator=\u0022":[63,2,73,2,217,1,218,1,221,1,226,3,229,2]
,"jndiname":[63,1]
,"net.sf.ehcache.transaction.manager.defaulttransactionmanagerlookup":[63,1]
,"jndiname=java:appserver\u002Ftransactionmanager":[63,1]
,"single-phase":[64,1]
,"includes":[64,1,144,1,254,1]
,"phrase":[64,1]
,"manually":[64,1,68,1,78,1]
,"handle":[64,1,85,1,86,1,87,1,89,1,90,1,91,1,96,1]
,"rollback":[64,2,70,1,76,1]
,"cachemanager.gettransactioncontroller":[64,2]
,"transactioncontroller.begin":[64,2]
,"-this":[64,1]
,"marks":[64,1,249,1]
,"transactioncontroller.commit":[64,1]
,"-commits":[64,1]
,"transactioncontroller.rollback":[64,2]
,"-rolls":[64,1]
,"begin":[64,3]
,"try-catch":[64,1]
,"catches":[64,1]
,"exceptions":[64,2,78,1,94,1,96,1,196,1,197,1]
,"subclasses":[64,1,134,1]
,"general":[64,1,108,1,112,1,165,1,182,1,189,1,232,1,288,1,294,1,297,1,300,3,303,1,306,1,309,1]
,"transactioninterruptedexception":[64,1]
,"thread.interrupt":[64,1]
,"transactiontimeoutexception":[64,2]
,"elapsed":[64,1]
,"introductory":[64,2,70,2]
,"video":[64,2,70,2]
,"ludovic":[64,1]
,"orban":[64,1]
,"author":[64,1,70,1,252,3]
,"presents":[64,1,70,1,145,1]
,"samplecache":[64,1,123,2]
,"timeouts":[64,1,66,1,244,1]
,"seconds":[64,2,74,2,123,2,128,1,138,2,144,1,153,3,206,1,207,1,252,3,297,2]
,"defaulttimeout":[64,1]
,"transactioncontroller.setdefaulttransactiontimeout":[64,1]
,"defaulttransactiontimeoutseconds)":[64,1]
,"countdown":[64,1]
,"starts":[64,1,135,1,143,1,206,1,209,2,261,1,272,1]
,"jdbc":[64,1,273,1,274,3,275,1]
,"connection":[64,1,158,1,207,1,222,1,228,6,230,1,301,4]
,"transactiontimeoutseconds)":[64,1]
,"{sample":[64,1]
,"{cachemanager.gettransactioncontroller":[64,2]
,".begin":[64,1]
,"cache1.put":[64,1]
,"cache2.put":[64,1]
,"cache1.remove":[64,1]
,"(4)":[64,1]
,".commit":[64,1]
,"(cacheexception":[64,1]
,".rollback":[64,1]
,"contention":[65,1,70,1,297,1]
,"completes":[65,1,100,1,209,1,249,1]
,"involved":[65,1]
,"replaced":[65,1,70,1,306,1]
,"marker":[65,1]
,"locked":[65,1,249,2]
,"granularity":[65,1]
,"soft":[65,1,144,2,249,1]
,"comparisons":[65,1]
,"nearly":[65,1]
,"negligible":[65,1]
,"noticeably":[65,1]
,"slowest":[65,1]
,"ffc-this":[65,1]
,"content":[65,1,190,2,197,4,235,1,267,1]
,"appeared":[65,1]
,"exclude":[65,1]
,"ehc.within":[65,1]
,"-no":[65,2]
,"-20":[65,2]
,"-30":[65,2]
,"regularly":[66,1]
,"force":[66,1,140,1,180,1,238,2,249,1]
,"whenever":[66,1,76,1,182,1,249,2,272,1]
,"deadlock":[66,2,87,4,91,1]
,"deadlocked":[66,1]
,"exception)":[66,1,76,2,96,1]
,"stuck":[66,1]
,"transaction-enabled":[67,1]
,"writer":[67,2,73,4,75,1,76,5,78,2,182,2]
,"queued":[67,1]
,"solely":[67,1]
,"non-xa":[67,1]
,"succeed":[67,1,68,2]
,"hand":[67,1,163,1]
,"having":[67,1,86,1,90,1,104,2,138,1,177,1,192,1,206,1,207,1,231,1,265,1,300,1,307,1]
,"usertransaction.commit":[67,1]
,"rollbackexception":[67,1]
,"ibm":[68,1]
,"due":[68,1,71,1,135,1,231,1]
,"stable":[68,1]
,"transactionmanager":[68,1]
,"callbacks":[68,1,85,1,86,1,89,1,90,1]
,"correctly":[68,1,134,1,219,1,230,1,272,1,279,1]
,"respect":[68,1]
,"<<ffc-should":[68,1,146,1]
,"adapter":[68,1]
,"\u0022>>":[68,1,72,1,101,1,171,1]
,"confirm":[68,1]
,"com.ibm.websphere.jtaextensions.synchronizationcallback":[68,1]
,"com.ibm.websphere.jtaextensions.extendedjtatransaction":[68,2]
,"java:comp\u002Fwebsphere\u002Fextendedjtatransaction":[68,1]
,"cast":[68,1]
,"registersynchronizationcallbackforcurrenttran":[68,1]
,"net.sf.ehcache.hibernate.ehcacheregionfactory":[68,1,238,1,239,5,248,1,249,1]
,"entities":[68,1,235,1,240,2,249,3,275,1]
,"usage=\u0022":[68,1,240,2,243,1,249,1]
,"optimization":[68,2,139,1,306,1]
,"spawns":[68,1]
,"parallel":[68,1]
,"parallel-xa-enabled":[68,1]
,"<jta>":[68,1]
,"<checkpoint-interval-seconds>":[68,1]
,"<\u002Fcheckpoint-interval-seconds>":[68,1]
,"<parallel-xa-enabled>":[68,1]
,"<\u002Fparallel-xa-enabled>":[68,1]
,"<unregister-resource-grace-period>":[68,1]
,"<\u002Funregister-resource-grace-period>":[68,1]
,"<\u002Fjta>":[68,1]
,"<\u002Fp>":[68,1]
,"bug":[68,1,232,2,249,1,300,3]
,"makes":[68,1,70,1,82,2,112,1,113,1,128,2,240,1,258,1]
,"mode\u0027s":[68,1]
,"normal":[68,1,104,1,166,1,174,1,182,1,249,1,304,1]
,"termination":[68,3]
,"unreliable":[68,1]
,"net.sf.ehcache.transaction.xa.alternativeterminationmode":[68,1]
,"controlling":[68,1]
,"atomikos\u2019s":[68,1]
,"unless":[68,1,139,2,166,1,276,1]
,"com.atomikos.icatch.threaded_2pc=false":[68,1]
,"facade":[70,2,165,1]
,"sense":[70,1,82,2]
,"client":[70,1,140,1,182,1,207,1,306,5]
,"asynchronously":[70,1,81,1,146,1,182,1,297,1]
,"web-service":[70,1]
,"clients":[70,1,97,1,100,1,190,1,230,1,306,3]
,"underlie":[70,1]
,"simplify":[70,1,184,1]
,"discussion":[70,1,177,1,179,1,180,1,181,1,182,1,183,1,184,1]
,"major":[70,1]
,"offload":[70,1,144,1,176,1,182,1]
,"shifting":[70,1]
,"-moving":[70,1]
,"interval":[70,1,128,1,230,1]
,"batched":[70,1,74,1]
,"overnight":[70,1]
,"past":[70,1]
,"hour":[70,1,140,1]
,"periods":[70,1,127,1]
,"peak":[70,2]
,"-spreading":[70,1]
,"flatten":[70,1,182,1]
,"peaks":[70,1,182,1]
,"point-of-sale":[70,1]
,"(pos)":[70,1]
,"end-of-day":[70,1]
,"procedure":[70,1]
,"central":[70,1]
,"pos":[70,1]
,"zone":[70,1]
,"tps":[70,1]
,"whittle":[70,1]
,"hours":[70,1]
,"conflation":[70,2]
,"-consolidate":[70,1]
,"row":[70,1,146,1,249,1]
,"incrementing":[70,1]
,"weighed":[70,1]
,"constraints":[70,1,127,1,139,1,140,1]
,"imposed":[70,1,267,1]
,"&constraints":[70,1]
,"participates":[70,1]
,"boundary":[70,2]
,"risk":[70,1]
,"eventual":[70,2,146,1]
,"retry":[70,1,76,1,78,1,230,1]
,"counts":[70,1]
,"delays":[70,2]
,"compensating":[70,1]
,"wb.>>":[70,1]
,"delay":[70,2]
,"obvious":[70,1]
,"implication":[70,1]
,"introduces":[70,1,104,2]
,"correct":[70,1,100,1,112,2,124,1,160,1,259,1,303,1]
,"snapshot":[70,1]
,"incorrect":[70,1]
,"loaded":[70,1,71,1,82,1,117,3,121,1,122,1,143,1,181,1,182,2,249,1]
,"tolerant":[70,4,71,1,144,1]
,"appends":[70,1]
,"corrupted":[70,1,171,1]
,"news":[70,1,181,4]
,"reader":[70,1]
,"displays":[70,1]
,"articles":[70,1]
,"synchronization":[70,1,141,1,179,1,248,2]
,"ideally":[70,1]
,"synchronized":[70,1,87,5,104,1]
,"timestamp":[70,2,112,1,127,2]
,"clock":[70,1]
,"synchronize":[70,1,141,1,179,1]
,"authority":[70,1]
,"protocol":[70,1,200,1,204,1,211,1,213,2,216,1,218,2,219,1,226,1,272,1]
,"isn\u0027t":[70,1]
,"processed":[70,2,74,1,77,2,190,1]
,"batching":[70,1,74,2,76,1,204,1]
,"aggregated":[70,1]
,"separately":[70,1]
,"inside":[70,1,174,2]
,"item":[70,1,127,1,141,1,160,1,179,1,240,2,249,1]
,"reordering":[70,1]
,"compensate":[70,1]
,"versioning":[70,1,294,2]
,"auto-versioning":[70,4,294,5]
,"unclustered":[70,1,294,1]
,"net.sf.ehcache.element.version.auto":[70,1,294,1]
,"(it":[70,1,135,1,280,1,294,1]
,"default)":[70,1,294,1]
,"turned":[70,1,294,1]
,"ineligible":[70,1,294,1]
,"silently":[70,1,150,1,197,1,294,1]
,"fail":[70,1,190,2,211,1,230,1,249,1,294,1]
,"verifications":[70,1]
,"scheduled":[70,1,307,1]
,"relevant":[70,1,276,1]
,"alex":[70,1,244,1]
,"snaps":[70,1]
,"combined":[71,1,131,1,190,1,274,2]
,"simplest":[71,2,104,1,141,1,179,1]
,"considered":[71,1,96,1]
,"startup":[71,1,113,1,121,1,123,1,128,1,131,1,171,1]
,"populated":[71,1,181,1,183,1,241,1,246,1,256,1]
,"lazily":[71,1]
,"partial":[71,1,76,2]
,"dataset":[71,4]
,"fall":[71,1]
,"occurred":[71,1,75,1,89,1,91,1,96,1,166,1]
,"places":[71,1,229,1]
,"implications":[71,1]
,"flushing":[71,2,133,1,137,1,138,1,140,1,178,1,284,1]
,"exceeded":[71,1,134,1,138,1,139,1]
,"evicted":[71,2,91,1,111,4,112,5,127,2,128,2,137,2,138,1,139,7,140,1,249,1,297,2]
,"<<ffc-what":[71,1]
,"expire.>>":[71,1]
,"consequently":[71,1,138,1]
,"timetolive":[71,1,89,1,91,1,123,2,141,1,179,1,211,2,261,1]
,"timetoidle":[71,1,89,1,91,1,123,2,141,1,179,1,261,1]
,"raffle":[72,2]
,"demonstrates":[72,2,91,2,252,1,276,1]
,"writers":[72,2,76,1]
,"loaders":[72,2,79,1,80,3,81,1,82,2,83,2,272,1]
,"github.com":[72,1]
,"shouldn\u2019t":[72,1,106,1]
,"ehcache-raffle":[72,1]
,"github":[72,1,291,1]
,"illustrates":[72,1,130,1]
,"cachewriterconfiguration":[73,2]
,"writethroughcache1":[73,1]
,"<cachewriter":[73,4]
,"writemode=\u0022":[73,4]
,"maxwritedelay=\u0022":[73,4]
,"ratelimitpersecond=\u0022":[73,4]
,"writecoalescing=\u0022":[73,4]
,"writebatching=\u0022":[73,4]
,"writebatchsize=\u0022":[73,4]
,"retryattempts=\u0022":[73,4]
,"retryattemptdelayseconds=\u0022":[73,4]
,"<cachewriterfactory":[73,3]
,"com.company.mycachewriterfactory":[73,2]
,"just.some.property=test":[73,3]
,"another.property=test2":[73,3]
,"<\u002Fcachewriter>":[73,3]
,"writethroughcache2":[73,1]
,"<cachewriter\u002F>":[73,1]
,"writethroughcache3":[73,1]
,"notifylistenersonexception=\u0022":[73,3]
,"writethroughcache4":[73,1]
,"net.sf.ehcache.writer.writethroughtestcachewriterfactory":[73,2]
,"writebehindcache5":[73,1]
,"10)":[73,1,124,1]
,".cachewriter":[73,1]
,".writemode":[73,1]
,"(cachewriterconfiguration.writemode.write-behind)":[73,1]
,".maxwritedelay":[73,1]
,"(8)":[73,1]
,".ratelimitpersecond":[73,1]
,"(5)":[73,1]
,".writecoalescing":[73,1]
,".writebatching":[73,1]
,".writebatchsize":[73,1]
,"(20)":[73,1]
,".retryattempts":[73,1]
,"(2)":[73,2]
,".retryattemptdelayseconds":[73,1]
,".cachewriterfactory":[73,1]
,"cachewriterconfiguration.cachewriterfactoryconfiguration":[73,1]
,".properties":[73,1]
,".propertyseparator":[73,1]
,"\u0022))))":[73,1]
,"relying":[73,1]
,"cachewriterfactoryconfiguration":[73,1]
,"handles":[73,1,76,1]
,"(jdbcconnection)":[73,1]
,"cache.registercachewriter":[73,1]
,"(writer)":[73,1]
,"cachewriterfactory":[74,2,76,1,182,3]
,"write-mode":[74,1]
,"[write-through":[74,1]
,"write-behind]":[74,1]
,"-whether":[74,4,208,5,220,5]
,"notifylistenersonexception":[74,1]
,"notify":[74,1,91,1]
,"writebehindmaxqueuesize":[74,1]
,"bucket":[74,2]
,"buckets)":[74,1,77,1]
,"unbounded":[74,1,111,1]
,"(default)":[74,1,127,1,134,1]
,"size)":[74,1]
,"checked":[74,1,91,1,121,1,127,1,131,1,207,1]
,"blocked":[74,1,211,1]
,"drops":[74,1,248,1]
,"batch":[74,5,76,2,77,1]
,"coalesced":[74,1,77,1]
,"net.sf.ehcache.config.cachewriterconfiguration.setwritebehindmaxqueuesize":[74,1]
,"writebehindconcurrency":[74,1]
,"thread-bucket":[74,2]
,"(default":[74,1,102,1]
,"ratelimitpersecond":[74,2]
,"pair":[74,1]
,"writebehindconcurrency=\u0022":[74,1]
,"400":[74,1]
,"net.sf.ehcache.config.cachewriterconfiguration.setwritebehindconcurrency":[74,1]
,"maxwritedelayseconds":[74,1]
,"permits":[74,1,121,1]
,"build":[74,1,237,2,297,1]
,"coalescing":[74,2]
,"optimizations":[74,1,306,1]
,"writecoalescing":[74,1]
,"latest":[74,1,148,2,182,1,236,1,240,1,259,1]
,"redundant)":[74,1]
,"writebatching":[74,1]
,"storeall":[74,1]
,"efficiently":[74,1]
,"writebatchsize":[74,1]
,"length":[74,1,77,1]
,"deletes":[74,2]
,"invoked":[74,1,80,1,174,1,178,1,255,1,284,1]
,"retryattempts":[74,1]
,"retryattemptdelayseconds":[74,1]
,"retrying":[74,1]
,"cacheloaders":[75,1,80,4,82,1]
,"exposed":[75,2]
,"cache.getwithloader":[75,1,267,1]
,"cachewriters":[75,1]
,"cache.putwithwriter":[75,2]
,"cache.removewithwriter":[75,1]
,"signature":[75,1]
,"\u002F***put":[75,1]
,"*has":[75,1,108,1]
,"effect":[75,1,91,2,127,1,128,1,263,1,294,1,298,1]
,"*cache.put":[75,1]
,"**resets":[75,1]
,"*it":[75,1,104,1,108,1,113,2,146,1]
,"gotten":[75,1]
,"**also":[75,1]
,"notifies":[75,1]
,"cacheeventlistener":[75,1,87,2,89,1,90,1,91,5,106,1,108,1,170,1,174,1,200,1,204,1,267,3]
,"succeeds":[75,1]
,"**-the":[75,1]
,"*-if":[75,1]
,"***@param":[75,1,91,1]
,"*replication":[75,1,298,1]
,"illegalstateexception":[75,2,190,1,289,2]
,"*{@link":[75,1,76,2,82,1,87,2,91,3,96,1,104,1]
,"net.sf.ehcache.status":[75,1,87,2,96,1]
,"status_alive}":[75,1,87,1,96,1]
,"illegalargumentexception":[75,2]
,"*\u002Fvoid":[75,1,76,7,82,2,87,2,91,5,96,1,108,2]
,"spi":[76,2,248,11]
,"implementers":[76,1,78,1,82,2,85,1,87,2,89,1,91,6,96,1,108,2]
,"\u002F***a":[76,1,96,1]
,"*to":[76,5,82,1,108,1]
,"*<p\u002F>":[76,8,96,1]
,"*if":[76,2,91,1,104,2]
,"cachewriter\u0027s":[76,1]
,"*operation":[76,3]
,"*and":[76,1,82,1,91,1]
,"*<p>":[76,3]
,"*implementers":[76,1,87,1]
,"storing":[76,1]
,"*deleting":[76,1]
,"*<\u002Fp>":[76,1]
,"*<h4>":[76,3]
,"<\u002Fh4>":[76,3]
,"*in":[76,3,91,1]
,"cacheeventlisteners":[76,1,123,1]
,"notified":[76,1,86,1,89,1,91,1,160,1]
,"*write":[76,1]
,"fails":[76,3,197,1,209,1,222,1]
,"event":[76,1,84,1,85,3,86,1,87,3,88,1,89,2,90,2,91,4,139,1,153,1,166,1,170,1,190,2,202,3,208,1,220,1,295,3]
,"*written":[76,1]
,"configurable":[76,1,111,1,128,1,138,1,244,1]
,"*way":[76,1]
,"highly":[76,1,100,1,181,1,189,1]
,"*cachewriters":[76,1]
,"manner":[76,1]
,"determined":[76,1,298,1]
,"net.sf.ehcache.config.cachewriterconfiguration}":[76,1]
,"*for":[76,1,104,1,108,1]
,"*see":[76,1,108,1]
,"chapter":[76,1,106,1]
,"*how":[76,1]
,"**@author":[76,1]
,"greg":[76,1,82,2,249,2,252,1]
,"luck":[76,1,82,2,249,2,252,1]
,"*@author":[76,1,82,2]
,"geert":[76,1]
,"bevin":[76,1]
,"*@version":[76,1]
,"$id":[76,1]
,"$*\u002Fpublic":[76,1]
,"{\u002F***creates":[76,1,82,1]
,"*ehcache":[76,1,108,1]
,"*implementations":[76,1,91,1]
,"*support":[76,1,108,1]
,"stop":[76,1,82,1,108,1,288,1,303,1,307,1]
,"**@return":[76,1,82,2,108,1]
,"extension":[76,1,82,4,107,1,108,7]
,"cloned":[76,1,82,1,91,1,108,1]
,"\u002F***notifies":[76,1,82,1]
,"initialise":[76,2,82,2,83,1,108,2]
,"*this":[76,2,82,2,108,1]
,"*changed":[76,1]
,"alive":[76,1,82,1,108,1]
,"legal":[76,1,82,1,108,1,127,1,128,3]
,"**@throws":[76,1,82,2,104,1,108,2]
,"net.sf.ehcache.cacheexception":[76,1,82,3,272,1]
,"\u002F***providers":[76,1,82,1,108,1]
,"sorts":[76,1,82,1,108,1]
,"exotic":[76,1,82,1,108,1]
,"*cache":[76,1,83,1,96,1,104,2,160,1]
,"illegal":[76,1,82,1,108,1]
,"*is":[76,1,87,1,91,1]
,"partly":[76,1,108,1]
,"disposed":[76,1,82,1,87,1,108,1,160,2]
,"\u002F***write":[76,2]
,"intended":[76,1]
,"key\u002Fvalue":[76,1]
,"*update":[76,1]
,"*intended":[76,1]
,"insert":[76,1]
,"(by":[76,1,239,1]
,"throwing":[76,2,96,1]
,"success":[76,2]
,"convention":[76,2,211,1,244,1]
,"successfully":[76,1]
,"mapentries":[76,1]
,"indicating":[76,2,207,1,249,1]
,"left":[76,2,131,1,182,1]
,"*attempted":[76,1]
,"\u002F***delete":[76,1]
,"\u002F***remove":[76,1]
,"*of":[76,1,96,1,108,1]
,"*(by":[76,1]
,"*after":[76,1]
,"erased":[76,1]
,"*successfully":[76,1]
,"*erase":[76,1]
,"*been":[76,1]
,"attempted":[76,1,197,1]
,"\u002F***this":[76,1,108,1,160,1]
,"couldn\u0027t":[76,1]
,"handled":[76,1,96,1,178,1,263,1,285,1,294,1]
,"*writer":[76,1]
,"net.sf.ehcache.config.cachewriterconfiguration":[76,1]
,"getretryattempts":[76,1]
,"\u2002*retryattempts}":[76,1]
,"tried":[76,2]
,"failing":[76,1,122,1]
,"*be":[76,1]
,"runtimeexceptions":[76,1]
,"\u00A0*occur":[76,1]
,"logged":[76,1,78,1,128,1,131,1,263,1,297,1]
,"lost":[76,1,78,1,144,1,182,1]
,"triggered":[76,1,87,1,181,1]
,"\u2002*in":[76,1]
,"operationtype":[76,2]
,"runtimeexception":[76,2,78,1]
,"\u2002*was":[76,1]
,"throwaway":[76,1,78,1]
,"singleoperationtype":[76,1]
,"monitoring":[77,1,155,1,156,2,160,3,172,1,174,4,304,1]
,"net.sf.ehcache.statistics.livecachestatistics":[77,1]
,"getwriterqueuelength":[77,1]
,"(in":[77,1,127,1,263,1]
,"waiting":[77,1,144,1,171,1,182,1,190,1]
,"handling":[78,2,94,1,97,2,100,1]
,"attempts":[78,1,229,1,230,1]
,"batch)":[78,1,254,1]
,"net.sf.ehcache.writer.cachewriter":[78,1]
,"received":[78,1,174,8,207,2,289,1]
,"ignored":[78,1,113,1,134,5,138,1,227,5,228,1,294,1]
,"handy":[78,1]
,"(potentially":[78,1]
,"persistent)":[78,1]
,"monitor":[78,1,156,2,174,1,247,1,304,1]
,"intervene":[78,1]
,"specifies":[80,1,81,1,86,1,90,1,134,1,144,2]
,"loadall":[80,2,82,2]
,"incorporated":[80,1]
,"(synchronous)":[80,2]
,"(asynchronous)":[80,2]
,"invoke":[80,1,182,1]
,"warmers":[80,1]
,"decorator":[80,1,99,1,100,3,101,1,104,5,106,1]
,"declaratively":[80,1,94,1,95,1,101,1]
,"becomes":[80,1,128,1,139,1]
,"invoking":[80,1]
,"loader":[80,1,81,1,82,4,83,2,117,2,229,1,272,1]
,"declarative":[81,1,95,1,102,1,107,1,121,3]
,"cacheloaderfactory":[81,2,82,4]
,"<cacheloaderfactory":[81,1,229,3]
,"com.example.examplecacheloaderfactory":[81,1]
,"type=int":[81,1]
,"startcounter=10":[81,1]
,"abstract":[82,8,87,6,91,6,96,6,108,6,276,2]
,"factory":[82,11,86,3,87,9,90,2,91,7,96,9,108,10,122,1,190,1,207,2,208,1,220,2,226,1,228,1,229,1,238,1,248,1]
,"extending":[82,2,87,2,91,2,96,1,108,2]
,"reproduced":[82,2,87,2,96,2,108,2,165,1,232,1,300,1]
,"\u002F***an":[82,1,87,1,91,1,96,1,108,1]
,"*their":[82,1,91,1]
,"**there":[82,1]
,"jsr107":[82,3,290,1,291,2]
,"sub":[82,1]
,"**note":[82,1,87,4,104,1]
,"*programmatically":[82,1]
,"creational":[82,1]
,"{@link":[82,1,83,2,87,3,91,3,96,3,104,2,108,1]
,"net.sf.ehcache.jcache.jcachefactory}":[82,2]
,"constructed":[82,3,87,1,91,1,96,1,104,1]
,"net.sf.jsr107cache.cacheloader":[82,2]
,"createcacheloader":[82,3]
,"(map":[82,1]
,"environment)":[82,1,226,1]
,"\u002F***creates":[82,2,91,1,108,1,117,1]
,"*comma":[82,1]
,"separated":[82,1,96,1,108,1,121,1,207,1]
,"net.sf.ehcache.loader.cacheloader":[82,1]
,"(properties":[82,1,87,1,91,1,96,1]
,"properties)":[82,2,87,1,91,1,96,1,102,1,108,1]
,"\u002F***@param":[82,1]
,"whose":[82,1]
,"lifecycle":[82,2,83,2,106,2,108,3,121,2,249,1]
,"delimiter":[82,1,102,1]
,"*separated":[82,1]
,"disposal":[82,1,262,1]
,"\u002F***extends":[82,1]
,"{\u002F***load":[82,1]
,"**jcache":[82,2]
,"*where":[82,1]
,"*\u002Fobject":[82,1]
,"argument)":[82,2]
,"\u002F***load":[82,1]
,"keyed":[82,1,249,1]
,"*\u002Fmap":[82,1]
,"\u002F***gets":[82,1,117,2]
,"*\u002Fstring":[82,1,113,1]
,"getname":[82,1,113,1]
,"*before":[82,1,91,1]
,"**implementations":[82,1,108,1]
,"*clone":[82,1,91,1]
,"providers":[82,1,108,1,239,1,248,1,262,2]
,"**this":[82,1,91,1,104,1,108,1]
,"*it\u0027s":[82,1]
,"*up":[82,1,96,1]
,"**cache":[82,1,91,1,108,1]
,"*partly":[82,1]
,"\u002F***@return":[82,1,83,1,108,1]
,"getstatus":[82,1,108,1]
,"accessible":[82,1,87,2,91,1,96,1,108,1,143,1,160,1,262,1,294,1,297,1,301,1]
,"runtime":[83,1,94,1,96,1,121,2,123,1,206,1,265,1,303,1]
,"unregistration":[83,1]
,"\u002F***register":[83,1]
,"cacheloader}":[83,2]
,"tied":[83,1,106,1,108,1]
,"**if":[83,1,96,1]
,"initialised":[83,1]
,"registercacheloader":[83,1]
,"(cacheloader":[83,2]
,"cacheloader)":[83,2]
,"{registeredcacheloaders.add":[83,1]
,"(cacheloader)":[83,2]
,"\u002F***unregister":[83,1]
,"detached":[83,1]
,"*from":[83,1]
,"unregister":[83,1]
,"unregistercacheloader":[83,1]
,"{registeredcacheloaders.remove":[83,1]
,"<cacheloader>":[83,1]
,"getregisteredcacheloaders":[83,1]
,"registeredcacheloaders":[83,1]
,"callback":[85,1,87,1,89,1,91,1]
,"cachemanagereventlistener":[85,1,86,2,87,5,106,1,160,1]
,"events":[85,1,87,1,89,2,90,4,91,1,117,1,169,1,170,1,173,1,174,1,304,1]
,"unsynchronized":[85,1,86,1,87,1,89,1,90,1,91,1]
,"implementer":[85,1,86,1,87,1,89,1,90,1,91,1,248,1]
,"safely":[85,1,86,1,87,1,89,1,90,1,91,1]
,"listener":[85,1,86,4,87,3,89,1,90,4,91,5,92,2,122,1,170,1,206,1,207,4,208,1,211,1,220,2,272,3,304,1]
,"cachemanagereventlistenerfactory":[86,4,87,3]
,"hence":[86,1]
,"little":[86,1,103,1,163,1,237,1]
,".indicate":[86,1]
,"entered":[86,1]
,".show":[86,1]
,"file.>>":[86,1]
,"<cachemanagereventlistenerfactory":[86,1,178,1,266,1,283,1]
,"qualified":[86,1,90,1,117,1,134,1,207,1,242,1,243,1]
,"comma-separated":[86,1,87,1,90,1,91,1]
,"cachemanagereventlistener}":[87,1]
,"*factory":[87,1]
,"**\u002Fpublic":[87,1,91,2,96,2,108,2]
,"{\u002F***create":[87,1,91,1,96,1]
,"*these":[87,1]
,"*properties":[87,1,108,1]
,"createcachemanagereventlistener":[87,1]
,"\u002F***allows":[87,1,91,1]
,"**adding":[87,1]
,"*removing":[87,1]
,"***callbacks":[87,1]
,"*responsibility":[87,1,91,1]
,"*performance":[87,1]
,"{\u002F***called":[87,1,91,1,96,1]
,"immediately":[87,2,91,5,113,1,124,1,137,1]
,"activated":[87,1]
,"*any":[87,3]
,"*will":[87,2,91,2]
,"activation":[87,1]
,"*notification":[87,1,91,1]
,"status_uninitialised}":[87,1]
,"care":[87,1,190,1]
,"*that":[87,1,104,1,113,1]
,"notification":[87,3,91,5,169,1,174,4]
,"*<ul>":[87,1,91,1,96,1]
,"*<li>":[87,2,91,7,96,5]
,"addcaches":[87,1]
,"whih":[87,1]
,"*cachemanager":[87,1,160,1]
,"net.sf.ehcache.cachemanager":[87,1,184,1,252,1]
,"getcache":[87,1,184,1,202,1,276,1,295,1]
,"(string)}":[87,1]
,"*<\u002Ful>":[87,1,91,1,96,1]
,"relates":[87,2]
,"*@see":[87,1]
,"notifycacheadded":[87,1,202,1,295,1]
,"(string":[87,2,99,3,117,1,183,3,244,1,256,3,309,1]
,"cachename)":[87,2]
,"\u002F***called":[87,1,91,3]
,"*method":[87,1,91,1]
,"cacheeventlistener}":[87,1]
,"notifycacheremoved":[87,1]
,"classloader":[87,1,117,5]
,"thread.currentthread":[87,1,117,1,118,1]
,".getcontextclassloader":[87,1,117,1,118,1]
,"expires":[89,1,91,1,123,2,138,2,140,1,190,1]
,"reached":[89,1,112,1,127,2,139,1,297,2]
,"putquiet":[89,1,91,1,127,1]
,"removequiet":[89,1,91,1]
,"<<ffc-hiding":[89,1]
,"omitted":[89,1,266,1]
,"reinsert":[89,1,297,1]
,"valid":[89,1,103,1,122,2,180,1,207,1,226,1,229,1,301,1]
,"statement>>":[89,1]
,"cacheeventlistenerfactory":[90,3,91,3,200,1,208,1,213,1,220,1]
,"<cacheeventlistenerfactory":[90,1,201,2,208,2,220,1,221,1,222,1,226,1,229,2,295,2]
,"listenfor=\u0022":[90,1]
,"receives":[90,1,132,1]
,"notifications":[90,1,91,1,174,3,267,1]
,"listenfor":[90,1]
,"describes":[90,1,128,1,143,1,192,1]
,"delivered":[90,1]
,"(defaults":[90,1]
,"deliver":[90,3,189,1]
,"originating":[90,2]
,"*as":[91,2,96,1]
,"createcacheeventlistener":[91,1]
,"notifyelementremoved":[91,3]
,"unfinished":[91,1]
,"says":[91,1,171,1]
,"ends":[91,1]
,"look":[91,1,174,1,180,2,217,1,221,1,300,1,304,1]
,"*<ol>":[91,1]
,"*reached":[91,1]
,"*<\u002Fol>":[91,1]
,"**callbacks":[91,1]
,"**events":[91,1]
,"cloneable":[91,1]
,"*block":[91,1]
,"**ehcache":[91,1]
,"***as":[91,1]
,"net.sf.ehcache.element}":[91,1]
,"*key":[91,1]
,"emitting":[91,4]
,"(final":[91,4,184,3,244,1,275,1,276,7]
,"net.sf.ehcache.cache":[91,4]
,"(net.sf.ehcache.element)}":[91,2]
,"**implementers":[91,2]
,"wish":[91,2,190,1,206,2]
,"element\u0027s":[91,2,123,1]
,"*so":[91,2]
,"modify":[91,2,123,1,182,1,263,1,297,2]
,"*element":[91,2,96,1,113,1]
,"modifications":[91,2]
,"undefined":[91,2]
,"notifyelementput":[91,1]
,"*already":[91,1]
,"existed":[91,1]
,"**the":[91,1]
,"notifyelementupdated":[91,1]
,"(object)}":[91,1]
,"element}":[91,1]
,"**elements":[91,1]
,"accordance":[91,1,224,1]
,"*eviction":[91,1]
,"policy":[91,1,113,12,123,1,134,2,141,1,150,1,179,1]
,"runs":[91,1,128,1,170,1,263,1]
,"default_expiry_thread_interval_seconds}":[91,1]
,"*notified":[91,1]
,"**deadlock":[91,1]
,"*expiry":[91,1]
,"sent":[91,1,170,2,208,1,220,1,227,1,228,1]
,"*synchronized":[91,1]
,"subsequently":[91,1,181,1]
,"*diskstore":[91,1,298,2]
,"accordingly":[91,1,141,1,179,1,232,2,240,1,271,1,300,1]
,"*should":[91,1,117,1]
,"notifyelementexpired":[91,1]
,"\u002F***give":[91,1]
,"replicator":[91,1,204,1,307,1]
,"chance":[91,1,209,1,246,2]
,"cleanup":[91,1,232,1,300,1]
,"*needed":[91,1]
,"notifyelementevicted":[91,1,267,1]
,"confused":[91,1]
,"cache.removeelement":[91,1]
,"notifyremoveall":[91,1]
,"ehcache.removeall":[91,1]
,"usual":[91,1,178,1,283,1]
,"(net.sf.ehcache.ehcache":[91,1]
,"net.sf.ehcache.element)":[91,1]
,"serially":[91,1]
,"potentially":[91,1,133,1,139,1]
,"millions":[91,1]
,"cache.getcacheeventnotificationservice":[92,1]
,".registerlistener":[92,1]
,"(mylistener)":[92,1]
,"handlers":[93,1,94,2,96,1,100,2]
,"propagate":[94,1,96,1,200,2,204,1,206,1,211,1,213,1]
,"interceptor":[94,1]
,"proxy":[94,1,112,1,267,1]
,"cacheexceptionhandler":[94,1,96,6]
,"intercept":[94,1]
,"intercepted":[94,1]
,"exceptionhandling":[94,1]
,"cachemanager.getehcache":[94,1,99,2,184,1,276,1]
,"cachemanager.getcache":[94,1,99,1]
,"undecorated":[94,1]
,"handler":[94,1,95,1,96,7,97,1,100,1]
,"cacheexceptionhandlers":[94,1]
,"cacheexceptionhandlerfactory":[95,1,96,3,107,1]
,"<cacheexceptionhandlerfactory":[95,1]
,"net.sf.ehcache.exceptionhandler.countingexceptionhandlerfactory":[95,1]
,"loglevel=fine":[95,1]
,"<code>":[96,2]
,"<\u002Fcode>":[96,2]
,"*configuration":[96,1]
,"*extend":[96,1]
,"comma":[96,1,102,1]
,"createexceptionhandler":[96,1]
,"**handlers":[96,1]
,"*cacheexceptionhandlerfactory":[96,1]
,"strategy)":[96,1]
,"behaviour":[96,1,108,1,208,1]
,"*exception":[96,1]
,"course":[96,1,106,1,108,1,262,1]
,"decides":[96,1]
,"stack":[96,1,200,1,213,1,215,2,216,2,298,1]
,"won\u0027t":[96,1]
,"**some":[96,1]
,"*implementing":[96,1]
,"illegalstateexception}":[96,1]
,"illegalargumentexception}":[96,1]
,"net.sf.ehcache.distribution.remotecacheexception}":[96,1]
,"issue":[96,1,211,1,232,1,272,4,289,1,300,1,301,1,306,1]
,"*occurs":[96,1]
,"*called":[96,1]
,"*does":[96,1]
,"onexception":[96,1]
,"decoration":[97,1]
,"=cachemanger.getcache":[97,1]
,"examplecache":[97,1]
,"exceptionhandler":[97,1]
,"exampleexceptionhandler":[97,1]
,"cache.setcacheloader":[97,1]
,"(handler)":[97,1]
,"proxiedcache":[97,1]
,"=exceptionhandlingdynamiccacheproxy.createproxy":[97,1]
,"cachemanager.replacecachewithdecoratedcache":[97,1,104,3]
,"(cache":[97,1,104,3,109,1,132,1,138,1,275,1]
,"proxiedcache)":[97,1]
,"decorators":[98,1,99,2,100,3,101,1,102,3,103,1,104,1]
,"encouraged":[99,1]
,"backed":[99,1,306,1]
,"functionality":[99,1,146,1,178,1,284,1]
,"gang":[99,1]
,"four":[99,1,104,1,227,1]
,"decorated":[99,2,100,1,101,1,104,12]
,"name)":[99,3,183,3,244,1,256,3,309,1]
,"backward":[99,1,248,2]
,"compatibility":[99,1,146,1,185,1,248,2,265,1]
,"retained":[99,1,171,1]
,"stem":[100,1]
,"build-in":[100,1]
,"wording":[100,1]
,"foram.>>":[100,1]
,"needing":[100,1]
,"knowledge":[100,1,112,1,206,1]
,"designed":[100,1,128,1,139,1,230,1]
,"refreshed":[100,1]
,"refreshes":[100,1]
,"operate":[100,1,227,2]
,"backing":[100,1]
,"degrade":[100,1,230,1]
,"attempting":[100,1]
,"-they":[100,1]
,"engineering":[100,1]
,"scalable":[100,1]
,"<<ffc-verify":[101,1,235,1]
,"intro":[101,1]
,".should":[101,1]
,"title":[101,1,252,3]
,"<<eventually":[101,1]
,"clarity":[101,1]
,"context.>>":[101,1]
,"net.sf.ehcache.constructs.cachedecoratorfactory":[102,1]
,"parsed":[102,1]
,"factory\u0027s":[102,1]
,"createdecoratedehcache":[102,1]
,"owning":[102,1]
,"<cachedecoratorfactory":[102,1]
,"com.company.somethingcachedecoratorfactory":[102,1]
,"property1=36":[102,1]
,"<<ffc-is":[103,1]
,"maybe":[103,1]
,"today.>>":[103,1]
,"newblockingcache":[103,1,104,1]
,"newblockingcache)":[104,2]
,"casting":[104,4]
,"word":[104,1]
,"referencing":[104,1]
,"\u002F***the":[104,1]
,"holding":[104,1,190,1]
,"*name":[104,1]
,"\u002F***initialises":[104,1]
,"*configured":[104,1]
,"ehcache\u0027s":[104,1,210,1,224,1,228,1,258,1,267,1,271,1,301,1,309,1]
,"doinit":[104,1]
,"{synchronized":[104,1]
,"(this.getclass":[104,1]
,"{if":[104,1]
,"(blockingcache":[104,1]
,"==null)":[104,1,180,2,276,1]
,"{final":[104,1,244,2]
,"=getcachename":[104,1]
,"=getcachemanager":[104,1]
,".getehcache":[104,2]
,"instanceof":[104,1]
,"blockingcache))":[104,1]
,"{\u002F\u002Fdecorate":[104,1]
,"substitute":[104,2]
,".replacecachewithdecoratedcache":[104,1]
,"=(blockingcache)":[104,1]
,"(getcachename":[104,1]
,"=singletonmanager.getehcache":[104,1]
,"decorations":[104,1]
,"cachemanager.adddecoratedcache":[104,2]
,"retain":[104,1]
,"cache.setname":[104,1]
,"(new_name)":[104,1]
,"\u002F***adds":[104,1]
,"ehcache}":[104,1]
,"*creates":[104,1]
,"memory\u002Fdisk":[104,1]
,"initializes":[104,1]
,"**it":[104,1,113,1]
,"*available":[104,1]
,"*either":[104,1]
,"*original":[104,1]
,"(decorated":[104,1]
,"not)":[104,1,306,1]
,"objectexistsexception}":[104,1]
,"replacing":[104,1,249,1]
,"please":[104,1,176,1,309,1]
,"replacecachewithdecoratedcache":[104,1]
,"ehcache)}":[104,1]
,"*new":[104,1]
,"behaviours":[104,1]
,"*gang":[104,1]
,"decoratedcache":[104,1]
,"objectexistsexception":[104,2]
,"adddecoratedcache":[104,1]
,"decoratedcache)":[104,1]
,"extensions":[105,1,106,6,107,1,108,1,109,1,117,1,247,1]
,"generic":[106,1,108,1,113,1,254,1,276,1]
,"reason":[106,1,108,1,117,1,309,1]
,"cacheextensionfactory":[106,1,108,4]
,"createcachecacheextension":[106,1]
,"timer":[106,1]
,"(another":[106,1]
,"decorate":[106,1,108,1]
,"caches.)":[106,1]
,"cacheextension":[106,3,108,7]
,"opportunities":[106,1,108,1]
,"customization":[106,1]
,"zero":[107,1,135,1]
,"<cacheextensionfactory":[107,1]
,"com.example.filewatchingcacherefresherextensionfactory":[107,1]
,"refreshintervalmillis=18000":[107,1]
,"loadertimeout=3000":[107,1]
,"flushperiod=whatever":[107,1]
,"someotherproperty=somevalue":[107,1]
,"cacheextensions":[108,1]
,"*provide":[108,1]
,"{\u002F***@param":[108,1]
,"*whose":[108,1]
,"*delimiter":[108,1]
,"createcacheextension":[108,1]
,"**cacheextensions":[108,3]
,"*interface":[108,1]
,"*createcachecacheextension":[108,1]
,"*timer":[108,1]
,"net.sf.ehcache.constructs.blocking.blockingcache}":[108,1]
,"**because":[108,1]
,"*can":[108,1]
,"*cachemanagereventlistener":[108,1]
,"*creating":[108,1]
,"customisation":[108,1]
,"{\u002F***notifies":[108,1]
,"*clean":[108,1]
,"*itself":[108,1]
,"testcacheextension":[109,3]
,"testcacheextension.init":[109,1]
,"cache.registercacheextension":[109,1]
,"(testcacheextension)":[109,1]
,"deciding":[111,1]
,"(lru)":[111,1,112,2,127,1,297,1]
,"flushed":[111,1,137,1,139,2,140,1,297,1]
,"forehcache":[111,1]
,"causes":[111,1,131,1,160,1,272,1,301,2]
,"lfu":[111,1,112,1,113,2,127,1,128,1,135,1,140,1,177,1,193,1,208,1,266,1]
,"idea":[112,1,182,1,261,1,267,1]
,"choose":[112,2,141,1,165,1,179,1]
,"1966":[112,1]
,"laszlo":[112,1]
,"belady":[112,1]
,"showed":[112,1]
,"efficient":[112,1,144,1,189,1,297,1]
,"needed":[112,1,190,1]
,"longest":[112,1]
,"theoretical":[112,1]
,"unimplementable":[112,1]
,"phenomenon":[112,1]
,"variation":[112,2]
,"lru":[112,2,113,2,122,1,127,2,150,1,249,1,266,1,278,4,297,3]
,"three":[112,1,113,1,126,1,132,1,200,1,297,1]
,"oldest":[112,1,297,1]
,"last-used":[112,1,127,1]
,"random":[112,3,113,1,133,1,209,2]
,"evicts":[112,3]
,"smallest":[112,5]
,"empirical":[112,3]
,"testing":[112,3,232,1,300,1,303,1]
,"lowest":[112,3]
,"quartile":[112,3]
,"probabilistic":[112,1,249,1]
,"suit":[112,1]
,"deterministic":[112,1,249,2]
,"-dnet.sf.ehcache.use.classic.lru=true":[112,1,150,1,249,1]
,"(lfu)":[112,1,127,1]
,"reached)":[112,1]
,"cache-element":[112,1]
,"give":[112,1,131,1,207,1]
,"<<ffc-not":[112,2]
,"here>>":[112,2]
,"(fifo)":[112,1,127,1]
,"store)":[112,1,127,3]
,"(first-in)":[112,1,127,1]
,"candidate":[112,1,113,1,127,1]
,"first-out":[112,1]
,"plugging":[113,1]
,"plug":[113,1,165,1,262,1]
,"cache.setmemorystoreevictionpolicy":[113,1]
,"(policy":[113,2]
,"policy)":[113,2]
,"utilize":[113,1,262,1,263,1]
,"metadata":[113,3]
,"interesting":[113,1]
,"approaches":[113,1]
,"\u002F***sets":[113,1]
,"*there":[113,1]
,"policies":[113,3,127,1,242,1,243,1,244,2]
,"fifo":[113,2,127,1]
,"*many":[113,1]
,"*combination":[113,1]
,"*effect":[113,1]
,"setmemorystoreevictionpolicy":[113,1]
,"{memorystore.setevictionpolicy":[113,1]
,"(policy)":[113,1]
,"{\u002F***@return":[113,1]
,"inbuilt":[113,1]
,"\u002F***finds":[113,1]
,"sampled":[113,1]
,"*distinguishes":[113,1]
,"classic":[113,1,249,1]
,"structures":[113,2,134,1]
,"statistics)":[113,1]
,"*used":[113,1]
,"decisions":[113,1]
,"advantage":[113,1,141,1,179,1,248,1]
,"*metadata":[113,1]
,"sampledelements":[113,2]
,"population":[113,1]
,"justadded":[113,1]
,"selected":[113,2,135,3,150,1,160,1]
,"*\u002Felement":[113,1]
,"selectedbasedonpolicy":[113,1]
,"justadded)":[113,1]
,"\u002F***compares":[113,1]
,"desirableness":[113,1]
,"element1":[113,2]
,"compare":[113,3]
,"element2":[113,1]
,"preferable":[113,1]
,"*first":[113,1]
,"ths":[113,1]
,"element2)":[113,1]
,"plethora":[116,1]
,"environments":[116,1,141,1,179,1]
,"utility":[116,1]
,"classloaderutil":[116,1]
,"plugin":[117,1,178,4,207,1,269,1,284,4]
,"plugins":[117,1]
,"logs":[117,1,134,1,280,1]
,"*using":[117,1]
,"classname":[117,4]
,"createnewinstance":[117,1]
,"classname)":[117,1]
,"{class":[117,1]
,"clazz":[117,1]
,"newinstance":[117,2]
,"{clazz":[117,2]
,"=class.forname":[117,2]
,"(classname":[117,2]
,"getstandardclassloader":[117,2]
,"(classnotfoundexception":[117,2]
,"{\u002F\u002Ftry":[117,1]
,"fallback":[117,2]
,"getfallbackclassloader":[117,2]
,"ex)":[117,1]
,"unable":[117,3,272,2,301,1]
,"e.getmessage":[117,3,226,1]
,"{newinstance":[117,1]
,"=clazz.newinstance":[117,1]
,"(illegalaccessexception":[117,1]
,"(instantiationexception":[117,1]
,"classloading":[117,3]
,"*one":[117,1]
,"*loading":[117,1]
,"wild":[117,1]
,"*extensions":[117,1]
,"*context":[117,1]
,"classloaderutil.class.getclassloader":[117,2]
,"unspecified":[118,1,207,1]
,"(\u0022\u002Fehcache.xml":[118,2]
,"configurationfactory.class.getresource":[118,2]
,"(\u0022\u002Fehcache-failsafe.xml":[118,1]
,"\u0022\u002Fehcache.xml":[118,1]
,"root":[118,1,239,1,294,1]
,"package)":[118,1]
,"class-constructor":[121,1]
,"choosing":[121,1]
,"matter":[121,1,181,1]
,"preference":[121,1,307,1]
,"run-time":[121,1]
,"project":[121,1,176,1,178,2,183,7,235,3,249,1,255,1,256,8,276,1,281,1,284,1]
,"separation":[121,1,249,1]
,"deployment":[121,1,169,1,298,1,300,1]
,"centrally":[121,1]
,"organized":[121,1]
,"application-code":[121,1]
,"focuses":[121,1]
,"explored":[121,1]
,"documented":[121,1,122,2]
,"ascii":[122,3]
,"utf8":[122,3]
,"encoded":[122,1,228,1]
,"top":[122,2,127,1]
,"alternate":[122,1]
,"paths":[122,2,128,2]
,"filenames":[122,1]
,"conflicts":[122,2]
,"ports":[122,1]
,"require":[122,1,141,1,179,1,182,1,193,1,227,2,248,1,261,2,262,1,294,1]
,"emit":[122,2]
,"reminding":[122,2]
,"commentary":[122,1]
,"downloaded":[122,2,165,1,235,1]
,"http:\u002F\u002Fehcache.org\u002Fehcache.xml":[122,1]
,"ehcache-1.6":[122,2]
,"files":[122,2,128,2,144,1,174,1,210,1,211,1,267,2,276,1]
,"unicode":[122,1]
,"backwardly":[122,1]
,"compatible":[122,1,237,1,265,2,300,2,309,1]
,"necessary":[122,1,132,1,239,1,261,1]
,"pertain":[122,2]
,"ehcache.xsd":[122,3,148,1,178,1,185,1,266,1,278,1,283,1]
,"comply":[122,1]
,"schema":[122,2,262,1,294,2]
,"http:\u002F\u002Fehcache.org\u002Fehcache.xsd":[122,1]
,"ehcache-failsafe.xml":[122,6,128,1,280,1]
,"packaged":[122,1,173,1]
,"<<ffc-fix":[122,1]
,"don\u2019t":[122,1,294,1,303,1]
,"crossref":[122,1]
,"now.>>":[122,1]
,"<ehcache>":[122,1,123,1,145,1,242,1,243,1]
,"<diskstore":[122,1,128,1,145,1,178,1,195,1,221,1,266,1,278,1,283,1]
,"path=\u0022":[122,1,195,1,221,1]
,"java.io.tmpdir":[122,1,128,1]
,"<defaultcache":[122,1,178,1,195,1,266,1,278,1,283,1]
,"120":[122,3,128,1,178,1,244,1,266,2,278,2,283,1,303,1]
,"maxentrieslocaldisk=\u0022":[122,1,132,2,177,1,193,1,266,1]
,"10000000":[122,1]
,"memorystoreevictionpolicy=\u0022":[122,1,140,1,177,1,193,1,208,1,266,2,278,4]
,"localtempswap":[122,1,128,4,131,1,144,2,145,3,146,1,195,5,242,1,243,2,244,3,278,1,297,1]
,"<\u002Fdefaultcache>":[122,1,178,1,266,1,278,1,283,1]
,"<\u002Fehcache>":[122,1,132,5,145,1,177,1,178,1,193,1,195,1,221,1,242,1,243,1,266,1,278,1,283,1]
,"(programmatically)":[122,1]
,"changing":[123,1]
,"changeable":[123,1,128,1]
,"ttl":[123,1,138,1,179,1,247,1,261,1,297,2]
,"(infinite":[123,2,138,3]
,"lifetime)":[123,2,138,2]
,"tti":[123,1,138,1,261,1,297,2]
,"overrides":[123,1,134,2,138,1,297,1]
,"maxentrieslocalheap":[123,1,132,1,139,1,241,1,263,2,297,2]
,"maxbyteslocalheap":[123,1,130,1,131,1,132,1]
,"maxentrieslocaldisk":[123,1,128,1,138,1,145,1]
,"maxbyteslocaldisk":[123,1,128,1,130,1,131,1,145,1]
,"memory-store":[123,1]
,"=cache.getcacheconfiguration":[123,1]
,"config.settimetoidleseconds":[123,1]
,"config.settimetoliveseconds":[123,1]
,"(120)":[123,1]
,"config.setmaxentrieslocalheap":[123,1]
,"(10000)":[123,1]
,"config.setmaxentrieslocaldisk":[123,1]
,"(1000000)":[123,1]
,"disabled":[123,1,150,1,262,1,303,2]
,"cache.disabledynamicfeatures":[123,1]
,"dynamicconfig":[123,1]
,"affecting":[124,1,303,1]
,"original":[124,1,228,1,303,2]
,"<<ffc-for":[124,1]
,"edit":[124,1,146,2,178,1,283,1]
,".e.g":[124,1]
,"store.>>":[124,1]
,"<defaultcache>":[124,1]
,"copycache":[124,4]
,"1000)":[124,1]
,".copyonread":[124,1]
,".copyonwrite":[124,1]
,"()-like":[124,2]
,"net.sf.ehcache.store.compound.copystrategy":[124,1]
,"<copystrategy>":[124,1]
,"copyonread=\u0022":[124,1]
,"copyonwrite=\u0022":[124,1]
,"<copystrategy":[124,1]
,"com.company.ehcache.mycopystrategy":[124,2]
,"copystrategy.copy":[124,1]
,"(t)":[124,1]
,"copystrategyconfiguration":[124,3]
,"copystrategyconfiguration.setclass":[124,1]
,"cacheconfiguration.addcopystrategy":[124,1]
,"(copystrategyconfiguration)":[124,1]
,"summarized":[126,1]
,"document":[126,1,143,1]
,"strongly":[126,1,146,1]
,"actual":[126,1,135,1]
,"expect":[126,1]
,"allot":[127,1]
,"hotset":[127,1]
,"overall":[127,1,131,1,135,2,138,1]
,"overflowtooffheap":[127,1,263,2]
,"<persistence>":[127,1,144,2,146,5]
,"(disk":[127,1]
,"memorystoreevictionpolicy":[127,1]
,"(first-out)":[127,1]
,"getquiet":[127,2]
,"calculateinmemorysize":[127,1]
,"convenient":[127,1]
,"estimate":[127,2]
,"bytes)":[127,1]
,"rough":[127,1]
,"negative":[127,1]
,"trade-off":[127,1]
,"utilization":[127,1,128,1,297,1]
,"design":[127,1]
,"favor":[127,1]
,"concerned":[127,1,297,1]
,"encourage":[128,1,248,1]
,"(localtempswap)":[128,1,130,1]
,"(localrestartable)":[128,1]
,"survive":[128,1]
,"restarted":[128,1]
,"cleared":[128,1,144,2,145,1,249,1,306,1]
,"auto-resolved":[128,1,144,1]
,"<cache_name>":[128,1]
,".data":[128,1]
,"restartable":[128,2]
,"restart":[128,1,139,1,143,7,144,4,145,1,146,1,306,1]
,"<diskstore>":[128,3,144,1]
,"sub-element":[128,1,134,1,144,3,146,5]
,"path=\u0022\u002Fpath\u002Fto\u002Fstore\u002Fdata":[128,1,178,1,266,1,278,1,283,1]
,"unix":[128,1,170,2]
,"\u002Fhome\u002Fapplication\u002Fcache":[128,1]
,"translated":[128,1]
,"user.home":[128,1]
,"-user\u0027s":[128,1]
,"home":[128,1]
,"user.dir-user\u0027s":[128,1]
,"-default":[128,1]
,"temp":[128,1]
,"ehcache.disk.store.dir-a":[128,1]
,"normally":[128,1,141,1,170,1,174,1,179,1,197,1,249,1,275,1]
,"command":[128,1,150,2,153,1,261,1,262,4,303,1]
,"-dehcache.disk.store.dir=\u002Fu01\u002Fmyapp\u002Fdiskdir":[128,1]
,"subdirectories":[128,1]
,"user.dir\u002Fone":[128,1]
,"diskstoreconfiguration":[128,3,145,1]
,"diskstoreconfiguration.setpath":[128,1]
,"(\u0022\u002Fmy\u002Fpath\u002Fdir":[128,1]
,"\u002F\u002Falready":[128,1]
,"configuration.adddiskstore":[128,1]
,"(diskstoreconfiguration)":[128,1]
,"mgr":[128,1]
,"cachemanager\u0027s":[128,1,131,1,132,1,160,1,309,1]
,"recycled":[128,1]
,"diskexpirythreadintervalseconds":[128,2,297,2]
,"low":[128,1,154,1,246,1]
,"excessive":[128,1]
,"exceeds":[128,1,267,1]
,"evictions":[128,1]
,"turning":[128,1]
,"commented":[128,1,266,1]
,"summarizes":[130,1,146,1]
,"(heap)":[130,1,131,1]
,"maxentrieslocalheapmax":[130,1]
,"byteslocalheap":[130,1]
,"(maxbyteslocalheap":[130,1,131,2]
,"pool":[130,4,131,12,132,14,135,4]
,"pooling":[130,3,131,2]
,"maxbyteslocaloffheap":[130,1,139,1,263,1]
,"maxentrieslocaldiskmax":[130,1]
,"byteslocaldisk":[130,1]
,"(maxbyteslocaldisk":[130,1]
,"(bytes)":[130,1,228,1]
,"-xmx":[130,1,307,1]
,"syntax":[130,1]
,"500k":[130,1]
,"200m":[130,1]
,"percentage":[130,1,132,3]
,"cachemanager-level":[130,1,131,4,135,2]
,"diagram":[130,1]
,"constrain":[131,2]
,"claims":[131,2]
,"receive":[131,1,141,1,169,1,179,1,181,1]
,"share":[131,2,249,1]
,"remainder":[131,1]
,"(after":[131,1]
,"claimed":[131,1]
,"portion)":[131,1]
,"eight":[131,1]
,"pools":[131,2,132,3,134,1]
,"gigabyte":[131,1]
,"200mb":[131,1]
,"remaining":[131,2,132,2,139,2]
,"600mb":[131,1]
,"equally":[131,1,132,3]
,"bytes-based":[131,1]
,"claim":[131,2]
,"portion":[131,2,132,8,263,1]
,"entries-based":[131,1]
,"maxentrieslocal":[131,1]
,"over-allocated":[131,1]
,"over-allocation":[131,1]
,"invalidconfigurationexception":[131,2]
,"(same":[131,1]
,"repeats":[131,1]
,"guidance":[131,1]
,"re-writing":[131,1]
,"eliminating.>>":[131,1]
,"persistencestrategy":[131,1]
,"cache-sizing":[132,1]
,"allocations":[132,1]
,"tier)":[132,1]
,"<ehcache":[132,5,148,1,177,1,178,1,193,1,195,1,221,1,266,1,278,1,283,1]
,"xmlns":[132,5]
,"cm1":[132,4]
,"100m":[132,3]
,"maxbyteslocaldisk=\u0022":[132,4]
,"50g":[132,2]
,"cache1":[132,6,139,1]
,"allocates":[132,3]
,"among":[132,1]
,"allocated":[132,3]
,"60g":[132,1]
,"50m":[132,4]
,"reserves":[132,1]
,"50mb":[132,2]
,"100mb":[132,1,265,1]
,"local-heap":[132,2]
,"half":[132,1]
,"25mb":[132,2]
,"2.5gb":[132,3]
,"20gb":[132,1]
,"reserve":[132,2]
,"fixed":[132,1,226,1,232,1,289,1,297,1,300,2]
,"particular":[132,1,180,1,181,1,244,1,287,1]
,"cm2":[132,2]
,"cache4":[132,2]
,"100000":[132,2,229,2]
,"cache5":[132,2]
,"cache6":[132,2]
,"(local":[132,1]
,"heap)":[132,1]
,"constrained":[132,1,265,1]
,"desired":[132,1,134,1]
,"percents":[132,1]
,"<!--cache1":[132,1]
,"400mb":[132,1]
,"5gb":[132,3]
,"-->":[132,3,177,1,193,1,195,2,208,2,220,1,252,2,276,5]
,"<!--cache2":[132,2]
,"300mb":[132,2]
,"40gb":[132,1]
,"cm3":[132,1]
,"cache7":[132,1]
,"cache8":[132,1]
,"cache9":[132,1]
,"implicit":[132,1]
,"(cachemanager":[132,1]
,"introduced":[133,1,249,1]
,"relationship":[133,1,249,1]
,"re-write.>>":[133,1]
,"pinned":[133,1,139,11]
,"cache-configuration":[133,1]
,"prevents":[133,1,231,1,232,1,272,1]
,"enforcement":[134,1]
,"internal":[134,2,298,1]
,"mechanisms":[134,1,200,1,206,2]
,"track":[134,1]
,"data-element":[134,1]
,"enforce":[134,1,141,1,179,1,232,1]
,"memory-limited":[134,1]
,"footprint":[134,1]
,"graphs":[134,2,189,1]
,"followed":[134,1,190,1,243,1,244,1]
,"recursively":[134,1]
,"overstatement":[134,1]
,"ignoring":[134,1]
,"calculations":[134,1]
,"measurement":[134,3]
,"@ignoresizeof":[134,4]
,"packages":[134,2]
,"inherited":[134,1]
,"excluded":[134,1]
,"ignore":[134,3]
,"dog":[134,2,183,6,256,6]
,"private":[134,2,184,1,228,1,276,1]
,"sharedinstance":[134,2]
,"mycacheentry":[134,1]
,"{@ignoresizeof":[134,1]
,"sharedclass":[134,1]
,"package-info.java":[134,2]
,"com.pany.ignore":[134,2]
,"net.sf.ehcache.pool.sizeof.filter.ignoresizeof":[134,1]
,"net.sf.ehcache.sizeof.filter":[134,1]
,"graph":[134,3]
,"com.pany.domain.cache.mycacheentry.sharedinstance":[134,1]
,"com.pany.domain.sharedstate":[134,1]
,"ignores":[134,1]
,"com.pany.example":[134,1]
,"measurements":[134,1]
,"moved":[134,1]
,"traversed":[134,1]
,"traversing":[134,1]
,"process":[134,2,170,2,182,2,183,1,211,1,249,1,256,1,297,1]
,"annotations":[134,1,176,2,183,6,254,1,256,6]
,"levels":[134,1,166,1,306,2]
,"size-of":[134,10]
,"limitation":[134,2,232,1]
,"deep":[134,2]
,"<sizeofpolicy":[134,1]
,"maxdepth=\u0022":[134,1]
,"maxdepthexceededbehavior=\u0022":[134,1]
,"abort":[134,3]
,"maxdepth":[134,1]
,"linked":[134,1]
,"visited":[134,1]
,"action":[134,1,166,1,227,6,229,1,262,4]
,"maxdepthexceededbehavior":[134,1]
,"depth":[134,1]
,"continue":[134,3,146,2,271,1]
,"forces":[134,2]
,"sizeof":[134,2]
,"mark":[134,1]
,"tracking":[134,1,190,1,300,1]
,"ehcache.hasabortedsizeof":[134,1]
,"(directly":[134,1]
,"<ehcache>)":[134,1]
,"(under":[134,1]
,"<defaultcache>)":[134,1]
,"<sizeofpolicy>":[134,1]
,"belonging":[134,1]
,"target":[134,1,138,2]
,"cache-level":[134,1]
,"debugging":[134,1,172,1,304,1]
,"related":[134,2,186,1,247,2]
,"warnings":[134,1,308,1]
,"seem":[134,1]
,"(usually":[134,1]
,"walking":[134,1]
,"graph)":[134,1]
,"generate":[134,1,177,1,192,1,204,1,252,1,262,2]
,"net.sf.ehcache.sizeof.verbosedebuglogging":[134,1]
,"debug":[134,1,166,3,173,1,304,1,307,1]
,"net.sf.ehcache.pool.sizeof":[134,1]
,"exhausted":[135,1]
,"(lru":[135,1]
,"eviction-cost":[135,6]
,"=mean-entry-size":[135,2]
,"*drop-in-hit-rate":[135,1]
,"increase":[135,1]
,"(system":[135,1]
,"e.g":[135,1,170,2,174,2]
,"database)":[135,1,179,1]
,"evicting":[135,2]
,"power-law":[135,1]
,"(hit":[135,1]
,"n\u0027th":[135,1]
,"1\u002Fn":[135,1]
,"{alpha}":[135,5]
,"continuous":[135,1]
,"proportional":[135,1]
,"integral":[135,2]
,"drop":[135,1]
,"*1\u002Fx":[135,1]
,"*delta":[135,1]
,"(x)":[135,1]
,"(hits":[135,1]
,"misses)":[135,1]
,"unit-less":[135,1]
,"measure":[135,1]
,"fill":[135,2]
,"approximating":[135,1]
,"substituting":[135,1]
,"*access":[135,2]
,"*1\u002F(hits\u002Faccess)":[135,1]
,"*(eviction":[135,2]
,"\u002F(bytesize":[135,1]
,"\u002F(hits\u002Faccess)))":[135,1]
,"=(bytesize":[135,1]
,"\u002Fcountsize)":[135,2]
,"*1\u002F(h\u002Fa)":[135,1]
,"*hits)\u002F(access":[135,1]
,"*bytesize)":[135,1]
,"=(eviction":[135,1]
,"*hits)":[135,1]
,"\u002F(countsize":[135,1]
,"*(hits\u002Faccess)":[135,1]
,"{alpha})":[135,1]
,"factor":[135,1]
,"lead":[135,1]
,"=(hits":[135,1]
,"\u002F(hits\u002Faccess)":[135,1]
,"hit-rate":[135,1]
,"pure":[135,1]
,"phase)":[135,1]
,"deviate":[135,1]
,"occupy":[135,1]
,"1\u002Fnth":[135,1]
,"re-adjust":[135,1]
,"match":[135,1]
,"covers":[137,1]
,"features":[137,1,206,1,249,1,265,1]
,"move":[137,1,181,1,272,1]
,"keeping":[137,1]
,"fault":[137,1,143,1,144,1]
,"faulting":[137,1]
,"resident":[137,1,139,1]
,"faulted":[137,1]
,"time-to-idle":[137,1]
,"maintain":[137,1,176,1,179,1,206,1,226,1,229,1]
,"switches":[138,1,163,1]
,"topic.>>":[138,1]
,"critical":[138,1]
,"maintaining":[138,1,240,1]
,"timetoidleseconds":[138,1,141,1,179,1,297,1]
,"timetoliveseconds":[138,1,141,1,179,1,297,1]
,"bring":[138,1]
,"allowed)":[138,1]
,"<<ffc-add":[138,1]
,"raise":[138,1]
,"flag":[138,1,297,1]
,"finite":[138,1]
,"tti\u002Fttl":[138,1]
,"affects":[138,1,140,1]
,"non-expired":[139,1]
,"remain":[139,1,160,1,235,1]
,"pin":[139,3,235,1]
,"(store)":[139,1]
,"accomplished":[139,1]
,"incache":[139,3]
,"performance-enhancing":[139,1]
,"unexpired":[139,1,140,1]
,"localmemory":[139,5]
,"store\u0027s":[139,1]
,"<pinning":[139,3]
,"store=\u0022":[139,3]
,"interaction":[139,1]
,"eligible":[139,1]
,"maxentriesincache":[139,1]
,"grow":[139,1]
,"data)":[139,1,141,1,179,1,226,1]
,"understood":[139,1]
,"conclude":[139,1]
,"surpasses":[139,1]
,"(off-heap":[139,1]
,"products.)":[139,1]
,"unpin":[139,1]
,"cache.removeall":[139,1,255,1]
,"(cache.dispose":[139,1]
,"cachemanager.removecache":[139,1,303,1]
,"locally":[139,1]
,"localrestartable)":[139,1]
,"3600":[140,1,195,1]
,"idle":[140,1,261,1]
,"(timetoidleseconds)":[140,1]
,"periodic":[140,1]
,"evictor":[140,1,249,3]
,"(timetoliveseconds)":[140,1]
,"freshness":[141,2,176,2,179,2]
,"(sors)":[141,1]
,"accommodate":[141,1]
,"external":[141,2,179,2,200,1,224,2,225,1,227,1]
,"processes":[141,1,179,1]
,"(forcing":[141,1,179,1]
,"re-load":[141,1,179,1,180,1]
,"sor)":[141,1,179,1]
,"bus":[141,4,179,4]
,"post":[141,1,174,1,179,1,255,1]
,"subscribe":[141,1,179,1]
,"invalidating":[141,1,179,1]
,"triggers":[141,2,179,2]
,"trigger":[141,3,179,3,263,1]
,"accomplish":[141,1,179,1]
,"task":[141,1,179,1]
,"publish":[141,1,179,1,227,1]
,"downside":[141,1,179,1]
,"inadvisable":[141,1]
,"heavy-weight":[141,1,179,1]
,"publishing":[141,1,179,1]
,"cooperation":[141,1,179,1]
,"re-populate":[141,1,179,1]
,"re-synchronize":[141,1,179,1]
,"consideration":[141,1]
,"shorter":[141,1,179,1]
,"-meaning":[141,1,179,1]
,"numbers":[141,1,179,1,190,1]
,"generates":[141,1,179,1,190,1]
,"modestly":[141,1,179,1]
,"five":[141,1,210,2,298,1,300,1]
,"produce":[141,1,153,1]
,"reductions":[141,1,179,1]
,"re-write":[143,1]
,"capabilities":[143,1]
,"inserted":[143,1,190,1,297,1]
,"indicates":[143,1,211,1]
,"products.>>":[143,1]
,"choices":[143,1,224,1,226,1,229,1]
,"2.6":[143,1,145,1,146,4]
,"enterprise-ready":[143,1]
,"resilience":[143,1]
,"shutdown":[143,1,144,1,146,1,168,3,170,15,171,2,303,3]
,"planned":[143,1,146,1]
,"unplanned":[143,1]
,"survives":[143,1]
,"crashes":[143,1]
,"resume":[143,1]
,"terabytes":[143,2]
,"minimizing":[143,1,190,1]
,"downtime":[143,1]
,"real-time":[143,1]
,"tolerance":[143,1]
,"backup":[143,1]
,"mirror":[143,1,144,1]
,"right":[143,1,177,1,193,1,263,1]
,"possibilities":[143,1]
,"datasets":[143,2]
,"time-based":[143,1]
,"moving":[143,1,272,1]
,"locations":[143,1]
,"range":[143,1,190,1,211,1]
,"key-value":[143,1]
,"operational":[143,1]
,"speeds":[143,1]
,"restartstore":[144,5]
,"on-disk":[144,1]
,"represent":[144,1]
,"developers":[144,1,166,1]
,"explanation":[144,1]
,"expects":[144,1]
,".>>":[144,1,237,1]
,"synchronouswrites":[144,5]
,"(on-heap":[144,1]
,"off-heap)":[144,1]
,"website":[144,1,156,1,165,2,181,1,235,1]
,"synchronouswrites=\u0022":[144,4,146,2]
,"proceed":[144,1,182,1]
,"acknowledgment":[144,1]
,"recovered":[144,2,146,1]
,"synced":[144,1,249,1]
,"2-3":[144,1]
,"recorded":[144,1]
,"caller":[144,1]
,"middle":[144,1]
,"configuration.for":[144,1]
,"path=\u0022\u002Fauto\u002Fdefault\u002Fpath":[145,1]
,"stays":[145,1]
,"(with":[145,1]
,"disk)":[145,1]
,".diskstore":[145,1]
,".path":[145,1]
,"(\u0022\u002Fpath\u002Fto\u002Fstore\u002Fdata":[145,1]
,"my-cache":[145,2]
,".maxbyteslocalheap":[145,1]
,"(16":[145,1]
,"memoryunit.megabytes)":[145,1]
,"(strategy.localtempswap))":[145,1]
,"cachemanagerconfig.addcache":[145,1]
,"(cacheconfig)":[145,1]
,"previous":[146,6,171,1,197,1]
,"higher)":[146,1]
,"2.5":[146,4,177,1,193,1,195,1,255,1]
,"strong":[146,1]
,"(enterprise":[146,1]
,"?>>>>":[146,1]
,"non-fault-tolerant":[146,2]
,"fault-tolerant":[146,2]
,"above*overflowtodisk=\u0022":[146,1]
,"diskpersistent=\u0022":[146,3]
,"\u0022**temporary":[146,1]
,"overflowtodisk=\u0022":[146,3,177,1,193,1,208,2,220,1,221,1,222,1,226,1,229,2]
,"(no":[146,1]
,"usage)":[146,1]
,"**in":[146,1]
,"overflowtodisk":[146,3,266,1]
,"diskpersistent":[146,2,266,1]
,"corrupt":[146,1]
,"checking":[146,1,180,1]
,"measures":[146,1]
,"emptied":[146,1]
,"diskpersistence":[146,1]
,"diskstorebootstrapcacheloaderfactory":[146,1]
,"<terracotta>":[146,1,300,1]
,"invalid":[146,1]
,"mandatory":[146,1,174,1,294,2]
,"checker":[147,1,148,3]
,"<<ffc-ask":[148,1]
,"isn\u2019t":[148,1]
,"guides":[148,1,288,1]
,".it":[148,1]
,"discoers":[148,1]
,"use.>>":[148,1]
,"non-identifying":[148,1]
,"feedback":[148,1]
,"operating":[148,1,298,1]
,"architectures":[148,1]
,"\u2002-dnet.sf.ehcache.skipupdatecheck=true":[148,1]
,"updatecheck":[148,1]
,"outer":[148,1]
,"echace>":[148,1]
,"xmlns:xsi=\u0022":[148,1,177,2,178,1,193,2,195,2,221,1,266,1,278,1,283,1]
,"http:\u002F\u002Fwww.w3.org\u002F2001\u002Fxmlschema-instance":[148,1,177,2,178,1,193,2,195,2,221,1,266,1,278,1,283,1]
,"xsi:nonamespaceschemalocation=\u0022":[148,1,177,1,178,1,193,1,195,1,221,1,266,1,278,1,283,1]
,"updatecheck=\u0022":[148,1,278,1]
,"monitoring=\u0022":[148,1,278,1]
,"autodetect":[148,1,278,1]
,"dynamicconfig=\u0022":[148,1,278,1]
,"net.sf.ehcache.disabled":[150,1]
,"(using":[150,2]
,"-dnet.sf.ehcache.disabled=true":[150,1,303,1]
,"line)":[150,2]
,"disables":[150,1]
,"(puts":[150,1]
,"discarded)":[150,1]
,"net.sf.ehcache.use.classic.lru":[150,1]
,"older":[150,1,265,1]
,"lrumemorystore":[150,1]
,"ease":[150,1]
,"migration":[150,1]
,"composed":[153,1]
,"strain":[153,1]
,"collector":[153,1,154,2]
,"2.3":[153,1,265,1]
,"detecting":[153,1]
,"pause":[153,2,154,1]
,"become":[153,1,182,1,241,1]
,"noticeable":[153,1]
,"clearest":[153,1]
,"jstat":[153,2]
,"-gcutil":[153,1]
,"<pid>":[153,1]
,"1000000":[153,1]
,"watch":[153,1,211,1]
,"paused":[153,1]
,"jump":[153,1]
,"acceptable":[153,1]
,"contexts":[153,1,224,1]
,"suggestion":[154,1]
,"virtual":[154,1,170,4,298,2]
,"-xx":[154,4]
,"disableexplicitgc":[154,2]
,"useconcmarksweepgc":[154,2]
,"-xx:newsize=<1\u002F4":[154,1]
,"size>":[154,1]
,"-xx:survivorratio=16":[154,1]
,"system.gc":[154,1]
,"helps":[154,1]
,"jmx":[155,1,156,7,158,3,160,2,162,1,247,2]
,"instrumenting":[156,1]
,"infrastructure":[156,1,190,1,224,1,230,1]
,"net.sf.ehcache.management":[156,1]
,"mbeans":[156,2,157,4,160,8,161,2]
,"managementservice":[156,1,160,2]
,"libraries":[156,1,174,1,178,1,284,1]
,"leakage":[156,1]
,"dependencies":[156,1,213,1,259,1,265,1]
,"net.sf.ehcache.management.managementservice.registermbeans":[156,1]
,"selection":[156,1]
,"mbeanserver":[156,1,157,1,158,1,160,7,161,4]
,"cachestatistics":[156,1,157,2,158,1,159,1,160,2,161,3]
,"illustrated":[156,1]
,"image":[156,1]
,"console":[156,1]
,"(tmc)":[156,1]
,"tmc":[156,2]
,"administration":[156,1]
,"mbean":[157,5,158,1,160,1]
,"traversal":[157,2,160,2]
,"likewise":[157,1]
,"remoting":[158,1,204,1]
,"agent":[158,1,161,1,190,3,248,1]
,"mbeanserverconnection":[158,1]
,"remotely":[158,2]
,"ehcache.jar":[158,1,272,1]
,"client\u0027s":[158,1]
,"jconsole":[158,1,160,1,161,3,303,1]
,"-j-djava.class.path=ehcache.jar":[158,1]
,"objectname":[159,1]
,"naming":[159,1]
,"scheme":[159,1]
,"net.sf.ehcache:type=cachemanager":[159,1]
,"name=<cachemanager>":[159,1]
,"net.sf.ehcache:type=cache":[159,1]
,"cachemanager=<cachemanagername>":[159,3]
,"name=<cachename>":[159,3]
,"net.sf.ehcache:type=cacheconfiguration":[159,1]
,"net.sf.ehcache:type=cachestatistics":[159,1]
,"managementservice.registermbeans":[160,1,161,1]
,"initiate":[160,1]
,"instrumented":[160,1]
,"initiated":[160,1]
,"deregistered":[160,1]
,"undeployed":[160,1]
,"*with":[160,1]
,"**while":[160,1]
,"*items":[160,1]
,"*points":[160,1]
,"closer":[160,1]
,"interest":[160,1,173,1]
,"*management":[160,1]
,"tools":[160,1,226,1,303,1]
,"moreover":[160,1]
,"*serializable":[160,1]
,"*finally":[160,1]
,"**once":[160,1]
,"*mbeanserver":[160,1]
,"shutsdown":[160,1]
,"unregistered":[160,1]
,"registercachemanager":[160,2]
,"registercaches":[160,2]
,"registercacheconfigurations":[160,2]
,"registercachestatistics":[160,1]
,"registermbeans":[160,1]
,"(net.sf.ehcache.cachemanager":[160,1]
,"registercachestatistics)":[160,1]
,"jdk":[161,1,298,1,300,2,309,1]
,"platform":[161,1,185,1]
,"=managementfactory.getplatformmbeanserver":[161,1]
,"(manager":[161,1]
,"true)":[161,1]
,"tutorial":[162,2,245,1]
,"docs.see":[162,1]
,"entirely":[163,1]
,"on\u002Foff":[163,1]
,"incur":[163,2,179,1]
,"slfj":[165,1]
,"pertains":[165,1]
,"deploy":[165,1,288,1]
,"maven":[165,4,173,1,237,1,278,1]
,"kit":[165,3,237,4]
,"dependency":[165,1,237,5,259,2,262,1,278,1]
,"declarations":[165,1]
,"pom":[165,1,237,1]
,"<dependency>":[165,3,237,3]
,"<groupid>":[165,3,237,3,278,1]
,"org.slf4j":[165,3]
,"<\u002Fgroupid>":[165,3,237,3,278,1]
,"<artifactid>":[165,3,237,3,278,1]
,"slf4j-jdk14":[165,1]
,"<\u002Fartifactid>":[165,3,237,3,278,1]
,"<version>":[165,3,237,1,278,1]
,"1.5.8":[165,3]
,"<\u002Fversion>":[165,3,237,3,278,1]
,"<\u002Fdependency>":[165,3,237,3]
,"slf4j-log4j12":[165,1]
,"slf4j-simple":[165,1]
,"slf4j-api":[165,1]
,"jars":[165,1,174,1,183,1,252,1,256,1]
,"everything":[165,1,190,1,208,1]
,"seeks":[166,1]
,"trade":[166,1]
,"informing":[166,1]
,"production-support":[166,1]
,"cluttering":[166,1]
,"rewritten.>>":[166,1]
,"warn":[166,1,301,1,309,1]
,"unusual":[166,1]
,"trace":[166,1,174,1,280,1,304,1]
,"surrounded":[166,1]
,"guard":[166,1]
,"incurred":[166,1]
,"restarting":[166,1]
,"shutting":[167,1,170,2,303,1]
,"cachemanager.shutdown":[168,1,303,2]
,"shutdownlistener":[168,1]
,"servletcontextlistener":[169,2]
,"descriptor":[169,1]
,"<listener>":[169,1]
,"<listener-class>":[169,1]
,"net.sf.ehcache.constructs.web.shutdownlistener":[169,1]
,"<\u002Flistener-class>":[169,1]
,"<\u002Flistener>":[169,1]
,"net.sf.ehcache.enableshutdownhook=true":[170,1]
,"hooks":[170,1,267,1]
,"inherently":[170,1,297,1]
,"sequence":[170,1]
,"preventing":[170,2]
,"program":[170,1,211,1]
,"system.exit":[170,1]
,"non-daemon":[170,1]
,"exits":[170,1]
,"terminated":[170,1]
,"ctrl-c":[170,1]
,"corresponds":[170,1,207,1]
,"kill":[170,4]
,"-sigterm":[170,1]
,"pid":[170,4]
,"-15":[170,1]
,"aborts":[170,1]
,"sigkill":[170,1]
,"signal":[170,1]
,"-sigkill":[170,1]
,"terminateprocess":[170,1]
,"windows":[170,1,211,2]
,"dirty":[171,3]
,"contradict":[171,1]
,"2.8":[171,1]
,"appeard":[171,1]
,"pertained":[171,1]
,"replications":[171,1,206,1,207,1,208,1,220,1]
,"debugger":[173,2,174,3,211,1,304,2]
,"ehcache-1.x-remote-debugger.jar":[173,1]
,"join":[173,1,174,1]
,"report":[173,1,249,1]
,"window":[173,1]
,"identify":[173,1,275,1]
,"packaging":[173,1]
,"executable":[173,1]
,"tested":[173,1,222,1,224,1,231,3,271,1,287,4]
,"rmi-based":[173,1,207,1,210,1,307,1]
,"-jar":[174,1]
,"ehcache-debugger-1.5.0.jar":[174,1]
,"path_to_ehcache.xml":[174,1]
,"[cachetomonitor]":[174,1]
,"arguments":[174,1,272,1]
,"app\u002Fconfig\u002Fehcache.xml":[174,1]
,"distributedcache1":[174,1]
,"print":[174,1]
,"prints":[174,4]
,"class-path":[174,3]
,"manifest":[174,2]
,"debugger\u0027s":[174,1]
,"blank":[174,1,197,1]
,"(showing":[174,1]
,"classpath)":[174,1]
,"lib\u002Fmy.jar":[174,1]
,"lib\u002Fmyloggerjar":[174,1]
,"output":[174,2]
,"periodically":[174,1,249,1,297,1]
,"produced":[174,1]
,"remotedebuggertest":[174,1]
,"samplecache19":[174,1]
,"samplecache20":[174,1]
,"samplecache26":[174,1]
,"samplecache42":[174,1]
,"samplecache33":[174,1]
,"samplecache51":[174,1]
,"samplecache40":[174,1]
,"samplecache32":[174,1]
,"samplecache18":[174,1]
,"samplecache25":[174,1]
,"samplecache9":[174,1]
,"samplecache15":[174,1]
,"samplecache56":[174,1]
,"samplecache31":[174,1]
,"samplecache7":[174,1]
,"samplecache12":[174,1,206,2,217,1]
,"samplecache17":[174,1]
,"samplecache45":[174,1]
,"samplecache41":[174,1]
,"samplecache30":[174,1]
,"samplecache13":[174,1]
,"samplecache46":[174,1]
,"samplecache4":[174,1,208,2]
,"samplecache36":[174,1]
,"samplecache29":[174,1]
,"samplecache50":[174,1]
,"samplecache37":[174,1]
,"samplecache49":[174,1]
,"samplecache48":[174,1]
,"samplecache38":[174,1]
,"samplecache6":[174,1]
,"samplecache2":[174,1,208,2,220,2]
,"samplecache55":[174,1]
,"samplecache16":[174,1]
,"samplecache27":[174,1]
,"samplecache11":[174,1,206,2,217,1]
,"samplecache3":[174,1]
,"samplecache54":[174,1]
,"samplecache28":[174,1]
,"samplecache10":[174,1]
,"samplecache8":[174,1]
,"samplecache47":[174,1]
,"samplecache5":[174,1]
,"samplecache53":[174,1]
,"samplecache39":[174,1]
,"samplecache23":[174,1]
,"samplecache34":[174,1]
,"samplecache22":[174,1]
,"samplecache44":[174,1]
,"samplecache52":[174,1]
,"samplecache24":[174,1]
,"samplecache35":[174,1]
,"samplecache21":[174,1]
,"samplecache43":[174,1]
,"[key":[174,2]
,"=this":[174,2]
,"value=this":[174,2]
,"version=1":[174,1]
,"hitcount=0":[174,2]
,"creationtime":[174,2]
,"=1210656023456":[174,1]
,"lastaccesstime":[174,2]
,"version=1210656025351":[174,1]
,"=1210656024458":[174,1]
,"going":[174,1,178,1,182,1,201,1,272,1,295,2,304,2]
,"(log4j)":[174,1,304,1]
,"finest":[174,1,304,1]
,"(jdk)":[174,1,304,1]
,"net.sf.ehcache.distribution":[174,1,272,1,304,1]
,"volume":[174,1,304,1]
,"joined":[174,1,304,1]
,"peers":[174,1,206,4,207,1,208,1,209,1,220,1,301,1,304,1]
,"faq":[174,1,249,1,292,1]
,"commonly":[174,1,258,1,271,1,275,1,297,1]
,"solutions":[174,1,235,1]
,"forums":[174,1,176,1]
,"mailing":[174,1,176,1]
,"contact":[174,1,262,1]
,"recipes":[175,1,176,3]
,"concise":[176,1]
,"suggestions":[176,1]
,"ideas":[176,1]
,"lists":[176,1]
,"recipe":[176,1,177,1,179,1,180,1,181,1,182,1,183,1,184,1]
,"grails":[176,2,178,10,282,1,283,5,284,4,285,3]
,"2nd-level":[176,1]
,"properly":[176,1,179,1]
,"beneficial":[176,1]
,"deflect":[176,1,180,1]
,"overload":[176,2,181,2,182,2]
,"simultaneously":[176,1,181,4]
,"thundering":[176,1,181,4]
,"herd":[176,1,181,4]
,"bottleneck":[176,1,182,1]
,"wrapper":[176,1,184,2,276,3]
,"you\u0027d":[177,1,183,1,192,1]
,"entirety":[177,1,192,1]
,"served":[177,1,192,1]
,"modern":[177,1,192,1]
,"hardware":[177,1,192,1]
,"5,000":[177,1,192,1]
,"affording":[177,1,192,1]
,"infrequently":[177,1,192,1]
,"-your":[177,1]
,"filtering":[177,1,193,1]
,"re-deploy":[177,1,193,1]
,"away":[177,1,193,1,306,1]
,"you\u0027ll":[177,2,193,2]
,"(note":[177,1,262,1]
,"installed":[177,1,193,1]
,"application)":[177,1,193,1,263,1]
,"re-start)":[177,1,193,1]
,"setup":[177,1,193,1]
,"-add":[177,1,193,1]
,"<web-app":[177,1,193,1,195,1]
,"xmlns=\u0022":[177,1,193,1,195,1]
,"http:\u002F\u002Fxmlns.jcp.org\u002Fxml\u002Fns\u002Fjavaee":[177,2]
,"xsi:schemalocation=\u0022":[177,1,193,1,195,1]
,"http:\u002F\u002Fxmlns.jcp.org\u002Fxml\u002Fns\u002Fjavaee\u002Fweb-app_2_5.xsd":[177,1]
,"version=\u0022":[177,1,178,1,193,1,195,1,242,1,243,1,266,1,283,1]
,"<filter>":[177,1,193,1,195,3]
,"<filter-name>":[177,2,193,2,195,7]
,"<\u002Ffilter-name>":[177,2,193,2,195,7]
,"<filter-class>":[177,1,193,1,195,3]
,"net.sf.ehcache.constructs.web.filter.simplepagecachingfilter":[177,1,193,1,195,1]
,"<\u002Ffilter-class>":[177,1,193,1,195,3]
,"<\u002Ffilter>":[177,1,193,1,195,3]
,"<!--this":[177,1,193,1,195,1]
,"<filter-mapping>":[177,1,193,1,195,4]
,"<url-pattern>\u002F*<\u002Furl-pattern>":[177,1,193,1]
,"<\u002Ffilter-mapping>":[177,1,193,1,195,4]
,"<\u002Fweb-app>":[177,1,193,1]
,"-configure":[177,1,193,1]
,"reasonable":[177,1,193,1]
,".\u002Fmain\u002Fconfig\u002Fehcache.xsd":[177,1,193,1,195,1,221,1]
,"-start":[177,1,193,1]
,"pertaining":[177,1]
,"1.2rc1":[178,2,283,2]
,"ship":[178,1,283,1]
,"datasource.groovy":[178,1,283,1]
,"{cache.use_second_level_cache=true":[178,1,283,1]
,"cache.use_query_cache=true":[178,1,283,1]
,"cache.provider_class=\u0027org.hibernate.cache.ehcacheprovider":[178,1,283,1]
,"overriding":[178,1,190,1,283,1]
,"template":[178,1,262,1,283,1]
,"customize":[178,1,283,1]
,"conf":[178,1,283,1]
,"datasource.groovy)":[178,1,283,1]
,"demo":[178,1,245,2,283,1]
,"starter":[178,1,283,1]
,"1.0":[178,1,242,1,243,1,266,1,283,1]
,"encoding=\u0022":[178,1,242,1,243,1,266,1,283,1]
,"utf-8":[178,1,242,1,243,1,266,1,283,1]
,"org.hibernate.cache.updatetimestampscache":[178,1,244,1,283,1]
,"org.hibernate.cache.standardquerycache":[178,1,244,1,283,1]
,"springcache":[178,3,284,3]
,"bean":[178,2,275,1,284,2]
,"(typically":[178,1,181,1,284,1]
,"methods)":[178,1,284,1]
,"controllers":[178,1,262,2,284,1]
,"controller":[178,1,262,4,284,1]
,"ehcache-web":[178,1,189,1,284,1]
,"clustering":[178,1,230,1,285,2,289,2]
,"sessions":[178,2,285,3]
,"blog":[178,1,183,1,251,1,255,1]
,"great":[178,1,251,1]
,"introduction":[178,1,189,1,251,1]
,"tomcat":[178,1,211,4,270,1,271,7,272,8,285,1,300,3,301,1]
,"addresses":[179,1,181,1,182,1]
,"sors)":[179,1]
,"weren\u0027t":[179,1]
,"mind":[179,1]
,"don\u0027t":[179,1,249,1,272,1]
,"unadvisable":[179,1]
,"programmer":[179,1]
,"concern":[179,1]
,"data-freshness":[179,1]
,"discusses":[180,1]
,"desirable":[180,1,204,1]
,"excessively":[180,1]
,"unnecessarily":[180,1]
,"signaling":[180,1]
,"real":[180,1]
,"non-existent":[180,1]
,"\u002F\u002Fcache":[180,1]
,"null))":[180,1]
,"{\u002F\u002Fnothing":[180,1]
,"expired)":[180,1]
,"{\u002F\u002Fthere":[180,1]
,"{\u002F\u002Fa":[180,2]
,"(making":[180,1]
,"some.cache.name":[180,1]
,"coordinate":[181,1]
,"serviced":[181,1]
,"users)":[181,1]
,"story":[181,3]
,"surfaced":[181,1]
,"approximately":[181,4]
,"publication":[181,1]
,"clicked":[181,1]
,"evaluating":[181,1]
,"(line":[181,1]
,"105)":[181,1]
,"contents":[181,1,297,1]
,"reach":[181,1,235,1]
,"conclusion":[181,1]
,"designer":[181,1]
,"spikes":[181,1]
,"activity":[181,1]
,"worse":[181,1,182,1]
,"simultaneous":[181,1,182,1]
,"increases":[181,1]
,"easy":[182,1,211,1]
,"understand":[182,1]
,"read-mostly":[182,2]
,"use-cases":[182,1]
,"hundreds":[182,1,294,1]
,"scenarios":[182,1,190,1,197,1,209,1,310,1]
,"frequent":[182,1]
,"almost":[182,1,240,1]
,"slows":[182,1]
,"killed":[182,1]
,"heavy":[182,1,248,1]
,"quick":[182,1]
,"ensured":[182,1]
,"saves":[182,1]
,"back-end":[182,2]
,"cache-write":[182,1]
,"database-write":[182,1]
,"finished":[182,1]
,"spread":[182,1]
,"consolidate":[182,1]
,"writemode":[182,1]
,"write_behind":[182,1]
,"email":[182,1,262,1]
,"pulling":[182,1]
,"un-clustered":[182,1]
,"background":[182,2]
,"scaled":[182,1]
,"reasons":[182,1,289,1]
,"jvms":[182,1]
,"loss":[182,1]
,"advanced":[182,1,243,1]
,"nature":[182,1]
,"restrictions":[182,1,289,1]
,"code.google.com":[183,1,256,5]
,"successor":[183,1]
,"spring-modules":[183,1]
,"composite":[183,1,256,1]
,"getdog":[183,4,256,4]
,"fido":[183,7,256,7]
,"generating":[183,1,256,1]
,"returning":[183,1,256,1]
,"spot":[183,2,256,2]
,"repeated":[183,1,256,1]
,"@cacheable":[183,1,254,2,255,3,256,1]
,"(name=\u0022":[183,1,256,1]
,"beans":[183,1,256,1]
,"declaration":[183,1,201,1,256,1,295,1]
,"<ehcache:annotation-driven":[183,1,256,1]
,"cache-manager=\u0022":[183,1,256,1]
,"ehcachemanager":[183,1,256,1]
,"tedious":[184,1]
,"value-based":[184,1]
,"(like":[184,1]
,"hashmap)":[184,1]
,"hide":[184,1]
,"here\u0027s":[184,1]
,"cachewrapper":[184,2,276,4]
,"{void":[184,1,276,1]
,"net.sf.ehcache.ehcache":[184,1]
,"net.sf.ehcache.element":[184,1,227,2,252,1]
,"ehcachewrapper":[184,2,276,3]
,"{this.cachename":[184,1,276,1]
,"=cachename":[184,1,276,1]
,"this.cachemanager":[184,1,276,1]
,"=cachemanager":[184,1,276,1]
,"{getcache":[184,1,276,1]
,".put":[184,1,276,1]
,"=getcache":[184,1,276,1]
,".get":[184,1,276,1]
,"(v)":[184,1,276,1]
,"2.10.1":[185,1]
,"tables":[185,1,244,1]
,"amazing":[189,1]
,"gzipping":[189,1,190,3,197,1]
,"transmission":[189,1,200,1,213,1]
,"excellent":[189,1,254,1]
,"candidates":[189,1]
,"largest":[189,1]
,"concepts":[190,1]
,"compressible":[190,1]
,"http":[190,6]
,"responses":[190,4]
,"html":[190,1]
,"json":[190,1]
,"fragments)":[190,1]
,"text":[190,1]
,"text\u002Fhtml":[190,1]
,"uri":[190,1]
,"\u002Fadmin\u002Fsomepage.jsp":[190,1]
,"id=1234&name=beagle":[190,1]
,"technique":[190,1]
,"wide":[190,1]
,"host":[190,1,206,1,207,3,211,1,272,1,301,2]
,"domains":[190,1]
,"software":[190,1,224,1]
,"parse":[190,1]
,"calculatekey":[190,1]
,"(javax.servlet.http.httpservletrequest)":[190,1]
,"init-param":[190,2]
,"sub-classing":[190,1]
,"useless":[190,1]
,"duplicate":[190,1]
,"blockingtimeoutmillis":[190,2]
,"overwhelmed":[190,1]
,"responded":[190,1]
,"net.sf.ehcache.constructs.blocking.locktimeoutexception":[190,1]
,"efficiencies":[190,1]
,"speedups":[190,1]
,"gained":[190,1]
,"gzipped":[190,2,197,3]
,"accept":[190,4]
,"gzip":[190,9,197,2,271,1,289,1]
,"encoding":[190,6,197,1]
,"http1.1":[190,1]
,"advertise":[190,1]
,"header":[190,3,197,2,310,1]
,"browsers":[190,3,197,1]
,"5.2":[190,1]
,"macintosh":[190,1]
,"capable":[190,1]
,"accepting":[190,1]
,"robots":[190,1]
,"advertised":[190,1]
,"acceptance":[190,1]
,"accept-encoding":[190,1]
,"ungzipped":[190,1]
,"ungzipping":[190,1]
,"headers":[190,5]
,"simplecachingheaderspagecachingfilter":[190,1,195,2]
,"etag":[190,1]
,"last-modified":[190,1]
,"conditional":[190,2]
,"ever":[190,1,240,1]
,"natural":[190,1,275,1]
,"defraying":[190,1]
,"init-params":[190,2]
,"varyheader":[190,2]
,"-set":[190,1]
,"vary:accept-encoding":[190,1]
,"proxies":[190,1]
,"<init-param>":[190,1,195,6]
,"<param-name>":[190,1,195,6]
,"<\u002Fparam-name>":[190,1,195,6]
,"<param-value>":[190,1,195,6]
,"<\u002Fparam-value>":[190,1,195,6]
,"<\u002Finit-param>":[190,1,195,6]
,"re-entrance":[190,1]
,"reentered":[190,1,197,1]
,"reentry":[190,1]
,"situation":[190,1]
,"monitored":[190,1]
,"gzips":[190,1]
,"variant":[190,1]
,"applicable":[190,1]
,"time-or":[192,1]
,"user-specific":[192,1]
,"serve":[192,1]
,"web-page":[193,1]
,"(these":[193,1]
,"http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee":[193,2,195,2]
,"http:\u002F\u002Fjava.sun.com\u002Fxml\u002Fns\u002Fjavaee\u002Fweb-app_2_5.xsd":[193,1]
,"cachepage1cachingfilter":[195,4]
,"suppressstacktrace":[195,3]
,"net.sf.ehcache.constructs.web.filter.simplepagefragmentcachingfilter":[195,1]
,"net.sf.ehcache.constructs.web.filter.simplecachingheaderspagecachingfilter":[195,1]
,"cachedpage2cache":[195,2]
,"<url-pattern>\u002Fcachedpage.jsp":[195,1]
,"<\u002Furl-pattern>":[195,4]
,"<dispatcher>":[195,3]
,"<\u002Fdispatcher>":[195,3]
,"forward":[195,1]
,"<url-pattern>\u002Finclude\u002Ffooter.jsp":[195,1]
,"<url-pattern>\u002Ffragment\u002Fcachedfragment.jsp":[195,1]
,"<url-pattern>\u002Fcachedpage2.jsp":[195,1]
,"auto\u002Fdefault\u002Fpath":[195,1]
,"<!--page":[195,1]
,"simplecachingheaderstimeoutpagecachingfilter":[195,1]
,"filternonreentrantexception":[197,2]
,"filter\u0027s":[197,1]
,"dofilter":[197,1]
,"reentrant":[197,1]
,"unblocked":[197,1]
,"responseheadersnotmodifiableexception":[197,2]
,"alreadygzippedexception":[197,1]
,"triple":[197,1]
,"unreadable":[197,1]
,"httpservletresponse":[197,1]
,"setheader":[197,2]
,"overwrites":[197,1,209,1]
,"replicating":[200,1,300,1,307,1]
,"rmi":[200,4,203,1,204,7,210,1,211,2,220,1,272,4,298,1,301,1]
,"peerprovider":[200,1,204,1]
,"cachemanagerpeerlistener":[200,1,204,1,207,4]
,"bootstrap":[200,1,204,1,209,14,275,1]
,"jgroups":[200,4,212,1,213,5,216,2,218,1,219,1,222,4,226,2]
,"flexible":[200,1,213,1]
,"unicast":[200,1,213,1,218,1,221,1]
,"multicast":[200,1,206,6,211,8,213,1,215,1,216,1,217,2,289,2]
,"peerproviderfactory":[200,1,213,1,226,1]
,"jmsreplication":[200,1,224,2]
,"organisations":[200,1]
,"investment":[200,1,224,1]
,"leverage":[200,1,224,1,235,1]
,"pushing":[200,1,224,1]
,"publishers":[200,1,224,1,225,1,227,3]
,"jmscacheloader":[200,1,224,1,229,3,231,2,232,2,300,2]
,"sends":[200,1,224,1]
,"<cachemanagerpeerproviderfactory":[201,1,206,3,217,1,218,1,221,1,222,1,226,2,266,1,295,1]
,"net.sf.ehcache.distribution.rmicachemanagerpeerproviderfactory":[201,1,206,4,295,1]
,"peerdiscovery=automatic":[201,1,206,2,295,1]
,"multicastgroupaddress=230.0.0.1":[201,1,206,1,295,1]
,"multicastgroupport=4446":[201,1,206,1,295,1]
,"<cachemanagerpeerlistenerfactory":[201,1,207,1,266,1,278,1,295,1,310,1]
,"net.sf.ehcache.distribution.rmicachemanagerpeerlistenerfactory":[201,1,207,1,295,1,310,1]
,"net.sf.ehcache.distribution.rmicachereplicatorfactory":[201,2,208,3,295,2]
,"sampledistributedcache1":[201,1,295,1]
,"peer":[201,1,206,14,209,3,211,1,215,1,272,2,295,1,301,2,310,2]
,"listening":[202,1,228,1,295,1]
,"plumbed":[202,1,295,1]
,"peering":[202,1,295,1]
,".getcachemanager":[202,1,295,1]
,"getcachemanagereventlistenerregistry":[202,1]
,".notifycacheadded":[202,1,295,1]
,"tcp":[204,1,206,1,215,1,216,1,218,2]
,"socket":[204,1]
,"transmittable":[204,1]
,"format":[204,1,238,1,289,1]
,"firewalls":[204,1]
,"point-to-point":[204,1]
,"traffic":[204,1]
,"communications":[204,1]
,"provider":[206,1,229,1,235,2,236,1,238,1,239,3,240,1,248,7,249,4,258,1,262,8,309,1]
,"discovery":[206,11,211,1,215,1]
,"notion":[206,1]
,"acting":[206,1]
,"master":[206,1]
,"manual":[206,5,226,1,229,1,254,3,294,1]
,"cachemanagerpeerproviderfactory":[206,3]
,"establish":[206,1]
,"deletion":[206,1]
,"members":[206,1]
,"priori":[206,1]
,"send":[206,1,226,1,227,1,301,1]
,"heartbeats":[206,2]
,"heard":[206,1]
,"dropped":[206,1]
,"sending":[206,2,207,1,224,1,228,1,229,1,307,1]
,"admitted":[206,1]
,"multicastgroupaddress=multicast":[206,1]
,"multicastgroupport=port":[206,1]
,"timetolive=0-255":[206,1]
,"this)":[206,1,265,1]
,"hostname=the":[206,1]
,"hostname":[206,1,207,5,301,1]
,"packets":[206,1,211,2]
,"(relevant":[206,1]
,"mulithomed":[206,1]
,"hosts":[206,1,207,1,215,1,216,1,272,2]
,"server1":[206,5,217,1]
,"server2":[206,5,217,1]
,"distribute":[206,2]
,"timetolive=32":[206,1]
,"technical":[206,1,289,1]
,"difficulties":[206,1]
,"router":[206,1]
,"datagrams":[206,1]
,"vice":[206,1]
,"versa":[206,1]
,"peerdiscovery=manual":[206,3]
,"rmiurls=\u002F\u002Fserver:port\u002Fcachename":[206,1]
,"rmiurls":[206,1]
,"rmiurls=\u002F\u002Fserver2:40001\u002Fsamplecache11":[206,1]
,"|\u002F\u002Fserver2:40001\u002Fsamplecache12":[206,1]
,"rmiurls=\u002F\u002Fserver1:40001\u002Fsamplecache11":[206,1]
,"|\u002F\u002Fserver1:40001\u002Fsamplecache12":[206,1]
,"listens":[207,2]
,"specifiying":[207,1]
,"cachemanagerpeerlistenerfactory":[207,2,310,1]
,"-comma":[207,1]
,"component":[207,1]
,"rmicachemanagerpeerlistener":[207,1]
,"rmicachemanagerpeerlistenerfactory":[207,1]
,"hostname=localhost":[207,1]
,"port=40001":[207,1,310,1]
,"sockettimeoutmillis=2000":[207,1]
,"(optional)":[207,2]
,"multihomed":[207,1]
,"reachability":[207,1]
,"initialisation":[207,1]
,"unreachable":[207,1]
,"refuse":[207,1]
,"refused":[207,1,301,4]
,"inetaddress.getlocalhost":[207,1,301,1]
,".gethostaddress":[207,1]
,"localhost":[207,1,272,2]
,"loopback":[207,1,301,3]
,"127.0.0.1":[207,1,301,3]
,"(mandatory)":[207,1,226,4,229,4]
,"sockettimeoutmillis":[207,1,310,2]
,"sockets":[207,1]
,"2000ms":[207,1]
,"replicators":[208,1,226,1,266,1]
,"replicates":[208,1,209,1,220,1,225,1,230,1]
,"<!--sample":[208,2,220,1]
,"replicateasynchronously=true":[208,2,220,2,221,1,222,1,226,1]
,"replicateputs=true":[208,2,220,2,221,1,222,1,226,1]
,"replicateupdates=true":[208,2,220,2,221,1,222,1,226,1]
,"replicateupdatesviacopy=false":[208,1,220,1,221,1,222,1,229,2]
,"replicateremovals=true":[208,2,220,2,221,1,222,1,226,1]
,"-use":[208,1,220,1]
,"recognises":[208,1]
,"removals":[208,1,220,1]
,"asyncrhonous":[208,1,220,1]
,"replicateupdatesviacopy=true":[208,1,220,1,226,1]
,"typing":[208,1]
,"rmicachereplicatorfactory":[208,2]
,"missing":[208,1]
,"incoherent":[209,1]
,"partially":[209,1]
,"coherent":[209,1]
,"batches":[209,1]
,"overwritten":[209,3]
,"committing":[209,1]
,"commits":[209,1]
,"accepted":[209,1]
,"coherency":[209,1]
,"maintained":[209,1]
,"integration":[210,2,224,1,228,1,231,2,232,1,237,2,252,1,254,1,259,1,262,1,271,1,300,1]
,"rmicachereplicatorit.java":[210,1]
,"https:\u002F\u002Ffisheye.terracotta.org\u002Fbrowse\u002Fehcache\u002Fbranches\u002Fehcache-2.10.1\u002Fehcache-core\u002Fsrc\u002Ftest\u002Fjava\u002Fnet\u002Fsf\u002Fehcache\u002Fdistribution\u002Fthe":[210,1]
,"representing":[210,1]
,"spaces":[211,2,272,2]
,"install":[211,1,235,1,259,7,262,2]
,"workaround":[211,1,272,2]
,"relies":[211,1]
,"routers":[211,1]
,"virtualisation":[211,1]
,"xen":[211,1]
,"vmware":[211,1]
,"card":[211,1]
,"heartbeat":[211,1,289,1]
,"arrive":[211,1]
,"propagating":[211,2]
,"far":[211,3,297,1,304,1]
,"badly":[211,1]
,"misnamed":[211,1]
,"packet":[211,1]
,"forwarded":[211,1]
,"restricted":[211,5,268,1]
,"subnet":[211,2]
,"128":[211,1]
,"continent":[211,1]
,"255":[211,1]
,"unrestricted":[211,1]
,"propagates":[211,1]
,"restrict":[211,1]
,"expand":[211,1]
,"side":[213,1]
,"stacks":[213,1,216,1,226,1]
,"jgroupscachemanagerpeerproviderfactory":[213,1,216,2,222,1,226,1]
,"globally":[213,1,225,1,261,1,262,1,297,1]
,"jgroupscachereplicatorfactory":[213,1,216,1,220,1,225,1]
,"udp":[215,1,216,1,217,2,219,1,221,1]
,"connect":[216,2,222,1,226,2]
,"sub-property":[216,1,226,1]
,"channel":[216,1,226,1]
,"net.sf.ehcache.distribution.jgroups.jgroupscachemanagerpeerproviderfactory":[217,1,218,1,222,1]
,"connect=udp":[217,1,221,1]
,"(mcast_addr=231.12.21.132":[217,1,221,1]
,"mcast_port=45566;)":[217,1]
,":ping":[217,1]
,"merge2:fd_sock:verify_suspect:pbcast.nakack:unicast:pbcast.stable:frag:pbcast.gms":[217,1]
,"tcpping":[218,2]
,"host1":[218,1]
,"host2":[218,2]
,"connect=tcp":[218,1]
,"(start_port=7800)":[218,1]
,"(initial_hosts=host1":[218,1]
,"[7800]":[218,2]
,"port_range=10":[218,1]
,"timeout=3000":[218,1]
,"num_initial_members=3":[218,1]
,"up_thread=true":[218,2]
,"down_thread=true)":[218,1]
,"verify_suspect":[218,1,219,1]
,"(timeout=1500":[218,1]
,"down_thread=false":[218,1]
,"up_thread=false)":[218,1]
,"pbcast.nakack":[218,1,219,1,221,1]
,"(down_thread=true":[218,1]
,"gc_lag=100":[218,1]
,"retransmit_timeout=3000)":[218,1,221,1]
,"pbcast.gms":[218,1,221,1]
,"(join_timeout=5000":[218,1,221,1]
,"join_retry_timeout=2000":[218,1,221,1]
,"shun=false":[218,1,221,1]
,"print_local_addr=false":[218,1]
,"down_thread=true":[218,1]
,"up_thread=true)":[218,1]
,"protocols":[219,1]
,"http:\u002F\u002Fwww.jgroups.org\u002Fjavagroupsnew\u002Fdocs\u002Fmanual\u002Fhtml_single\u002Findex.html":[219,1]
,"ping":[219,1,221,1,230,1]
,"fd_sock":[219,1]
,"(failure":[219,1]
,"detection)":[219,1]
,"(message":[219,2,255,1]
,"reliability)":[219,1]
,"pbcast.stable":[219,1,221,1]
,"collection)":[219,1]
,"cachereplicators":[220,1]
,"net.sf.ehcache.distribution.jgroups.jgroupscachereplicatorfactory":[220,2,221,1,222,1]
,"recognizes":[220,1]
,"asynchronousreplicationintervalmillis":[220,1]
,"1000ms":[220,1]
,"java.io.tmpdir\u002Fone":[221,1]
,"net.sf.ehcache.distribution.jgroups":[221,1]
,".jgroupscachemanagerpeerproviderfactory":[221,1]
,"mcast_port=45566":[221,1]
,"ip_ttl=32":[221,1]
,"mcast_send_buf_size=150000":[221,1]
,"mcast_recv_buf_size=80000)":[221,1]
,"(timeout=2000":[221,1]
,"num_initial_members=6)":[221,1]
,"merge2":[221,1]
,"(min_interval=5000":[221,1]
,"max_interval=10000)":[221,1]
,"fd_sock:verify_suspect":[221,1]
,"(timeout=1500)":[221,1]
,"(gc_lag=10":[221,1]
,"(timeout=5000)":[221,1]
,"(desired_avg_gossip=20000)":[221,1]
,"frag":[221,1]
,"print_local_addr=true)":[221,1]
,"samplecacheasync":[221,1,222,1,226,1,228,10]
,"extensively":[222,1]
,"programs":[222,1]
,"http:\u002F\u002Fwww.jgroups.org\u002Fmanual\u002Fhtml\u002Fch02.html":[222,1]
,"figured":[222,1]
,"paste":[222,1]
,"(java":[224,1]
,"service)":[224,1]
,"interacting":[224,1]
,"mature":[224,1]
,"enterprise":[224,2]
,"vendors":[224,1]
,"active":[224,1,226,2,229,1,231,1,232,3,300,1,303,1]
,"organizations":[224,1]
,"picked":[224,1]
,"subscribers":[224,1]
,"receiver":[224,1]
,"respond":[224,1,229,1]
,"subscribes":[225,1]
,"<topicbindingname>":[225,1]
,"publishes":[225,1]
,"jmscachemanagerpeerproviderfactory":[225,1,226,2,229,1]
,"wishing":[225,1]
,"box":[226,3,228,1]
,"activemq":[226,2,229,1,232,3,300,4]
,"auto":[226,1]
,"destinations":[226,1]
,"jmscachereplicatorfactory":[226,2]
,"shipped":[226,1]
,"{configuring":[226,1]
,"replication}":[226,1]
,"===========================the":[226,1]
,"independence":[226,1,229,1]
,"*initialcontextfactoryname":[226,1]
,"*providerurl":[226,1]
,"*provider":[226,1]
,"*topicconnectionfactorybindingname":[226,1]
,"binding":[226,2,229,2]
,"*topicconnectionfactory":[226,1]
,"*topicbindingname":[226,1]
,"*securityprincipalname":[226,1]
,"java.naming.security.principal":[226,1,229,1]
,"*securitycredentials":[226,1]
,"java.naming.security.credentials":[226,1,229,1]
,"*urlpkgprefixes":[226,1]
,"java.naming.factory.url.pkgs":[226,1,229,1]
,"*username":[226,1]
,"topicconnection":[226,2,228,7,229,2]
,"*message":[226,1]
,"*password":[226,1]
,"password":[226,1,229,2,276,1]
,"*queue":[226,1]
,"*acknowledgementmode":[226,1]
,"acknowledgement":[226,1,229,1]
,"publisher":[226,1,228,5,229,1]
,"*subscriber":[226,1]
,"auto_acknowledge":[226,2,229,2]
,"dups_ok_acknowledge":[226,1,229,1]
,"session_transacted":[226,1,229,1]
,"*listentotopic":[226,1]
,"-true":[226,1]
,"*but":[226,1]
,"*default":[226,1]
,"-jmscachemanagerpeerproviderfactory":[226,2]
,"net.sf.ehcache.distribution.jms.jmscachemanagerpeerproviderfactory":[226,2]
,"initialcontextfactoryname=exampleactivemqinitialcontextfactory":[226,1]
,"providerurl=tcp:\u002F\u002Flocalhost:61616":[226,1,229,1]
,"topicconnectionfactorybindingname=topicconnectionfactory":[226,1]
,"topicbindingname=ehcache":[226,2]
,"activemqinitialcontextfactory":[226,2]
,"initialcontextfactoryname":[226,1,229,1]
,"exampleactivemqinitialcontextfactory":[226,1]
,"{\u002F***{@inheritdoc}":[226,1]
,"*\u002F@override":[226,1]
,"@suppresswarnings":[226,1]
,"unchecked":[226,1]
,"getinitialcontext":[226,1]
,"(hashtable":[226,1]
,"namingexception":[226,2]
,"concurrenthashmap":[226,1,306,3]
,"factorybindingname":[226,1]
,"=(string)":[226,2]
,"environment.get":[226,2]
,"(jmscachemanagerpeerproviderfactory":[226,2]
,".topic_connection_factory_binding_name)":[226,1]
,"{data.put":[226,1]
,"(factorybindingname":[226,1]
,"createconnectionfactory":[226,1]
,"(environment))":[226,1]
,"(urisyntaxexception":[226,1]
,"initialisating":[226,1]
,"connectionfactory":[226,1,230,2]
,"topicbindingname":[226,1]
,".topic_binding_name)":[226,1]
,"data.put":[226,1]
,"(topicbindingname":[226,1]
,"createtopic":[226,1]
,"(topicbindingname))":[226,1]
,"createcontext":[226,1]
,"(environment":[226,1]
,"initialcontextfactoryname=\u2002":[226,1]
,"com.sun.jndi.fscontext.reffscontextfactory":[226,1]
,"providerurl=file:\u002F\u002F\u002Ftmp":[226,1,229,2]
,"topicconnectionfactorybindingname=myconnectionfactory":[226,1]
,"imqobjmgr":[226,3]
,"commands":[226,1,263,1]
,"\u0027myconnectionfactory":[226,1]
,"java.naming.provider.url":[226,1]
,"\u005C=file:\u002F\u002F\u002Ftmp":[226,1]
,"java.naming.factory.initial=com.sun.jndi.fscontext.reffscontextfactory":[226,2]
,"\u0027ehcache":[226,1,261,2,262,1]
,"\u0027imqdestinationname=ehcachetopicdest":[226,1]
,"java.naming.provider.url\u005C=file:\u002F\u002F\u002Ftmp":[226,1]
,"net.sf.ehcache.distribution.jms.jmscachereplicatorfactory":[226,2,229,2]
,"asynchronousreplicationintervalmillis=1000":[226,1]
,"non-cache":[227,1]
,"mimetype":[227,8,228,4]
,"<ignored>":[227,1]
,"labeled":[227,1]
,"remove_all":[227,3,228,1]
,"objectmessage":[227,3,228,3,229,1]
,"typed":[227,1]
,"textmessage":[227,2,228,1]
,"-stored":[227,2]
,"mimetypebytearray":[227,3,228,4]
,"text\u002Fplain":[227,1]
,"bytesmessage":[227,2,228,1]
,"application\u002Foctet-stream":[227,1,228,2]
,"application\u002Fxml":[227,1,228,2]
,"heavily":[228,1]
,"ehcachetopicdest":[228,6]
,"getmqconnection":[228,1]
,"jmsexception":[228,1]
,"{com.sun.messaging.connectionfactory":[228,1]
,"com.sun.messaging.connectionfactory":[228,1]
,"factory.setproperty":[228,2]
,"(connectionconfiguration.imqaddresslist":[228,1]
,"localhost:7676":[228,1]
,"(connectionconfiguration.imqreconnectenabled":[228,1]
,"myconnection":[228,2]
,"=factory.createtopicconnection":[228,1]
,"payload":[228,1]
,"=getmqconnection":[228,5]
,"connection.start":[228,5]
,"topicsession":[228,5]
,"publishersession":[228,5]
,"=connection.createtopicsession":[228,5]
,"(false":[228,5]
,"session.auto_acknowledge)":[228,5]
,"=publishersession.createobjectmessage":[228,3]
,"(payload)":[228,1]
,"message.setstringproperty":[228,16]
,"(action_property":[228,5]
,"(cache_name_property":[228,5]
,"\u002F\u002Fdon\u0027t":[228,1]
,"\u002F\u002Fmessage.setstringproperty":[228,1]
,"(mime_type_property":[228,3]
,"null)":[228,1]
,"\u002F\u002Fshould":[228,1]
,"(key_property":[228,4]
,"1234":[228,8]
,"=publishersession.createtopic":[228,5]
,"topicpublisher":[228,5]
,"=publishersession.createpublisher":[228,5]
,"(topic)":[228,5]
,"publisher.send":[228,5]
,"(message)":[228,5]
,"connection.stop":[228,3]
,"version=\u005C\u0022":[228,1]
,"1.0\u005C\u0022":[228,1]
,"?>\u005Cn":[228,1]
,"<oldjoke>\u005Cn":[228,1]
,"<burns>":[228,1]
,"<quote>":[228,2]
,"goodnight":[228,2]
,"<\u002Fquote>":[228,2]
,",\u005Cn":[228,1]
,"gracie":[228,2]
,"<\u002Fburns>\u005Cn":[228,1]
,"<allen>":[228,1]
,"<\u002Fallen>\u005Cn":[228,1]
,"<applause\u002F>\u005Cn":[228,1]
,"<\u002Foldjoke>":[228,1]
,"=publishersession.createtextmessage":[228,1]
,"(value)":[228,1]
,"platform\u0027s":[228,1]
,"charset":[228,1]
,"arbitrary":[228,1]
,"{0x34":[228,1]
,"(byte)":[228,2]
,"0xe3":[228,1]
,"0x88}":[228,1]
,"=publishersession.createbytesmessage":[228,1]
,"message.writebytes":[228,1]
,"jmseventmessage":[229,1]
,"getqueue":[229,1]
,"loaderargument":[229,3]
,"defaultloaderargument":[229,2]
,"jmscachemanagerpeerprovider":[229,1]
,"responders":[229,1]
,"responder":[229,2]
,"built-into":[229,1]
,"net.sf.ehcache.distribution.jms.jmscacheloaderfactory":[229,3]
,"initialcontextfactoryname=com.sun.jndi.fscontext.reffscontextfactory":[229,2]
,"replicationtopicconnectionfactorybindingname=myconnectionfactory":[229,2]
,"replicationtopicbindingname=ehcache":[229,3]
,"getqueueconnectionfactorybindingname=queueconnectionfactory":[229,3]
,"getqueuebindingname=ehcachegetqueue":[229,3]
,"timeoutmillis=20000":[229,1]
,"defaultloaderargument=\u002F>":[229,1]
,"providerurl":[229,1]
,"getqueueconnectionfactorybindingname":[229,1]
,"queueconnectionfactory":[229,1]
,"getqueuebindingname":[229,1]
,"-(optional)":[229,1]
,"-an":[229,1]
,"cache.load":[229,1]
,"stringproperty":[229,1]
,"-time":[229,1]
,"reply":[229,1,231,1,232,1,300,1]
,"securityprincipalname":[229,1]
,"securitycredentials":[229,1]
,"urlpkgprefixes":[229,1]
,"username":[229,1]
,"acknowledgementmode":[229,1]
,"subscriber":[229,1]
,"samplecachenorep":[229,2]
,"replicateasynchronously=false":[229,2]
,"replicateputs=false":[229,2]
,"replicateupdates=false":[229,2]
,"replicateremovals=false":[229,2]
,"loaderargument=samplecachenorep":[229,1]
,"initialcontextfactoryname=net.sf.ehcache.distribution.jms":[229,1]
,"testactivemqinitialcontextfactory":[229,1]
,"replicationtopicconnectionfactorybindingname=topicconnectionfactory":[229,1]
,"timeoutmillis=10000":[229,2]
,"username=test":[229,1]
,"password=test":[229,1]
,"reliability":[230,2]
,"gracefully":[230,1]
,"stops":[230,1,272,2]
,"reconnection":[230,1]
,"imqreconnect=\u0027true":[230,1]
,"-without":[230,1]
,"reconnect":[230,2]
,"imqpinginterval=":[230,1]
,"-consumers":[230,1]
,"notice":[230,1]
,"reform":[230,1]
,"perfectly":[231,2]
,"oracle":[231,2]
,"0.4":[231,1]
,"supporting":[231,1]
,"unified":[231,1]
,"(send)":[231,1]
,"jms-based":[232,1]
,"destinatons":[232,1,300,1]
,"5.1":[232,1,300,1]
,"standing":[232,1,300,1]
,"http:\u002F\u002Fissues.apache.org\u002Factivemq\u002Fbrowse\u002Famq-1255":[232,1,300,1]
,"readily":[232,1,300,1]
,"fine":[232,2,272,2,300,1,309,1]
,"messagelisteners":[232,1]
,"mdbs":[232,1]
,"permissive":[232,2]
,"worked":[232,1,272,1]
,"restriction":[232,1,289,1]
,"together":[232,1,239,1,267,2,276,1]
,"accelerating":[235,1]
,"reducing":[235,1]
,"reliance":[235,1]
,"fetching":[235,1]
,"powerful":[235,1]
,"maximizing":[235,1]
,"plug-in":[235,1]
,"substantially":[235,1]
,"intelligent":[235,1]
,"high-speed":[235,1]
,"employ":[235,1]
,"integrates":[235,1,278,1]
,"object\u002Frelational":[235,1]
,"gavin":[235,1,249,1]
,"king":[235,1,249,1]
,"maintainer":[235,1]
,"committer":[235,1,249,1]
,"go\u0027s":[235,1,249,1]
,"first-class":[235,1,249,1]
,"<<ffc-check":[235,1]
,"go\u2019s":[235,1]
,"project\u0027s":[235,2]
,"entity":[235,2]
,"http:\u002F\u002Fwww.hibernate.org\u002F":[235,1]
,"notices":[235,1]
,"-please":[235,1]
,"4.x":[235,1,238,1]
,"2.7.5":[235,1]
,"patch":[235,1]
,"https:\u002F\u002Fhibernate.atlassian.net\u002Fbrowse\u002Fhhh-8732":[235,1]
,"link":[235,1]
,"belong":[235,1]
,"verify":[235,1,280,2]
,"4.>>":[235,1]
,"ehcache-core":[236,1,237,1]
,"http:\u002F\u002Fsourceforge.net\u002Fprojects\u002Fehcache\u002Ffiles\u002Fehcache-core\u002F":[236,1]
,"building":[237,1]
,"<<ffc-consider":[237,1]
,"eliminating":[237,1]
,"qualifying":[237,1]
,"intend":[237,1]
,"kits":[237,1]
,"artifacts":[237,1]
,"artifact":[237,1]
,"repository":[237,1]
,"(pom.xml)":[237,2]
,"<repository>":[237,1]
,"<id>":[237,1]
,"terracotta-releases":[237,1]
,"<\u002Fid>":[237,1]
,"<url>":[237,1]
,"http:\u002F\u002Fwww.terracotta.org\u002Fdownload\u002Freflector\u002Freleases":[237,1]
,"<\u002Furl>":[237,1]
,"<releases>":[237,1]
,"<enabled>":[237,2]
,"<\u002Fenabled>":[237,2]
,"<\u002Freleases>":[237,1]
,"<snapshots>":[237,1]
,"<\u002Fsnapshots>":[237,1]
,"<\u002Frepository>":[237,1]
,"net.sf.ehcache":[237,1,278,1]
,"<version>${ehcacheversion}":[237,1]
,"hibernate-ehcache":[237,6]
,"org.hibernate":[237,2]
,"<version>${hibernateversion}":[237,1]
,"4.0.0":[237,2]
,"hibernate.cfg.xml":[238,2]
,"hibernate.properties":[238,1]
,"3.3":[238,1,248,5]
,"<<sffc-should":[238,1]
,"3.x":[238,1]
,"4.0":[238,1]
,"confusing.>>":[238,1]
,"<property":[238,4,239,5,248,1,276,14,278,5]
,"hibernate.cache.region.factory_class":[238,4,239,3]
,"<\u002Fproperty>":[238,4,239,5,248,1]
,"net.sf.ehcache.hibernate.singletonehcacheregionfactory":[238,1]
,"org.hibernate.cache.ehcache.ehcacheregionfactory":[238,1,239,2]
,"org.hibernate.cache.ehcache.singletonehcacheregionfactory":[238,1]
,"-\u0027false":[239,1]
,"-by":[239,1]
,"hibernate)":[239,1]
,"hibernate.cache.use_second_level_cache":[239,3]
,"hibernate.cache.use_query_cache":[239,3]
,"configurationresourcename":[239,2]
,"provider\u002Fregion-factory":[239,1]
,"searched":[239,1]
,"tells":[239,1]
,"ehcache-2.xml":[239,1]
,"factories":[239,1,248,1]
,"dedicated":[239,1]
,"net.sf.ehcache.configurationresourcename=\u002Fname_of_ehcache.xml":[239,1]
,"sessionfactory":[239,1]
,"configuration.setproperty":[239,1]
,"<prop":[239,3]
,"key=\u0022":[239,3,254,1]
,"<\u002Fprop>":[239,3]
,"told":[240,1]
,"com.somecompany.someproject.domain.country":[240,3,242,2,243,1]
,"<hibernate-mapping>":[240,2]
,"<class":[240,2]
,"table=\u0022":[240,2]
,"ut_countries":[240,2]
,"dynamic-update=\u0022":[240,2]
,"dynamic-insert=\u0022":[240,2]
,"<\u002Fclass>":[240,2]
,"<\u002Fhibernate-mapping>":[240,2]
,"read-write":[240,3,242,1,243,2,244,1]
,"nonstrict-read-write":[240,2,242,1,243,1,244,1]
,"read-only":[240,2,242,1,243,1,244,1]
,"@cache":[240,2]
,"@entity":[240,1]
,"(usage":[240,1]
,"=cacheconcurrencystrategy.read_write)":[240,1]
,"country":[240,1,243,2,244,2]
,"-caches":[240,3]
,"repeatable":[240,2]
,"compromised":[240,1]
,"gain":[241,1]
,"particularly":[241,1]
,"capping":[241,1]
,"swap":[241,1]
,"bases":[242,1]
,"cacheconcurrencystrategy":[242,1,243,1,244,1]
,"advancedsearchfacilities":[243,2]
,"doclet":[243,1]
,"accessor":[243,1]
,"facilities":[243,1,309,1]
,"*@hibernate.set":[243,1]
,"cascade=\u0022":[243,1]
,"inverse=\u0022":[243,1]
,"*@hibernate.collection-key":[243,1]
,"column=\u0022":[243,1]
,"country_id":[243,1]
,"*@hibernate.collection-one-to-many":[243,1]
,"com.wotif.jaguar.domain.advancedsearchfacility":[243,1]
,"*@hibernate.cache":[243,1]
,"getadvancedsearchfacilities":[243,1]
,"com.somecompany.someproject.domain.country.advancedsearchfacilities":[243,1]
,"450":[243,1]
,"standardquerycache":[244,1]
,"updatetimestampscache":[244,1]
,"tracks":[244,1]
,"timestamps":[244,1]
,"recent":[244,1,301,1]
,"fact":[244,1]
,"recommend":[244,1,248,1,279,1]
,"querycache":[244,1]
,"query.setcacheregion":[244,3]
,"whatever":[244,1]
,"descriptive":[244,1]
,"query.administrativeareaspercountry":[244,1]
,"86400":[244,1]
,"getstreettypes":[244,1]
,"country)":[244,1]
,"hibernateexception":[244,1]
,"=createsession":[244,1]
,"=session.createquery":[244,1]
,"st.id":[244,1]
,"st.name":[244,2]
,"streettype":[244,1]
,"st.country.id":[244,1]
,"=:countryid":[244,1]
,"st.sortorder":[244,1]
,"desc":[244,1]
,"query.setlong":[244,1]
,"countryid":[244,1]
,"country.getid":[244,1]
,".longvalue":[244,1]
,"query.setcacheable":[244,2]
,"query.streettypes":[244,2]
,"query.list":[244,1]
,"{session.close":[244,1]
,"miller":[244,1]
,"article":[244,1,256,1,265,1,285,1]
,"non-locking":[244,1]
,"cacheregionfactory":[245,1]
,"http:\u002F\u002Fsvn.terracotta.org\u002Fsvn\u002Fforge\u002Fprojects\u002Fhibernate-tutorial-web\u002Ftrunk":[245,1]
,"tips":[246,1]
,"session.find":[246,3]
,"query.find":[246,2]
,"query.iterate":[246,2]
,"viewing":[247,1]
,"(jmx)":[247,1]
,"ehcachehibernatembean":[247,1]
,"exposes":[247,1]
,"basically":[247,1]
,"interfaces":[247,1]
,"ehcachestats":[247,2]
,"hibernatestats":[247,2]
,"imply":[247,1]
,"hit\u002Fmiss\u002Fput":[247,1]
,"rates":[247,1]
,"maxelementinmemory":[247,1]
,"tti)":[247,1]
,"enable\u002Fdisable":[247,1]
,"3.2":[248,3]
,"deprecated":[248,2]
,"3.5":[248,3]
,"forward-compatible":[248,1]
,"ehcacheprovider":[248,1,294,1]
,"anyone":[248,1]
,"upgrade":[248,2]
,"preparation":[248,1]
,"recognition":[248,1]
,"marked":[248,1]
,"net.sf.ehcache.hibernate.ehcacheprovider":[248,1]
,"leaves":[248,1]
,"avoided":[248,1]
,"unification":[248,1]
,"terracotta\u0027s":[248,1]
,"september":[248,1]
,"2009":[248,1,249,1,265,1]
,"hibernate.cache.provider_class":[248,1]
,"org.terracotta.hibernate.terracottahibernatecacheprovider":[248,1]
,"featured":[248,1]
,"ehcacheregionfactory":[248,1]
,"superset":[248,1]
,"app\u0027s":[249,1]
,"2.1":[249,2]
,"cacheprovider":[249,1]
,"projects":[249,1]
,"cooperated":[249,1]
,"query.executeupdate":[249,1]
,"invalidates":[249,1]
,"regions":[249,1]
,"(those":[249,1]
,"corresponding":[249,1]
,"tables)":[249,1]
,"procedures":[249,1]
,"https:\u002F\u002Fhibernate.onjira.com\u002Fbrowse\u002Fhhh-2224":[249,1]
,"identifies":[249,1]
,"treat":[249,1]
,"differently":[249,1]
,"fall-through":[249,1]
,"soft-locked":[249,2]
,"evicted)":[249,1]
,"obviously":[249,1]
,"non-fatal":[249,1]
,"rise":[249,1]
,"ships":[251,1]
,"community":[251,1]
,"engaged":[251,1]
,"lots":[251,1,272,1]
,"raymond":[251,1]
,"camden\u0027s":[251,1]
,"in-depth":[251,1]
,"analysis":[251,1]
,"days":[251,1]
,"aaron":[251,1]
,"west":[251,1]
,"covering":[251,1]
,"day":[251,1,297,1]
,"lib":[252,1,259,1,263,1]
,"<cfobject":[252,2]
,"<cfset":[252,10]
,"cache=cachemanager.getinstance":[252,1]
,".getcache":[252,1]
,"mybookcache":[252,1]
,"\u0022)>":[252,3]
,"mybookelement=#":[252,1]
,"mybook":[252,9]
,"<cfif":[252,3]
,"isdefined":[252,2]
,"mybookelement":[252,4]
,"<cfoutput>":[252,2]
,"<br":[252,4]
,"<\u002Fcfoutput>":[252,2]
,"isstruct":[252,1]
,"(mybookelement.getobjectvalue":[252,1]
,"())>":[252,1]
,"<strong>":[252,2]
,"<\u002Fstrong>":[252,2]
,"<p\u002F>":[252,1]
,"<!--found":[252,1]
,"mybookelement.getobjectvalue":[252,1]
,"<\u002Fcfif>":[252,3]
,"<cfelse>":[252,1]
,"<!--object":[252,1]
,"ahead":[252,1]
,"=structnew":[252,1]
,"()>":[252,1]
,"=structinsert":[252,4]
,"(mybook":[252,4]
,"cachetime":[252,2]
,"lstimeformat":[252,1]
,"(now":[252,1]
,"\u0027hh:mm:sstt\u0027)":[252,1]
,"1)>":[252,4]
,"isbn":[252,3,254,2]
,"abcd123456":[252,1]
,"mybookelement.init":[252,1]
,"mybook)>":[252,1]
,"(mybookelement)>":[252,1]
,"3.1":[254,4,255,4]
,"abstraction":[254,1,262,1]
,"transparently":[254,1]
,"(value=\u0022":[254,1]
,"isbn.id":[254,1]
,"findmanual":[254,1]
,"(isbn":[254,1]
,"checkwarehouse)":[254,1]
,"@cacheevict":[254,2]
,"clears":[254,1]
,"manuals":[254,1]
,"allentries=true)":[254,1]
,"loadmanuals":[254,1]
,"(inputstream":[254,1]
,"led":[255,1]
,"eric":[255,1]
,"dalquist":[255,1]
,"predates":[255,1]
,"findmessage":[255,2]
,"messagecache":[255,2]
,"(cachename":[255,2]
,"(long":[255,1]
,"id)":[255,1,275,1,276,2]
,"@triggersremove":[255,3]
,"invalidation":[255,1]
,"messagescache":[255,1]
,"=when.after_method_invocation":[255,1]
,"=true)":[255,1]
,"addmessage":[255,1]
,"message)":[255,1]
,"http:\u002F\u002Fblog.goyello.com\u002F2010\u002F07\u002F29\u002Fquick-start-with-ehcache-annotations-for-spring\u002Ffor":[255,1]
,"explaining":[255,1]
,"links":[255,1]
,"http:\u002F\u002Fcode.google.com\u002Fp\u002Fehcache-spring-annotations":[256,1]
,"http:\u002F\u002Fcode.google.com\u002Fp\u002Fehcache-spring-annotations\u002Fwiki\u002Fusingcacheable":[256,1]
,"http:\u002F\u002Fwww.jeviathon.com\u002F2010\u002F04\u002Fcaching-java-methods-with-spring-3.html":[256,1]
,"jruby":[257,1,258,3,259,3,260,2,261,4,262,7,263,1]
,"rails":[257,1,258,1,259,8,260,2,262,21,263,5,269,2]
,"ruby-ehcache":[258,1]
,"strength":[258,1]
,"jruby-ehcache":[259,4,261,2,262,1,263,1]
,"gem":[259,4,261,1,262,2,263,1]
,"jgem":[259,3]
,"sudo":[259,1]
,"gems":[259,1,261,2,262,1]
,"jruby-ehcache-rails2":[259,2]
,"jruby-ehcache-rails3":[259,2]
,"jruby-ehcache-rails":[259,1]
,"gemfile":[259,1,262,1]
,"bundle":[259,1,262,2,300,1]
,"pull":[259,1]
,"2.4.6":[259,1]
,"bundled":[259,1]
,"ehcache-core.jar":[259,1]
,"jruby)":[259,1]
,"rails)":[259,1]
,"native":[260,1]
,"ruby":[260,2,261,4]
,"reside":[260,1]
,"interpreter":[261,1]
,"-rubygems":[261,1]
,"rubyopt":[261,1]
,"export":[261,1]
,"rubyopt=rubygems":[261,1]
,"=ehcache":[261,2,262,1]
,":cachemanager.new":[261,2]
,"(call":[261,1]
,"=manager.cache":[261,3]
,"{:ttl":[261,2]
,"120})":[261,2]
,"unlessexist":[261,1]
,"ifabsent":[261,1]
,"putifabsent":[261,1]
,"elementevictiondata":[261,2]
,"element\u2019s":[261,1]
,"expiresin":[261,1]
,"elementattributes":[261,1]
,"simpleehcache":[261,1]
,"{answer.value}":[261,1]
,"question":[261,3]
,"\u0027unknown":[261,1]
,"{question}":[261,1]
,"cachemanager.new":[261,1]
,":ttl":[261,1]
,"ruby\u0027s":[262,1]
,"models":[262,1]
,"everywhere":[262,1]
,"environment.rb":[262,1]
,"lines":[262,2]
,"config\u002Fenvironment.rb":[262,1]
,":cachemanager.new.cache":[262,1]
,"rails-managed":[262,1]
,"underneath":[262,1]
,"date":[262,1,275,1]
,"memcached":[262,2,267,1]
,"switching":[262,1]
,"development.rb":[262,2]
,"production.rb)":[262,1]
,"config.cache_store":[262,2]
,"=:ehcache_store":[262,3]
,"{:cache_name":[262,1]
,"\u0027rails_cache":[262,1]
,":ehcache_config":[262,3]
,"\u0027ehcache.xml":[262,1]
,"rails.cache":[262,1]
,":cache_name":[262,1]
,"absolute":[262,1]
,"app\u2019s":[262,1]
,"rails.cache.write":[262,2]
,"rails.cache.read":[262,1]
,"agnostic":[262,1]
,"switch":[262,1]
,"production)":[262,1]
,"hash":[262,2]
,"camelcase":[262,1]
,"underscore":[262,1]
,"(\u0027key":[262,1]
,"\u0027value":[262,1]
,":time_to_idle":[262,1]
,"60.seconds":[262,2]
,":timetolive":[262,1]
,"600.seconds)":[262,1]
,"caches_action":[262,2]
,":index":[262,2]
,":expires_in":[262,1]
,":unless_exist":[262,1]
,"config.action_controller.perform_caching":[262,2]
,"=true":[262,2]
,"config.action_controller.cache_store":[262,1]
,"jruby.org":[262,1]
,"rails-bigmemory":[262,2]
,"http:\u002F\u002Fjruby.org\u002Frails3.rb":[262,1]
,"scaffold":[262,2]
,"contacts":[262,3]
,"email_address":[262,1]
,"contactscontroller.rb":[262,1]
,":show":[262,1]
,"expire_action":[262,4]
,":action":[262,4]
,"\u0027index":[262,3]
,"\u0027show":[262,1]
,":id":[262,1]
,"params":[262,1]
,"[:id]":[262,1]
,"destroy":[262,1]
,"ehcache-jruby":[262,1]
,"\u0027ehcache-jruby-rails3":[262,1]
,"it.)":[262,1]
,".rb":[262,1]
,"rake":[262,2]
,"db:create":[262,1]
,"db:migrate":[262,1]
,"ready":[262,1]
,"editing":[262,1]
,"deleting":[262,1]
,"http:\u002F\u002Flocalhost:3000\u002Fcontacts":[262,1]
,"ehcache-core-ee.jar":[263,1]
,"overflowtooffheap=\u0022":[263,1]
,"cycles":[263,1]
,"maxdirectmemorysize":[263,2]
,"degradation":[263,1]
,"-j-dcom.tc.productkey.path=\u002Fpath\u002Fto\u002Fkey":[263,1]
,"-j-xx:maxdirectmemorysize=2g":[263,1]
,"points":[263,1]
,"license":[263,1]
,"unused":[263,1]
,"uses)":[263,1]
,"(gae)":[265,1]
,"ehcache-googleappengine":[265,1]
,"combines":[265,1]
,"google\u0027s":[265,2]
,"memcache":[265,1]
,"worlds":[265,1]
,"-ehcache":[265,2]
,"microseconds":[265,1]
,"60ms":[265,1]
,"client-server":[265,1]
,"memcacheg":[265,1,267,7]
,"-because":[265,1]
,"cheaper":[265,1]
,"restricts":[265,1]
,"networking":[265,1]
,"threading":[265,1]
,"workarounds":[265,1]
,"june":[265,1]
,"http:\u002F\u002Fgregluck.com\u002Fblog\u002F?":[265,1]
,"s=limitations":[265,1]
,"evidence":[265,1]
,"class=":[266,2]
,".\u002F>":[266,2]
,"strategy=none":[266,1]
,"bootstrapcacheloaderfactory":[266,1]
,"<!--example":[266,1]
,"cache-->":[266,1]
,"hierarchy":[267,1]
,"sits":[267,1]
,"combining":[267,1]
,"elegantly":[267,1]
,"memcachedg":[267,1]
,"memorystore\u0027s":[267,1]
,"acceleration":[267,2]
,"appengine-web.xml":[267,1]
,"<static-files>":[267,1]
,"<include":[267,1]
,"path=\u0022\u002F**.png":[267,1]
,"<exclude":[267,1]
,"path=\u0022\u002Fdata\u002F**.png":[267,1]
,"<\u002Fstatic-files>":[267,1]
,"troubleshooting":[268,1,280,1,289,1,305,1]
,"noclassdeffounderror":[268,1]
,"java.lang.noclassdeffounderror":[268,1]
,"java.rmi.server.uid":[268,1]
,"easiest":[269,1]
,"play":[269,1]
,"increment":[269,1]
,"decrement":[269,1]
,"documents":[271,1]
,"5.5":[271,1,300,1]
,"rejoining":[272,1]
,"reload":[272,1]
,"restart\u002Freload":[272,1]
,"rejoin":[272,1]
,"nested":[272,2,301,2,310,1]
,"java.io.eofexception":[272,1]
,"$tomcat_home\u002Fcommon\u002Flib":[272,1]
,"fixes":[272,2]
,"class-loader":[272,1]
,"leak":[272,3]
,"continually":[272,1]
,"redeploy":[272,2]
,"leaks":[272,1]
,"$tomcat\u002Fcommon\u002Flib":[272,1]
,"-problem":[272,1]
,"rmicachepeer":[272,2]
,"java.rmi.unmarshalexception":[272,1]
,"java.net.malformedurlexception":[272,1]
,"files\u002Fapache":[272,1]
,"tomcat\u0027s":[272,2]
,"server.xml":[272,2]
,"occurring":[272,2,304,1]
,"<host>":[272,2]
,"connector":[272,1]
,"hitting":[272,1]
,"presently":[272,1]
,"unknown":[272,1]
,"tomcat-specific":[272,1]
,"object\u002Fdata":[274,1,275,1]
,"(dao\u002Fdal)":[274,1,275,1]
,"dao\u002Fdal":[275,2]
,"instantiate":[275,3]
,"member":[275,2]
,"dao":[275,4,276,6]
,"identifying":[275,1]
,"kinds":[275,1]
,"tolerate":[275,1]
,"cacheable":[275,1,276,2]
,"getbyid":[275,1,276,1]
,"findxxx":[275,1]
,"guice":[275,3]
,"setter":[275,1]
,"setcache":[275,1,276,1]
,"injection":[275,1]
,"methodology":[275,1,276,1]
,"dao-based":[276,1]
,"wiring":[276,1]
,"petdao":[276,4]
,"modeled":[276,1]
,"petclinic":[276,1]
,"genericdao":[276,5]
,"extend":[276,1]
,"simplejdbctemplate":[276,3]
,"job":[276,1]
,"shortly":[276,1]
,"cachewrapper.java":[276,1]
,"get\u002Fput":[276,1]
,"ehcachewrapper.java":[276,1]
,"cacheentryadapter":[276,1]
,"<v>":[276,1]
,"adapter)":[276,1]
,"genericdao.java":[276,1]
,"baseentity>":[276,1]
,"{protected":[276,1]
,"datasource":[276,8]
,"protected":[276,1]
,"jdbctemplate":[276,5]
,"\u002F*here":[276,1]
,"*\u002Fprotected":[276,1]
,"setjdbctemplate":[276,1]
,"jdbctemplate)":[276,1]
,"{this.jdbctemplate":[276,1]
,"=jdbctemplate":[276,1]
,"setdatasource":[276,1]
,"datasource)":[276,1]
,"{this.datasource":[276,1]
,"=datasource":[276,1]
,"\u002F*the":[276,1]
,"((value":[276,1]
,"(id))":[276,1]
,"{value":[276,1]
,"=this.jdbctemplate.queryforobject":[276,1]
,"(findbyid":[276,1]
,"mapper":[276,1]
,"(id":[276,1]
,"\u002F**rest":[276,1]
,"**\u002F\u002F**":[276,3]
,"**\u002F}":[276,2]
,"petdaoimpl.java":[276,1]
,"pet":[276,5]
,"really":[276,1]
,"petdaoimpl":[276,2]
,"<integer":[276,1]
,"pet>":[276,1]
,"{\u002F**":[276,1]
,"application.xml":[276,1]
,"<!--datasource":[276,1]
,"friends":[276,1]
,"<bean":[276,6]
,"id=\u0022":[276,5]
,"org.springframework.jdbc.datasource":[276,1]
,".fasterlazyconnectiondatasourceproxy":[276,1]
,"targetdatasource":[276,1]
,"ref=\u0022":[276,6]
,"datasourcetarget":[276,2]
,"<\u002Fbean>":[276,6]
,"com.mchange.v2.c3p0.combopooleddatasource":[276,1]
,"destroy-method=\u0022":[276,1]
,"value=\u0022${jdbc.username}":[276,1]
,"value=\u0022${jdbc.password}":[276,1]
,"driverclass":[276,1]
,"value=\u0022${jdbc.driverclassname}":[276,1]
,"jdbcurl":[276,1]
,"value=\u0022${jdbc.url}":[276,1]
,"initialpoolsize":[276,1]
,"value=\u0022":[276,7,278,5]
,"maxpoolsize":[276,1]
,"minpoolsize":[276,1]
,"acquireincrement":[276,1]
,"acquireretryattempts":[276,1]
,"<!--jdbctemplate":[276,1]
,"org.springframework.jdbc.core.simple.simplejdbctemplate":[276,1]
,"<constructor-arg":[276,3]
,"<!--the":[276,3]
,"ehcachemanagerfactorybean":[276,1]
,"configlocation":[276,1]
,"classpath:${ehcache.config}":[276,1]
,"injected":[276,1]
,"petcache":[276,2]
,"pets":[276,1]
,"openjpa":[277,1,278,2,279,1,280,1,281,2]
,"openjpca":[278,1]
,"apache":[278,1,281,1]
,"ehcache-openjpa":[278,2]
,"0.1":[278,1]
,"http:\u002F\u002Fehcache.org\u002Fdownloads\u002Fcatalog":[278,1]
,"persistence.xml":[278,1]
,"openjpa.log":[278,1]
,"sql=trace":[278,1]
,"openjpa.querycache":[278,1]
,"openjpa.datacache":[278,1]
,"openjpa.remotecommitprovider":[278,1]
,"sjvm":[278,1]
,"openjpa.datacachemanager":[278,1]
,"com.terracotta.domain.datatest":[278,1]
,"200":[278,1]
,"2400":[278,2]
,"20000":[278,2]
,"openjpa-querycache":[278,1]
,"org.terracotta.ehcachedx.monitor.probe.probepeerlistenerfactory":[278,1]
,"monitoraddress=localhost":[278,1]
,"monitorport=9889":[278,1]
,"memorymeasurement=true":[278,1]
,"ehcache\u2019s":[279,1]
,"(from":[279,1]
,"0.2)":[279,1]
,"tuned":[279,1]
,"view":[280,1]
,"default.)":[280,1]
,"http:\u002F\u002Fopenjpa.apache.org\u002Fbuilds\u002F1.0.2\u002Fapache-openjpa-1.0.2\u002Fdocs\u002Fmanual\u002Fref_guide_caching.html":[281,1]
,"(part":[284,1]
,"project)":[284,1]
,"http:\u002F\u002Fgrails.org\u002Fplugin\u002Fspringcache":[284,1]
,"http:\u002F\u002Fgquick.blogspot.com\u002F2010\u002F03\u002Fclustering-grails-app-with-terracotta.html":[285,1]
,"1.4":[287,1]
,"-1.7":[287,1]
,"deploying":[288,1]
,"area":[288,1]
,"dependent":[288,1]
,"glassfish_home":[288,1]
,"$glassfish_home\u002Fbin":[288,1]
,"domain1":[288,7]
,"ant":[288,2]
,"deploy-default-web-app-glassfish":[288,1]
,"asadmin":[288,3]
,"start-domain":[288,2]
,"stop-domain":[288,1]
,"overwrite":[288,1]
,"9080":[288,1]
,"glassfish-configuration":[288,1]
,"quick-start":[288,1]
,"https:\u002F\u002Fglassfish.java.net\u002Fdownloads\u002Fquickstart\u002Findex.html":[288,1]
,"breach":[289,1]
,"security":[289,1]
,"domain.xml":[289,1]
,"<jvm-options>-djava.security.manager":[289,1]
,"<\u002Fjvm-options>":[289,1]
,"1.3":[289,2]
,"payloadutil":[289,1]
,"reports":[289,1]
,"ungzip":[289,1]
,"(different":[289,1]
,"glassfish)":[289,1]
,"https:\u002F\u002Fgithub.com\u002Fjsr107\u002Fehcache-jcache":[291,1]
,"questions":[293,1,296,1,299,1,302,1,305,1,308,1]
,"svn":[294,1]
,"getinstance":[294,1]
,"remember":[294,1,297,1]
,"coverage":[294,2]
,"<<ffc-where":[294,1]
,"don":[294,1]
,"(distributed":[294,1]
,"go.)":[294,1]
,"(user":[294,1]
,"provided)":[294,1]
,"\u0022\u002F`>":[295,1]
,"cachereplicator":[295,1]
,".getcachemanagereventlistenerregistry":[295,1]
,"maxsize":[297,1]
,"infinite":[297,1]
,"retrieval":[297,1]
,"safer":[297,1]
,"updatingcacheentryfactory":[297,1]
,"modifying":[297,1]
,"targeted":[297,1]
,"cacheentryfactories":[297,1]
,"selfpopulatingcaches":[297,1]
,"1.2":[297,1]
,"memorystores":[297,1]
,"advised":[297,1]
,"optimize":[297,1,303,1]
,"(tti)":[297,1]
,"eternally":[297,1]
,"multiplied":[297,1]
,"pushed":[297,1]
,"tradeoff":[297,1]
,"diskstore\u0027s":[297,1]
,"mount":[297,1]
,"linux":[297,1,301,1]
,"ramfs":[297,1]
,"2gb":[297,1]
,"consume":[298,1]
,"consumed":[298,1,306,2]
,"-xss":[298,1]
,"varies":[298,1]
,"512kb":[298,1]
,"linux)":[298,1]
,"100kb":[298,1]
,"spool":[298,1]
,"jdk1.5":[298,2]
,"registries":[298,1]
,"practical":[298,1]
,"telltale":[298,1]
,"java.rmi.server.exportexception":[298,1]
,"objid":[298,1]
,"indeed":[298,1]
,"interoperability":[299,1]
,"interact":[300,3]
,"standardquerycaches":[300,1]
,"blockingcachemanager":[300,1]
,"selfpopulatingcachemanager":[300,1]
,"cachemanagertest":[300,1,303,1]
,"cachetest":[300,1]
,"selfpopulatingcachetest":[300,1]
,"http:\u002F\u002Fopensource.atlassian.com\u002Fprojects\u002Fhibernate\u002Fbrowse\u002Fhhh-3392":[300,1]
,"3.3.0.cr2":[300,1]
,"july":[300,1]
,"2008":[300,1,301,1]
,"osgi":[300,2]
,"seeusing":[300,1]
,"retaining":[300,1]
,"thought":[300,1]
,"ubuntu":[301,1]
,"debian":[301,1]
,"[replication":[301,1]
,"thread]":[301,1]
,"rmiasynchronouscachereplicator.flushreplicationqueue":[301,1]
,"(324)":[301,1]
,"java.net.connectexception":[301,2]
,"java.rmi.connectexception":[301,1]
,"ubuntu\u002Fdebian":[301,1]
,"distros":[301,1]
,"$hostname":[301,1]
,"mapped":[301,1]
,"device":[301,1]
,"assign":[301,1]
,"seeing":[301,1]
,"crack":[301,1]
,"permit":[301,1]
,"checks":[301,1]
,"vendor":[301,1]
,"cache.getquiet":[303,1]
,"net.sf.ehcache.disabled=true":[303,1]
,"achieve":[303,1]
,"<<ffc":[303,1]
,"changed.>>":[303,1]
,"test2":[303,1]
,"cache.getkeys":[303,1]
,"oldcachename":[303,1]
,"finish":[303,1]
,"stopped":[303,1]
,"exit":[303,1]
,"brand":[303,1]
,"confirms":[303,1]
,"testcreateshutdowncreate":[303,1]
,"counters":[303,1]
,"gathering":[303,2]
,"statistics=\u0022":[303,1]
,"experience":[303,1]
,"tool":[304,1]
,"remotedebugger":[304,1]
,"improved":[304,1]
,"status_uninitialised":[306,1]
,"testdiskonly":[306,1]
,"(mycache)":[306,1]
,"ourselves":[306,1]
,"arraylist":[306,2]
,"http:\u002F\u002Fwww.codeinstructions.com\u002F2008\u002F09\u002Finstance-pools-with-weakhashmap.html":[306,1]
,"map.put":[306,1]
,"(pool.replace":[306,1]
,"keyarray.set":[306,1]
,"(index":[306,1]
,"pool.replace":[306,1]
,"producing":[306,1]
,"handing":[306,1]
,"introduce":[306,1]
,"iteration":[306,1]
,"keyarray":[306,1]
,"bringing":[306,1]
,"pre":[306,2]
,"1.7":[306,1]
,"considerably":[306,1]
,"crashed":[306,1]
,"intact":[306,1]
,"swapping":[306,1]
,"crash-resilient":[306,1]
,"persistencestrategy=\u0022":[306,1]
,"(whether":[306,1]
,"softreferences":[307,5]
,"interrupted":[307,1]
,"collected":[307,1]
,"softreference":[307,1]
,"reclaimed":[307,4]
,"cachepeer":[307,1]
,"fix":[307,1,309,1]
,"-xms":[307,2]
,"warming":[307,1]
,"interruption":[307,1]
,"dangerously":[307,1]
,"java.lang.verifyerror":[309,1]
,"backport":[309,1]
,"backport-concurrent":[309,1]
,"java.util.concurrency":[309,1]
,"-java":[309,1]
,"4-6":[309,1]
,"javax.servlet.servletexception":[309,1]
,"application\u0027s":[309,1]
,"diskstorepath":[309,1]
,"c:\u005Ctemp\u005Ctempcache":[309,1]
,"trying":[309,1]
,"resolving":[309,1]
,"eliminate":[309,1]
,"i.e":[309,1]
,"net.sf.ehcache.hibernate.singletonehcacheprovider":[309,1]
,"cachemanager.add":[309,1]
,"remotecacheexception":[310,1]
,"net.sf.ehcache.distribution.remotecacheexception":[310,1]
,"unmarshaling":[310,1]
,"java.net.sockettimeoutexception":[310,1]
,"timed":[310,1]
,"sender":[310,1]
,"120000":[310,1]
,"hostname=fully_qualified_hostname_or_ip":[310,1]
,"sockettimeoutmillis=120000":[310,1]
}
}
;Search.control.advance(info);
